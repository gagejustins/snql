{"version":3,"file":"PageViewPerformanceManager.js","sourceRoot":"","sources":["../../../src/JavaScriptSDK/Telemetry/PageViewPerformanceManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {\r\n    Util, IPageViewPerformanceTelemetryInternal, DateTimeUtils\r\n} from '@microsoft/applicationinsights-common';\r\nimport {\r\n    IAppInsightsCore, IDiagnosticLogger, LoggingSeverity,\r\n    _InternalMessageId\r\n} from '@microsoft/applicationinsights-core-js';\r\n\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nexport class PageViewPerformanceManager {\r\n    private _logger: IDiagnosticLogger;\r\n    private MAX_DURATION_ALLOWED = 3600000; // 1h\r\n\r\n    constructor(core: IAppInsightsCore) {\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n\r\n    }\r\n\r\n    public populatePageViewPerformanceEvent(pageViewPerformance: IPageViewPerformanceTelemetryInternal): void {\r\n        pageViewPerformance.isValid = false;\r\n\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n\r\n            if (total == 0) {\r\n                this._logger.throwInternal(\r\n                    LoggingSeverity.WARNING,\r\n                    _InternalMessageId.ErrorPVCalc,\r\n                    \"error calculating page view performance.\",\r\n                    { total: total, network: network, request: request, response: response, dom: dom });\r\n\r\n            } else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(\r\n                    LoggingSeverity.WARNING,\r\n                    _InternalMessageId.InvalidDurationValue,\r\n                    \"Invalid page load duration value. Browser perf data won't be sent.\",\r\n                    { total: total, network: network, request: request, response: response, dom: dom });\r\n\r\n            } else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(\r\n                    LoggingSeverity.WARNING,\r\n                    _InternalMessageId.ClientPerformanceMathError,\r\n                    \"client performance math error.\",\r\n                    { total: total, network: network, request: request, response: response, dom: dom });\r\n\r\n            } else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getPerformanceTiming(): PerformanceTiming {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    public isPerformanceTimingSupported() {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    }\r\n\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    public isPerformanceTimingDataReady() {\r\n        var timing = window.performance.timing;\r\n\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    }\r\n\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    public shouldCollectDuration(...durations: number[]): boolean {\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        let botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        let userAgent = navigator.userAgent;\r\n        let isGoogleBot = false;\r\n\r\n        if (userAgent) {\r\n            for (let i = 0; i < botAgentNames.length; i++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n            }\r\n        }\r\n\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        } else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n"]}