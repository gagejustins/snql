{"version":3,"file":"applicationinsights-analytics-js.min.js","sources":["../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../dist-esm/JavaScriptSDK/ApplicationInsights.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel)\r\n                _this.severityLevel = severityLevel;\r\n            if (id)\r\n                _this.id = id;\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel)\r\n                _this.severityLevel = exception.severityLevel;\r\n            if (exception.id)\r\n                _this.id = exception.id;\r\n            if (exception.problemGroup)\r\n                _this.problemGroup = exception.problemGroup;\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!CoreUtils.isNullOrUndefined(exception.ver))\r\n                _this.ver = exception.ver;\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual))\r\n                _this.isManual = exception.isManual;\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n    * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n    * @param currentPageName Name of page to begin timing for visit duration\r\n    * @param currentPageUrl Url of page to begin timing for visit duration\r\n    */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            //TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib_1.__assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this._logger, exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === \"object\" && typeof history.pushState === \"function\" && typeof history.replaceState === \"function\"\r\n            && typeof window === \"object\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"pushState\"));\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"replaceState\"));\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = Util.newId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location.pathname;\r\n                }\r\n                setTimeout(function () {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: null, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }, _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.1.1\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","StorageType","FieldType","__assign","assign","t","s","i","n","arguments","length","call","apply","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","_InternalMessageId","ChannelController","processTelemetry","item","channelQueue","forEach","queues","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","isCookieUseDisabled","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","priority","queueItem","identifier","Error","setNextPlugin","push","arr","plugin","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","throwInternal","WARNING","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","Event","envelopeType","dataType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","TelemetryItemCreator","envelopeName","customProperties","systemProperties","telemetryItem","ext","PageViewManager","trackPageView","pageView","title","uri","_pageViewPerformanceManager","isPerformanceTimingSupported","appInsights","sendPageViewInternal","_channel","q","flush","_logger","pageViewSent","customDuration","getPerformanceTiming","shouldCollectDuration","overridePageViewDuration","handle","setInterval","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","isValid","pageViewPerformanceSent","sendPageViewPerformanceInternal","CRITICAL","pageViewPerformanceManager","getTransmissionControls","PageVisitTimeManager","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageVisitTimeTrackingHandler","pageName","pageUrl","pageVisitTime","warnToConsole","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","prevPageVisitDataKeyName","currPageVisitData","PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","parse","pageVisitStartTime","PageViewPerformanceManager","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","durationProperty","ApplicationInsights","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isStorageUseDisabled","isBrowserLinkTrackingEnabled","enableAutoRouteTracking","namePrefix","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","event","EventTelemetry","track","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","referrer","_trackAjaxAttempts","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","exceptionPartB","trackException","_onerror","properties_1","URL","_sendCORSException","errorString","addTelemetryInitializer","_initialize","_isInitialized","_globalconfig","instrumentationKey","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","f","instance","autoExceptionInstrumented","originalOnError_1","onerror","handled","history","pushState","replaceState","_self_1","_properties","ret","dispatchEvent","context","telemetryTrace","traceID","setTimeout","autoRoutePVDelay","PageName","PageUrl","average","sampleCount","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Version","bind","_events","_name"],"mappings":"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"}