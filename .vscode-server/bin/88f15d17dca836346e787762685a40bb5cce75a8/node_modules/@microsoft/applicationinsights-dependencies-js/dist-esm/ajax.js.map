{"version":3,"file":"ajax.js","sourceRoot":"","sources":["../src/ajax.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {\r\n    RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, ICorrelationConfig,\r\n    RemoteDependencyData, DateTimeUtils, DisabledPropertyName, Data, IDependencyTelemetry,\r\n    IConfig, ConfigurationManager, ITelemetryContext, PropertiesPluginIdentifier, IPropertiesPlugin\r\n} from '@microsoft/applicationinsights-common';\r\nimport {\r\n    CoreUtils, LoggingSeverity, _InternalMessageId, IDiagnosticLogger,\r\n    IAppInsightsCore, ITelemetryPlugin, IConfiguration, IPlugin, ITelemetryItem\r\n} from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\n\r\nexport interface XMLHttpRequestInstrumented extends XMLHttpRequest {\r\n    ajaxData: ajaxRecord;\r\n}\r\n\r\nexport interface IDependenciesPlugin {\r\n    trackDependencyData(dependency: IDependencyTelemetry);\r\n}\r\n\r\nexport interface IInstrumentationRequirements extends IDependenciesPlugin {\r\n    includeCorrelationHeaders: (ajaxData: ajaxRecord, input?: Request | string, init?: RequestInit, xhr?: XMLHttpRequestInstrumented) => any;\r\n}\r\n\r\nexport class AjaxMonitor implements ITelemetryPlugin, IDependenciesPlugin, IInstrumentationRequirements {\r\n    private currentWindowHost;\r\n    protected initialized: boolean; // ajax monitoring initialized\r\n    protected _fetchInitialized: boolean; // fetch monitoring initialized\r\n    protected _core: IAppInsightsCore;\r\n    protected _config: ICorrelationConfig;\r\n    protected _nextPlugin: ITelemetryPlugin;\r\n    protected _trackAjaxAttempts: number = 0;\r\n    private _context: ITelemetryContext;\r\n\r\n    constructor() {\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n\r\n    ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    ///<param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    ///<returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    private isMonitoredInstance(xhr?: XMLHttpRequestInstrumented, excludeAjaxDataValidation?: boolean, request?: Request | string, init?: RequestInit): boolean {\r\n\r\n        let disabledProperty = false;\r\n        let ajaxValidation = true;\r\n        let initialized = false;\r\n        if (typeof request !== 'undefined') { // fetch\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        } else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n\r\n    }\r\n\r\n    ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    private supportsAjaxMonitoring(): boolean {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        } catch (ex) {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private instrumentOpen() {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (\r\n                        !(<XMLHttpRequestInstrumented>this).ajaxData ||\r\n                        !(<XMLHttpRequestInstrumented>this).ajaxData.xhrMonitoringState.openDone\r\n                    )) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            } catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(\r\n                    LoggingSeverity.CRITICAL,\r\n                    _InternalMessageId.FailedMonitorAjaxOpen,\r\n                    \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\",\r\n                    {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: Util.dump(e)\r\n                    });\r\n            }\r\n\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    private openHandler(xhr: XMLHttpRequestInstrumented, method, url, async) {\r\n        let id: string;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        } else {\r\n            id = Util.newId();\r\n        }\r\n\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true\r\n        xhr.ajaxData = ajaxData;\r\n\r\n        this.attachToOnReadyStateChange(xhr);\r\n    }\r\n\r\n    private static getFailedAjaxDiagnosticsMessage(xhr: XMLHttpRequestInstrumented): string {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        } catch (e) { }\r\n\r\n        return result;\r\n    }\r\n\r\n    private instrumentSend() {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !(<XMLHttpRequestInstrumented>this).ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            } catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(\r\n                    LoggingSeverity.CRITICAL,\r\n                    _InternalMessageId.FailedMonitorAjaxSend,\r\n                    \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\",\r\n                    {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: Util.dump(e)\r\n                    });\r\n            }\r\n\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    private sendHandler(xhr: XMLHttpRequestInstrumented, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    }\r\n\r\n    private instrumentAbort() {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !(<XMLHttpRequestInstrumented>this).ajaxData.xhrMonitoringState.abortDone) {\r\n                    (<XMLHttpRequestInstrumented>this).ajaxData.aborted = 1;\r\n                    (<XMLHttpRequestInstrumented>this).ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            } catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(\r\n                    LoggingSeverity.CRITICAL,\r\n                    _InternalMessageId.FailedMonitorAjaxAbort,\r\n                    \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\",\r\n                    {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: Util.dump(e)\r\n                    });\r\n            }\r\n\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    private attachToOnReadyStateChange(xhr: XMLHttpRequestInstrumented) {\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", () => {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") == -1) {\r\n                    ajaxMonitorInstance._core.logger.throwInternal(\r\n                        LoggingSeverity.CRITICAL,\r\n                        _InternalMessageId.FailedMonitorAjaxRSC,\r\n                        \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\",\r\n                        {\r\n                            ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                            exception: Util.dump(e)\r\n                        });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private onAjaxComplete(xhr: XMLHttpRequestInstrumented) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.WARNING,\r\n                _InternalMessageId.FailedMonitorAjaxDur,\r\n                \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\",\r\n                {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                    requestSentTime: xhr.ajaxData.requestSentTime,\r\n                    responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n                });\r\n        }\r\n        else {\r\n            var dependency = <IDependencyTelemetry>{\r\n                id: xhr.ajaxData.id,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n\r\n            this.trackDependencyDataInternal(dependency);\r\n\r\n            xhr.ajaxData = null;\r\n        }\r\n    }\r\n\r\n    private getAjaxCorrelationContext(xhr: XMLHttpRequestInstrumented) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.WARNING,\r\n                _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader,\r\n                \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\",\r\n                {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                    exception: Util.dump(e)\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    protected trackDependencyDataInternal(dependency: IDependencyTelemetry, properties?: { [key: string]: any }, systemProperties?: { [key: string]: any }) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            let item = TelemetryItemCreator.create<IDependencyTelemetry>(\r\n                dependency,\r\n                RemoteDependencyData.dataType,\r\n                RemoteDependencyData.envelopeType,\r\n                this._core.logger,\r\n                properties,\r\n                systemProperties);\r\n\r\n            this._core.track(item);\r\n        } else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.MaxAjaxPerPVExceeded,\r\n                \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\",\r\n                true);\r\n        }\r\n\r\n        ++this._trackAjaxAttempts;\r\n    }\r\n\r\n    trackDependencyData(dependency: IDependencyTelemetry, properties?: { [key: string]: any }) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    }\r\n\r\n    public processTelemetry(item: ITelemetryItem) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    }\r\n\r\n    public static identifier: string = \"AjaxDependencyPlugin\";\r\n    public identifier: string = AjaxMonitor.identifier;\r\n\r\n    setNextPlugin(next: ITelemetryPlugin) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    }\r\n\r\n    priority: number = 120;\r\n\r\n    // Fetch Stuff\r\n    protected instrumentFetch(): void {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        const originalFetch: (input?: Request | string, init?: RequestInit) => Promise<Response> = window.fetch;\r\n        const fetchMonitorInstance: AjaxMonitor = this;\r\n        window.fetch = function fetch(input?: Request | string, init?: RequestInit): Promise<Response> {\r\n            let fetchData: ajaxRecord;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                } catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(\r\n                        LoggingSeverity.CRITICAL,\r\n                        _InternalMessageId.FailedMonitorAjaxOpen,\r\n                        \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\",\r\n                        {\r\n                            ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                            exception: Util.dump(e)\r\n                        });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(response => {\r\n                    fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                    return response;\r\n                })\r\n                .catch(reason => {\r\n                    fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                    throw reason;\r\n                });\r\n        }\r\n        this._fetchInitialized = true;\r\n    }\r\n\r\n    private isFetchInstrumented(input: Request | string): boolean {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    }\r\n\r\n    private supportsFetch(): boolean {\r\n        let result: boolean = true;\r\n        if (!window || CoreUtils.isNullOrUndefined((window as any).Request) ||\r\n            CoreUtils.isNullOrUndefined((window as any).Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private createFetchRecord(input?: Request | string, init?: RequestInit): ajaxRecord {\r\n        let id: string;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        } else {\r\n            id = Util.newId();\r\n        }\r\n        let ajaxData: ajaxRecord = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        } else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        } else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        } else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        return ajaxData;\r\n    }\r\n\r\n    public includeCorrelationHeaders(ajaxData: ajaxRecord, input?: Request | string, init?: RequestInit, xhr?: XMLHttpRequestInstrumented): any {\r\n        if (input) { // Fetch\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                init.headers.set(RequestHeaders.requestIdHeader, ajaxData.id);\r\n                let appId: string = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n\r\n                return init;\r\n            }\r\n            return init;\r\n        } else if (xhr) { // XHR\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(),\r\n                this.currentWindowHost)) {\r\n                xhr.setRequestHeader(RequestHeaders.requestIdHeader, xhr.ajaxData.id);\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getFailedFetchDiagnosticsMessage(input: Request | Response | string): string {\r\n        let result: string = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += `(url: '${input}')`;\r\n                } else {\r\n                    result += `(url: '${input.url}')`;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.FailedMonitorAjaxOpen,\r\n                \"Failed to grab failed fetch diagnostics message\",\r\n                { exception: Util.dump(e) }\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private onFetchComplete(response: Response, ajaxData: ajaxRecord): void {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(\r\n                    LoggingSeverity.WARNING,\r\n                    _InternalMessageId.FailedMonitorAjaxDur,\r\n                    \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\",\r\n                    {\r\n                        fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                        requestSentTime: ajaxData.requestSentTime,\r\n                        responseFinishedTime: ajaxData.responseFinishedTime\r\n                    });\r\n            } else {\r\n                let dependency: IDependencyTelemetry = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n\r\n                // enrich dependency target with correlation context from the server\r\n                let correlationContext: string = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        } catch (e) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.WARNING,\r\n                _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader,\r\n                \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\",\r\n                {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    exception: Util.dump(e)\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    private onFetchFailed(input: Request | string, ajaxData: ajaxRecord, reason: any): void {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(\r\n                    LoggingSeverity.WARNING,\r\n                    _InternalMessageId.FailedMonitorAjaxDur,\r\n                    \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\",\r\n                    {\r\n                        fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        requestSentTime: ajaxData.requestSentTime,\r\n                        responseFinishedTime: ajaxData.responseFinishedTime\r\n                    });\r\n            } else {\r\n                let dependency: IDependencyTelemetry = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        } catch (e) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.WARNING,\r\n                _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader,\r\n                \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\",\r\n                {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    exception: Util.dump(e)\r\n                });\r\n        }\r\n    }\r\n\r\n    private getFetchCorrelationContext(response: Response): string {\r\n        try {\r\n            let responseHeader: string = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        } catch (e) {\r\n            this._core.logger.throwInternal(\r\n                LoggingSeverity.WARNING,\r\n                _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader,\r\n                \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\",\r\n                {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    exception: Util.dump(e)\r\n                });\r\n        }\r\n    }\r\n\r\n    protected instrumentXhr() {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.initialized = true;\r\n        }\r\n    }\r\n\r\n    public static getDefaultConfig(): ICorrelationConfig {\r\n        const config: ICorrelationConfig = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false\r\n        }\r\n        return config;\r\n    }\r\n\r\n    public static getEmptyConfig(): ICorrelationConfig {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined,\r\n            correlationHeaderDomains: undefined,\r\n        }\r\n    }\r\n\r\n    public initialize(config: IConfiguration & IConfig, core: IAppInsightsCore, extensions: IPlugin[]) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            const defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (let field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n\r\n            if (extensions.length > 0 && extensions) {\r\n                let propExt, extIx = 0;\r\n                while (!propExt && extIx < extensions.length) {\r\n                    if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {\r\n                        propExt = extensions[extIx]\r\n                    }\r\n                    extIx++;\r\n                }\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}