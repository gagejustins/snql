{"version":3,"file":"applicationinsights-channel-js.min.js","sources":["../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Constants.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../dist-esm/SendBuffer.js","../dist-esm/EnvelopeCreator.js","../dist-esm/Serializer.js","../dist-esm/Offline.js","../dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../dist-esm/TelemetryProcessors/Sample.js","../dist-esm/Sender.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel)\r\n                _this.severityLevel = severityLevel;\r\n            if (id)\r\n                _this.id = id;\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel)\r\n                _this.severityLevel = exception.severityLevel;\r\n            if (exception.id)\r\n                _this.id = exception.id;\r\n            if (exception.problemGroup)\r\n                _this.problemGroup = exception.problemGroup;\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!CoreUtils.isNullOrUndefined(exception.ver))\r\n                _this.ver = exception.ver;\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual))\r\n                _this.isManual = exception.isManual;\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = Util.getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.1.1\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = Exception.CreateFromInterface(logger, bd);\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) {\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties;\r\n        var measurements = bd.measurements;\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","import { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !CoreUtils.isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input == \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        this._sample = new Sample(this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[SampleRate] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     */\r\n    Sender.prototype.triggerSend = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    this._sender(payload, async);\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","StorageType","FieldType","__assign","assign","t","s","i","n","arguments","length","call","apply","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","_InternalMessageId","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","msgId","msg","isUserAct","properties","messageId","message","diagnosticText","JSON","stringify","DiagnosticLogger","throwInternal","severity","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","queue","push","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","config","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","ChannelController","processTelemetry","item","channelQueue","forEach","queues","defineProperty","get","enumerable","configurable","initialize","core","extensions","_this","isCookieUseDisabled","channels","invalidChannelIdentifier_1","undefined","sort","a","priority","queueItem","identifier","Error","setNextPlugin","arr","plugin","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","ProcessLegacy","HttpMethod","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","Event","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","CtxTagKeys","ArraySendBuffer","enqueue","payload","_buffer","clear","getItems","batchPayloads","_config","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","MAX_BUFFER_SIZE","_bufferFullMessageSent","_logger","setBuffer","BUFFER_KEY","SENT_BUFFER_KEY","removePayloadsFromBuffer","sentElements","getBuffer","concat","CRITICAL","payloads","buffer","remaining","contains","j","prefixedKey","namePrefix","bufferJson","parse","bufferItems","notDeliveredItems","EnvelopeCreator","extractProperties","customProperties","extractPropsAndMeasurements","createEnvelope","telemetryItem","envelope","iKeyNoDashes","extractPartAExtensions","env","ext","user","authId","localId","app","sesId","device","deviceClass","ip","web","browserLang","browserVer","browser","screenRes","userConsent","model","os","trace","parentID","traceID","tgs","_loop_1","tg","Version","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","average","sampleCount","PageViewEnvelopeCreator","currentContextId","uri","refUri","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","isListening","_setOnline","bind","_setOffline","body","ononline","onoffline","Offline","isOnline","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","getSamplingScore","hashCodeGeneragor","telemetryTrace","Sample","isSampledIn","samplingPercentage","samplingScoreGenerator","samplingRate","Sender","pause","resume","flush","triggerSend","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","this_1","_getEmptyAppInsightsChannelConfig","enableSessionStorageBuffer","_sample","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","_XMLHttpRequestSupported","XDomainRequest","_xdrSender","disableTelemetry","_isSampledIn","SampleRate","aiEnvelope_1","constructEnvelope","instrumentationKey","doNotSendItem_1","callBack","bufferPayload","batch","maxBatchSizeInBytes","_setupTimer","_nextPlugin","next","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","response","_appId","_parseResponse","responseText","appId","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","clearTimeout","_timeoutHandle","event","results","failed","retry","_i","errors_1","errors","reverse","extracted","index","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","orig","maxBatchInterval","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","onerror","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","setTimeout","onload","hostingProtocol","lastIndexOf"],"mappings":";;;;8OAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,ICxBIK,EACAA,EAQAC,EACAA,EDcAC,EAAW,WAQlB,OAPAA,EAAWd,OAAOe,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAId,KADTa,EAAIG,UAAUF,GACOlB,OAAOU,UAAUL,eAAeiB,KAAKL,EAAGb,KAAIY,EAAEZ,GAAKa,EAAEb,IAE9E,OAAOY,IAEKO,MAAMf,KAAMY,aC/BrBR,EAGRA,IAAgBA,EAAc,KAFjBA,EAA0B,aAAI,GAAK,eAC/CA,EAAYA,EAA4B,eAAI,GAAK,kBAO1CC,EAKRA,IAAcA,EAAY,KAJfA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAkB,OAAI,GAAK,SChBzC,IAAIW,GAGAA,EAAUC,kBAAoB,SAAUC,GACpC,OAAOA,MAAAA,GAMXF,EAAUG,eAAiB,WACvBH,EAAUI,gBAAiB,GAE/BJ,EAAUK,QAAU,WAChB,MAAO,uCAAuCC,QAAQC,EAAW,SAAUC,GAEvE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAgB,EAC9B,OAD6C,MAANH,EAAYC,EAAQ,EAAJA,EAAU,GACxDG,SAAS,OAGnBZ,GAnBP,SAASA,KAsBb,ICxBWa,EACAA,EDuBPN,EAAY,SCvBLM,EASRA,IAAoBA,EAAkB,KALrBA,EAA0B,SAAI,GAAK,WAInDA,EAAgBA,EAAyB,QAAI,GAAK,UAK/C,IAAIC,EAGwB,EAHxBA,EAI0B,EAJ1BA,EAKyB,EALzBA,EAM2B,EAN3BA,EAO+B,EAP/BA,EAQiC,EARjCA,EASmB,EATnBA,EAcwB,GAdxBA,EAwBM,GAxBNA,EAyBoB,GAzBpBA,EA0B4B,GA1B5BA,EA4BE,GA5BFA,EA8Be,GA9BfA,EAmCqB,GAnCrBA,EA0Ca,GA1CbA,EA2CmB,GA3CnBA,EA4CuB,GA5CvBA,EA6CiB,GA7CjBA,EAgDmB,GAhDnBA,EAiDc,GAjDdA,EAmDgB,GAnDhBA,EAoD+B,GApD/BA,EAqDoB,GArDpBA,EAuDa,GAvDbA,EAyDS,GAzDTA,EA2DW,GA3DXA,EA4DM,GA5DNA,EA6De,GA7DfA,EAgEa,GAhEbA,EAmEqB,GAnErBA,EAqEK,GArELA,EAsEmB,GAtEnBA,EAuEa,GAvEbA,EAwEI,GAxEJA,EAyEO,GCpFdC,GAWAA,EAAoBC,uBAAyB,SAAUC,GACnD,MAAO,IAAOA,EAAKX,QAAQ,MAAO,IAAM,KAE5CS,EAAoBG,SAAW,cAI/BH,EAAoBI,0BAA4B,kBAIhDJ,EAAoBK,uBAAyB,OACtCL,GAtBP,SAASA,EAAoBM,EAAOC,EAAKC,EAAWC,QAC9B,IAAdD,IAAwBA,GAAY,GACxCvC,KAAKyC,UAAYJ,EACjBrC,KAAK0C,SACAH,EAAYR,EAAoBK,uBAAyBL,EAAoBI,2BAC1EE,EACR,IAAIM,GAAkBL,EAAM,YAAcP,EAAoBC,uBAAuBM,GAAO,KACvFE,EAAa,UAAYT,EAAoBC,uBAAuBY,KAAKC,UAAUL,IAAe,IACvGxC,KAAK0C,SAAWC,EAiBxB,IAAIG,GA8DAA,EAAiB5C,UAAU6C,cAAgB,SAAUC,EAAUX,EAAOC,EAAKE,EAAYD,QACjE,IAAdA,IAAwBA,GAAY,GACxC,IAAIG,EAAU,IAAIX,EAAoBM,EAAOC,EAAKC,EAAWC,GAC7D,GAAIxC,KAAKiD,wBACL,MAAMP,EAGN,QAAyB,OAAiBA,QACL,IAArBA,EAAe,QAAmB,CAC1C,GAAIH,EAAW,CAEX,IAAIW,GAAcR,EAAQD,YACrBzC,KAAKmD,eAAeD,IAAelD,KAAKoD,uBAAyBvB,EAAgBwB,WAClFrD,KAAKsD,cAAcZ,EAAQA,SAC3B1C,KAAKmD,eAAeD,IAAc,QAKlClD,KAAKoD,uBAAyBvB,EAAgBwB,SAC9CrD,KAAKsD,cAAcZ,EAAQA,SAGnC1C,KAAKuD,mBAAmBP,EAAUN,KASlDI,EAAiB5C,UAAUoD,cAAgB,SAAUZ,GAC1B,oBAAZc,SAA6BA,UACR,mBAAjBA,QAAQC,KACfD,QAAQC,KAAKf,GAEe,mBAAhBc,QAAQE,KACpBF,QAAQE,IAAIhB,KAOxBI,EAAiB5C,UAAUyD,0BAA4B,WACnD3D,KAAK4D,cAAgB,EACrB5D,KAAKmD,eAAiB,IAO1BL,EAAiB5C,UAAUqD,mBAAqB,SAAUP,EAAUN,GAChE,IAAI1C,KAAK6D,gCAAT,CAIA,IAAIC,GAAa,EACbZ,EAAalD,KAAK+D,wBAA0BrB,EAAQD,UAQxD,GANIzC,KAAKmD,eAAeD,GACpBY,GAAa,EAGb9D,KAAKmD,eAAeD,IAAc,EAElCY,IAEId,GAAYhD,KAAKgE,0BACjBhE,KAAKiE,MAAMC,KAAKxB,GAChB1C,KAAK4D,iBAGL5D,KAAK4D,eAAiB5D,KAAKmE,2BAA2B,CACtD,IAAIC,EAAuB,oEACvBC,EAAkB,IAAItC,EAAoBD,EAA8CsC,GAAsB,GAClHpE,KAAKiE,MAAMC,KAAKG,GAChBrE,KAAKsD,cAAcc,MAO/BtB,EAAiB5C,UAAU2D,8BAAgC,WACvD,OAAO7D,KAAK4D,eAAiB5D,KAAKmE,2BAE/BrB,GAtJP,SAASA,EAAiBwB,GAItBtE,KAAK+D,wBAA0B,QAI/B/D,KAAKiD,sBAAwB,WAAc,OAAO,GAMlDjD,KAAKoD,oBAAsB,WAAc,OAAO,GAMhDpD,KAAKgE,sBAAwB,WAAc,OAAO,GAIlDhE,KAAKmE,wBAA0B,WAAc,OAAO,IAIpDnE,KAAKiE,MAAQ,GAIbjE,KAAK4D,cAAgB,EAIrB5D,KAAKmD,eAAiB,GAClBnC,EAAUC,kBAAkBqD,KAM3BtD,EAAUC,kBAAkBqD,EAAOC,uBACpCvE,KAAKoD,oBAAsB,WAAc,OAAOkB,EAAOC,sBAEtDvD,EAAUC,kBAAkBqD,EAAOE,yBACpCxE,KAAKgE,sBAAwB,WAAc,OAAOM,EAAOE,wBAExDxD,EAAUC,kBAAkBqD,EAAOG,mBACpCzE,KAAKmE,wBAA0B,WAAc,OAAOG,EAAOG,kBAE1DzD,EAAUC,kBAAkBqD,EAAOrB,yBACpCjD,KAAKiD,sBAAwB,WAAc,OAAOqB,EAAOrB,yBC5EjEyB,EAAkBxE,UAAUyE,iBAAmB,SAAUC,GACrD5E,KAAK6E,aAAaC,QAAQ,SAAUC,GAEZ,EAAhBA,EAAOlE,QACPkE,EAAO,GAAGJ,iBAAiBC,MAIvCpF,OAAOwF,eAAeN,EAAkBxE,UAAW,kBAAmB,CAClE+E,IAAK,WACD,OAAOjF,KAAK6E,cAEhBK,YAAY,EACZC,cAAc,IAElBT,EAAkBxE,UAAUkF,WAAa,SAAUd,EAAQe,EAAMC,GAC7D,IAAIC,EAAQvF,KAKZ,GAJIsE,EAAOkB,qBACPxE,EAAUG,iBAEdnB,KAAK6E,aAAe,IAAIlF,MACpB2E,EAAOmB,SAAU,CACjB,IAAIC,OAA6BC,EACjCrB,EAAOmB,SAASX,QAAQ,SAAUb,GAC9B,GAAIA,GAAwB,EAAfA,EAAMpD,OAAY,CAW3B,IAVAoD,EAAQA,EAAM2B,KAAK,SAAUC,EAAGtG,GAC5B,OAAOsG,EAAEC,SAAWvG,EAAEuG,YAGpBhB,QAAQ,SAAUiB,GAChBA,EAAUD,SArCN,MAsCJJ,EAA6BK,EAAUC,YAE3CD,EAAUX,WAAWd,EAAQe,EAAMC,KAEnCI,EACA,MAAMO,MA1CC,+BA0CgCP,GAE3C,IAAK,IAAIhF,EAAI,EAAGA,EAAIuD,EAAMpD,OAAQH,IAC9BuD,EAAMvD,EAAI,GAAGwF,cAAcjC,EAAMvD,IAErC6E,EAAMV,aAAaX,KAAKD,MAKpC,IADA,IAAIkC,EAAM,IAAIxG,MACLe,EAAI,EAAGA,EAAI4E,EAAWzE,OAAQH,IAAK,CACxC,IAAI0F,EAASd,EAAW5E,GAtDJ,IAuDhB0F,EAAON,UACPK,EAAIjC,KAAKkC,GAGjB,GAAiB,EAAbD,EAAItF,OAAY,CAQhB,KANAsF,EAAMA,EAAIP,KAAK,SAAUC,EAAGtG,GACxB,OAAOsG,EAAEC,SAAWvG,EAAEuG,YAGtBhB,QAAQ,SAAUiB,GAAa,OAAOA,EAAUX,WAAWd,EAAQe,EAAMC,KAEpE5E,EAAI,EAAGA,EAAIyF,EAAItF,OAAQH,IAC5ByF,EAAIzF,EAAI,GAAGwF,cAAcC,EAAIzF,IAEjCV,KAAK6E,aAAaX,KAAKiC,KAnE/B,SAASzB,IACL1E,KAAKgG,WAAa,0BAClBhG,KAAK8F,SALmB,ICAhC,IAAIO,GAMAA,GAAeC,qBAAuB,kBAKtCD,GAAeE,wBAA0B,QAIzCF,GAAeG,0BAA4B,gBAI3CH,GAAeI,gBAAkB,aAKjCJ,GAAeK,iBAAmB,cAIlCL,GAAeM,6BAA+B,QAC9CN,GAAeO,8BAAgC,kBACxCP,IA7BP,SAASA,MCAb,IAAIQ,IAGAA,GAAcC,4BAA8B,SAAUC,EAAQC,EAAKC,GAC/D,IAAIC,EAAaF,EAAInG,OACjBsG,EAAQN,GAAcO,YAAYL,EAAQC,GAE9C,GAAIG,EAAMtG,SAAWqG,EAAY,CAG7B,IAFA,IAAIxG,EAAI,EACJ2G,EAAcF,OACUxB,IAArBsB,EAAII,IACP3G,IACA2G,EAAcF,EAAMG,UAAU,EAAGT,GAAcU,gBAAkB,GAAKV,GAAcW,UAAU9G,GAElGyG,EAAQE,EAEZ,OAAOF,GAEXN,GAAcO,YAAc,SAAUL,EAAQU,GAC1C,IAAIC,EAUJ,OATID,IAEAA,EAAOZ,GAAcc,KAAKF,EAAK7F,aAEtBf,OAASgG,GAAcU,kBAC5BG,EAAYD,EAAKH,UAAU,EAAGT,GAAcU,iBAC5CR,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAgC,+CAAiD+E,GAAcU,gBAAkB,eAAgB,CAAEE,KAAMA,IAAQ,IAGhMC,GAAaD,GAExBZ,GAAce,eAAiB,SAAUb,EAAQc,EAAOC,GAEpD,IAAIC,EASJ,YAVkB,IAAdD,IAAwBA,EAAYjB,GAAcmB,mBAElDH,IACAC,EAAYA,GAAwBjB,GAAcmB,mBAClDH,EAAQhB,GAAcc,KAAKE,IACjBjG,WAAWf,OAASiH,IAC1BC,EAAaF,EAAMjG,WAAW0F,UAAU,EAAGQ,GAC3Cf,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAuC,sDAAwDgG,EAAY,eAAgB,CAAED,MAAOA,IAAS,KAG5LE,GAAcF,GAEzBhB,GAAcoB,YAAc,SAAUlB,EAAQmB,GAC1C,OAAOrB,GAAcsB,cAAcpB,EAAQmB,EAAKrB,GAAcuB,eAAgBtG,IAElF+E,GAAcwB,gBAAkB,SAAUtB,EAAQrE,GAC9C,IAAI4F,EAOJ,OANI5F,GACIA,EAAQ7B,OAASgG,GAAc0B,qBAC/BD,EAAe5F,EAAQ4E,UAAU,EAAGT,GAAc0B,oBAClDxB,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAqC,iDAAmD+E,GAAc0B,mBAAqB,eAAgB,CAAE7F,QAASA,IAAW,IAGhN4F,GAAgB5F,GAE3BmE,GAAc2B,kBAAoB,SAAUzB,EAAQ0B,GAChD,IAAIC,EAOJ,OANID,GACIA,EAAU5H,OAASgG,GAAc8B,uBACjCD,EAAiBD,EAAUnB,UAAU,EAAGT,GAAc8B,sBACtD5B,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAuC,mDAAqD+E,GAAc8B,qBAAuB,eAAgB,CAAEF,UAAWA,IAAa,IAG1NC,GAAkBD,GAE7B5B,GAAc+B,mBAAqB,SAAU7B,EAAQvE,GACjD,GAAIA,EAAY,CACZ,IAAIqG,EAAY,GAChB,IAAK,IAAIC,KAAQtG,EAAY,CACzB,IAAIqF,EAAQrF,EAAWsG,GACvB,GAAqB,iBAAVjB,GAAsC,oBAATjF,KAEpC,IACIiF,EAAQjF,KAAKC,UAAUgF,GAE3B,MAAOkB,GACHhC,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAyD,+BAAgC,CAAE2G,UAAWM,IAAK,GAGjKlB,EAAQhB,GAAce,eAAeb,EAAQc,EAAOhB,GAAcmC,qBAElEH,EADAC,EAAOjC,GAAcC,4BAA4BC,EAAQ+B,EAAMD,IAC7ChB,EAEtBrF,EAAaqG,EAEjB,OAAOrG,GAEXqE,GAAcoC,qBAAuB,SAAUlC,EAAQmC,GACnD,GAAIA,EAAc,CACd,IAAIC,EAAmB,GACvB,IAAK,IAAIC,KAAWF,EAAc,CAC9B,IAAIrB,EAAQqB,EAAaE,GAEzBD,EADAC,EAAUvC,GAAcC,4BAA4BC,EAAQqC,EAASD,IACzCtB,EAEhCqB,EAAeC,EAEnB,OAAOD,GAEXrC,GAAcwC,WAAa,SAAUtC,EAAQuC,GACzC,OAAOA,EAAKzC,GAAcsB,cAAcpB,EAAQuC,EAAIzC,GAAc0C,cAAezH,GAA8BF,WAAa0H,GAEhIzC,GAAcsB,cAAgB,SAAUpB,EAAQ7F,EAAO4G,EAAW0B,GAC9D,IAAIC,EAQJ,OAPIvI,IACAA,EAAQ2F,GAAcc,KAAKzG,IACjBL,OAASiH,IACf2B,EAAavI,EAAMoG,UAAU,EAAGQ,GAChCf,EAAOhE,cAAclB,EAAgBwB,QAASmG,EAAQ,+CAAiD1B,EAAY,eAAgB,CAAE4B,KAAMxI,IAAS,IAGrJuI,GAAcvI,GAEzB2F,GAAcW,UAAY,SAAUmC,GAChC,IAAIlJ,EAAI,KAAOkJ,EACf,OAAOlJ,EAAEmJ,OAAOnJ,EAAEI,OAAS,IAK/BgG,GAAcc,KAAO,SAAUkC,GAC3B,MAAmB,iBAARA,EACAA,EACJA,EAAIvI,QAAQ,aAAc,KAKrCuF,GAAcU,gBAAkB,IAIhCV,GAAc0C,cAAgB,IAI9B1C,GAAcmC,oBAAsB,KAIpCnC,GAAcmB,kBAAoB,KAIlCnB,GAAcuB,eAAiB,KAI/BvB,GAAc0B,mBAAqB,MAInC1B,GAAc8B,qBAAuB,MAC9B9B,IA1JP,SAASA,MCEb,IAAIiD,IAMAA,GAAKC,eAAiB,WAClBD,GAAKE,qBAAsB,EAC3BF,GAAKG,uBAAwB,GAMjCH,GAAKI,uBAAyB,WAC1B,OAAIJ,GAAKK,qBACEL,GAAKM,0BAA0BhK,EAAYiK,cAE/C,MAQXP,GAAKM,0BAA4B,SAAUE,GACvC,IACIC,EACAC,EAFAC,EAAU,KAGd,IACI,GAAsB,oBAAXC,OACP,OAAO,KAEXF,EAAM,IAAIG,MACVF,EAAUH,IAAgBlK,EAAYiK,aAAeK,OAAOE,aAAeF,OAAOG,gBAC1EC,QAAQN,EAAKA,GACrBD,EAAOE,EAAQM,QAAQP,IAAQA,EAC/BC,EAAQO,WAAWR,GACfD,IACAE,EAAU,MAGlB,MAAOhC,GACHgC,EAAU,KAEd,OAAOA,GAQXX,GAAKmB,sCAAwC,SAAUC,GACnD,OAAuE,IAAhEpB,GAAKqB,mBAAmBC,QAAQF,EAAYG,gBAOvDvB,GAAKK,mBAAqB,WAItB,YAHiCxE,IAA7BmE,GAAKE,sBACLF,GAAKE,sBAAwBF,GAAKM,0BAA0BhK,EAAYiK,eAErEP,GAAKE,qBAQhBF,GAAKwB,WAAa,SAAUvE,EAAQU,GAChC,IAAIgD,EAAUX,GAAKI,yBACnB,GAAgB,OAAZO,EACA,IACI,OAAOA,EAAQM,QAAQtD,GAE3B,MAAOsB,GACHe,GAAKE,qBAAsB,EAC3BjD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAkD,yCAA2CgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGpM,OAAO,MASXe,GAAK2B,WAAa,SAAU1E,EAAQU,EAAMiC,GACtC,IAAIe,EAAUX,GAAKI,yBACnB,GAAgB,OAAZO,EACA,IAEI,OADAA,EAAQK,QAAQrD,EAAMiC,IACf,EAEX,MAAOX,GACHe,GAAKE,qBAAsB,EAC3BjD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAmD,0CAA4CgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGtM,OAAO,GAQXe,GAAK4B,cAAgB,SAAU3E,EAAQU,GACnC,IAAIgD,EAAUX,GAAKI,yBACnB,GAAgB,OAAZO,EACA,IAEI,OADAA,EAAQO,WAAWvD,IACZ,EAEX,MAAOsB,GACHe,GAAKE,qBAAsB,EAC3BjD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAyD,iDAAmDgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGnN,OAAO,GAMXe,GAAK6B,yBAA2B,WAC5B,OAAI7B,GAAK8B,uBACE9B,GAAKM,0BAA0BhK,EAAYyL,gBAE/C,MAOX/B,GAAK8B,qBAAuB,WAIxB,YAHmCjG,IAA/BmE,GAAKG,wBACLH,GAAKG,wBAA0BH,GAAKM,0BAA0BhK,EAAYyL,iBAEvE/B,GAAKG,uBAOhBH,GAAKgC,sBAAwB,WACzB,IAAIC,EAAO,GACX,GAAIjC,GAAK8B,uBACL,IAAK,IAAI5E,KAAO0D,OAAOG,eACnBkB,EAAK7H,KAAK8C,GAGlB,OAAO+E,GAQXjC,GAAKkC,kBAAoB,SAAUjF,EAAQU,GACvC,IAAIgD,EAAUX,GAAK6B,2BACnB,GAAgB,OAAZlB,EACA,IACI,OAAOA,EAAQM,QAAQtD,GAE3B,MAAOsB,GACHe,GAAKG,uBAAwB,EAC7BlD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAoD,2CAA6CgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGxM,OAAO,MASXe,GAAKmC,kBAAoB,SAAUlF,EAAQU,EAAMiC,GAC7C,IAAIe,EAAUX,GAAK6B,2BACnB,GAAgB,OAAZlB,EACA,IAEI,OADAA,EAAQK,QAAQrD,EAAMiC,IACf,EAEX,MAAOX,GACHe,GAAKG,uBAAwB,EAC7BlD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAqD,4CAA8CgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAG1M,OAAO,GAQXe,GAAKoC,qBAAuB,SAAUnF,EAAQU,GAC1C,IAAIgD,EAAUX,GAAK6B,2BACnB,GAAgB,OAAZlB,EACA,IAEI,OADAA,EAAQO,WAAWvD,IACZ,EAEX,MAAOsB,GACHe,GAAKG,uBAAwB,EAC7BlD,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAA2D,mDAAqDgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGvN,OAAO,GAKXe,GAAK3I,eAAiB,WAClBH,EAAUG,kBAKd2I,GAAKqC,cAAgB,SAAUpF,GAC3B,QAAiCpB,IAA7B3E,EAAUI,eAA8B,CACxCJ,EAAUI,gBAAiB,EAC3B,IACIJ,EAAUI,oBAA0CuE,IAAzBmE,GAAKsC,SAASC,OAE7C,MAAOtD,GACHhC,EAAOhE,cAAclB,EAAgBwB,QAASvB,EAAuC,mCAAqCgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,MAInL,OAAO/H,EAAUI,gBAKrB0I,GAAKwC,UAAY,SAAUvF,EAAQU,EAAMI,EAAO0E,GAC5C,IAAIC,EAAe,GACfC,EAAe,GACfF,IACAC,EAAe,WAAaD,GAE5BzC,GAAKsC,SAASM,UAAgD,WAApC5C,GAAKsC,SAASM,SAASC,WACjDF,EAAe,WAEf3C,GAAKqC,cAAcpF,KACnB+C,GAAKsC,SAASC,OAAS5E,EAAO,IAAMI,EAAQ2E,EAAe,UAAYC,IAG/E3C,GAAK8C,sBAAwB,SAAU/C,EAAKgD,GAExC,YADqB,IAAjBA,IAA2BA,GAAe,GAC1ChD,MAAAA,EACOgD,EAE6B,SAAjChD,EAAIjI,WAAWyJ,eAK1BvB,GAAKgD,UAAY,SAAU/F,EAAQU,GAC/B,GAAKqC,GAAKqC,cAAcpF,GAAxB,CAGA,IAAIc,EAAQ,GACZ,GAAIJ,GAAQA,EAAK5G,OAGb,IAFA,IAAIkM,EAAatF,EAAO,IACpBuF,EAAUlD,GAAKsC,SAASC,OAAOY,MAAM,KAChCvM,EAAI,EAAGA,EAAIsM,EAAQnM,OAAQH,IAAK,CACrC,IAAI2L,EAASW,EAAQtM,GAErB,IADA2L,EAASvC,GAAKnC,KAAK0E,KAC0B,IAA/BA,EAAOjB,QAAQ2B,GAAmB,CAC5ClF,EAAQwE,EAAO/E,UAAUyF,EAAWlM,OAAQmM,EAAQtM,GAAGG,QACvD,OAIZ,OAAOgH,IAMXiC,GAAKoD,aAAe,SAAUnG,EAAQU,GAC9BqC,GAAKqC,cAAcpF,KAEnB+C,GAAKsC,SAASC,OAAS5E,EAAO,oDAMtCqC,GAAKnC,KAAO,SAAUkC,GAClB,MAAmB,iBAARA,EACAA,EACJA,EAAIvI,QAAQ,aAAc,KAKrCwI,GAAKqD,MAAQ,WAKT,IAJA,IACIC,EAAS,GAETzL,EAAyB,WAAhBD,KAAKC,SACF,EAATA,GAEHyL,GANc,mEAKSC,OAAO1L,EAAS,IAEvCA,EAASD,KAAK4L,MAAM3L,EAAS,IAEjC,OAAOyL,GAKXtD,GAAKyD,QAAU,SAAUC,GACrB,MAA+C,mBAAxChO,OAAOU,UAAU0B,SAASd,KAAK0M,IAK1C1D,GAAK2D,QAAU,SAAUD,GACrB,MAA+C,mBAAxChO,OAAOU,UAAU0B,SAASd,KAAK0M,IAK1C1D,GAAK4D,OAAS,SAAUF,GACpB,MAA+C,kBAAxChO,OAAOU,UAAU0B,SAASd,KAAK0M,IAK1C1D,GAAK6D,kBAAoB,SAAUC,GAC/B,GAAI9D,GAAK4D,OAAOE,GAAO,CACnB,GAAIjD,KAAKzK,UAAU2N,YACf,OAAOD,EAAKC,cAGZ,IAAIC,EAAM,SAAUnE,GAChB,IAAIlI,EAAIsM,OAAOpE,GAIf,OAHiB,IAAblI,EAAEZ,SACFY,EAAI,IAAMA,GAEPA,GAEX,OAAOmM,EAAKI,iBACN,IAAMF,EAAIF,EAAKK,cAAgB,GAC/B,IAAMH,EAAIF,EAAKM,cACf,IAAMJ,EAAIF,EAAKO,eACf,IAAML,EAAIF,EAAKQ,iBACf,IAAMN,EAAIF,EAAKS,iBACf,IAAMN,QAAQH,EAAKU,qBAAuB,KAAMC,QAAQ,IAAIC,MAAM,EAAG,GACrE,MAOlB1E,GAAK2E,aAAe,SAAUC,QACL,IAAjBA,IAA2BA,EAAe,MAC9C,IAAIC,EAAQD,EAAeA,EAAarD,cAAgBuD,UAAUC,UAAUxD,cAC5E,OAAkC,GAA1BsD,EAAMvD,QAAQ,QAAiB0D,SAASH,EAAM1B,MAAM,QAAQ,IAAM,MAK9EnD,GAAKiF,aAAe,SAAUC,IACtBC,MAAMD,IAAYA,EAAU,KAC5BA,EAAU,GAGd,IAAIE,EAAK,IADTF,EAAUtN,KAAKyN,MAAMH,IACG,IACpBI,EAAM,GAAK1N,KAAK4L,MAAM0B,EAAU,KAAQ,GACxCK,EAAM,GAAK3N,KAAK4L,MAAM0B,OAAyB,GAC/CM,EAAO,GAAK5N,KAAK4L,MAAM0B,QAA8B,GACrDO,EAAO7N,KAAK4L,MAAM0B,SAKtB,OAJAE,EAAmB,IAAdA,EAAGrO,OAAe,KAAOqO,EAAmB,IAAdA,EAAGrO,OAAe,IAAMqO,EAAKA,EAChEE,EAAMA,EAAIvO,OAAS,EAAI,IAAMuO,EAAMA,EACnCC,EAAMA,EAAIxO,OAAS,EAAI,IAAMwO,EAAMA,GAEpB,EAAPE,EAAWA,EAAO,IAAM,KADhCD,EAAOA,EAAKzO,OAAS,EAAI,IAAMyO,EAAOA,GACO,IAAMD,EAAM,IAAMD,EAAM,IAAMF,GAM/EpF,GAAK0F,mBAAqB,SAAU9M,EAASwF,EAAKuH,EAAYC,EAAcC,GACxE,OAAoB,kBAAZjN,GAA2C,iBAAZA,KAAgCiN,GAK3E7F,GAAK0B,KAAO,SAAUoE,GAClB,IAAIC,EAAiBrQ,OAAOU,UAAU0B,SAASd,KAAK8O,GAChDE,EAAoBlN,KAAKC,UAAU+M,GAIvC,MAHuB,mBAAnBC,IACAC,EAAoB,aAAeF,EAAOG,MAAQ,gBAAkBH,EAAOlN,QAAU,aAAekN,EAAOnI,KAAO,KAE/GoI,EAAiBC,GAK5BhG,GAAKyB,iBAAmB,SAAUqE,GAE9B,MAAuB,mBADFpQ,OAAOU,UAAU0B,SAASd,KAAK8O,GAEzCA,EAAOnI,KAEX,IAQXqC,GAAKkG,gBAAkB,SAAUC,EAAWC,GACxC,GAAsB,oBAAXxF,SAA2BA,QAA+B,iBAAduF,GAA8C,mBAAbC,EACpF,OAAO,EAGX,IAAIC,EAAgB,KAAOF,EAE3B,GAAIvF,OAAO0F,iBACP1F,OAAO0F,iBAAiBH,EAAWC,GAAU,OAE5C,CAAA,IAAIxF,OAAoB,YAIzB,OAAO,EAHPA,OAAoB,YAAEyF,EAAeD,GAKzC,OAAO,GAKXpG,GAAKuG,qBAAuB,WACxB,MAAQ,eAAgBzB,WAAaA,UAAU0B,YAEnDxG,GAAKyG,aAAe,SAAUjL,EAAYU,GAGtC,IAFA,IAAIwK,EAAY,KACZC,EAAQ,GACJD,GAAaC,EAAQnL,EAAWzE,QAChCyE,EAAWmL,IAAUnL,EAAWmL,GAAOzK,aAAeA,IACtDwK,EAAYlL,EAAWmL,IAE3BA,IAEJ,OAAOD,GAEX1G,GAAKsC,SAA+B,oBAAbA,SAA2BA,SAAW,GAC7DtC,GAAKE,yBAAsBrE,EAC3BmE,GAAKG,2BAAwBtE,EAE7BmE,GAAKqB,mBAAqB,CACtB,gDACA,uDACA,qDAEJrB,GAAK4G,aAAe,gBACb5G,IAzdP,SAASA,MA4db,IAAI6G,IAGAA,GAAUC,SAAW,SAAU1I,GAK3B,OAJKyI,GAAUE,oBACXF,GAAUE,kBAAsBF,GAAUvE,SAAS0E,cAAgBH,GAAUvE,SAAS0E,cAAc,KAAO,CAAEC,KAAMJ,GAAUK,UAAU9I,KAE3IyI,GAAUE,kBAAkBI,KAAO/I,EAC5ByI,GAAUE,mBAErBF,GAAUO,eAAiB,SAAUhJ,GACjC,IAAIkF,EACAvH,EAAI8K,GAAUC,SAAS1I,GAI3B,OAHIrC,IACAuH,EAASvH,EAAEoL,MAER7D,GAEXuD,GAAUQ,YAAc,SAAUjJ,GAC9B,IAAIkF,EACAvH,EAAI8K,GAAUC,SAAS1I,GAI3B,OAHIrC,IACAuH,EAASvH,EAAEuL,UAERhE,GAEXuD,GAAUU,eAAiB,SAAUC,EAAQC,GACzC,OAAID,EACOA,EAAOE,cAAgB,IAAMD,EAG7BA,GAIfZ,GAAUK,UAAY,SAAU9I,GAC5B,IAAIuJ,EAAQvJ,EAAIuJ,MAAM,iCACtB,OAAa,MAATA,GAAgC,EAAfA,EAAM5Q,QAAkC,iBAAb4Q,EAAM,IAAqC,EAAlBA,EAAM,GAAG5Q,OACvE4Q,EAAM,GAGN,MAGfd,GAAUvE,SAA+B,oBAAbA,SAA2BA,SAAW,GAC3DuE,IA5CP,SAASA,MAoHb,IAAIe,IAGAA,GAAWC,oBAAsB,SAAU5K,EAAQwK,EAAaD,EAAQM,GACpE,IAAIC,EAAQpK,EAAOmK,EAAalI,EAAOkI,EACvC,GAAIL,GAAoC,EAArBA,EAAY1Q,OAAY,CACvC,IAAIiR,EAAYnB,GAAUC,SAASW,GAEnC,GADAM,EAASC,EAAUf,MACdtJ,EACD,GAA0B,MAAtBqK,EAAUV,SAAkB,CAC5B,IAAIW,EAA0C,IAA9BD,EAAUV,SAASvQ,OAAgB,IAAMiR,EAAUV,SACxC,MAAvBW,EAAS1E,OAAO,KAChB0E,EAAW,IAAMA,GAErBrI,EAAOoI,EAAUV,SACjB3J,EAAOZ,GAAce,eAAeb,EAAQuK,EAASA,EAAS,IAAMS,EAAWA,QAG/EtK,EAAOZ,GAAce,eAAeb,EAAQwK,QAMpD9J,EADAoK,EAASD,EAGb,MAAO,CACHC,OAAQA,EACRpK,KAAMA,EACNiC,KAAMA,IAGPgI,IA/BP,SAASA,MA2CTM,GAAcC,IAAyB,oBAAXvH,OAA0B,WAAc,OAAO,IAAIC,MAAOuH,WACjFxH,OAAOyH,aAAezH,OAAOyH,YAAYC,KAAO1H,OAAOyH,YAAYE,OAChE,WACI,OAAO3H,OAAOyH,YAAYC,MAAQ1H,OAAOyH,YAAYE,OAAOC,iBAG5D,WACI,OAAO,IAAI3H,MAAOuH,WAKlCF,GAAcO,YAAc,SAAUC,EAAOC,GACzC,IAAIrF,EAAS,KAIb,OAHc,IAAVoF,GAAuB,IAARC,GAAczR,EAAUC,kBAAkBuR,IAAWxR,EAAUC,kBAAkBwR,KAChGrF,EAASqF,EAAMD,GAEZpF,GAtBX,SAAS4E,MC7nBN,ICM6BU,GDJzBC,GAAgB,gBAChBC,GAAa,cCGpBC,IACAC,EAAkBD,GADcH,GCDhC,cDMOG,IAHP,SAASA,KACL,OAAOH,GAAO5R,KAAKd,OAASA,KENpC,ICEwC0S,GAApCK,IACAD,EAAkBC,GADkBL,GDDpC,WACI1S,KAAKgT,IAAM,EACXhT,KAAKiT,WAAa,IAClBjT,KAAKkT,KAAO,KCoBTH,IAjBP,SAASA,GAAShM,EAAQ2C,EAAMjC,GAC5B,IAAIlC,EAAQmN,GAAO5R,KAAKd,OAASA,KAcjC,OAbAuF,EAAMkC,KAAOZ,GAAce,eAAeb,EAAQU,IAASqC,GAAK4G,aAChEnL,EAAMmE,KAAOA,EACbnE,EAAM4N,KAAOrJ,GAAK6D,kBAAkB,IAAIhD,MACxCpF,EAAM6N,eAAiB,CACnBD,KAAM9S,EAAUgT,SAChBC,KAAMjT,EAAUgT,SAChB5L,KAAMpH,EAAUgT,SAChBJ,WAAY,WACR,OAA4B,KAApB1N,EAAM0N,WAAqB5S,EAAUkT,OAASlT,EAAUgT,UAEpEH,KAAM7S,EAAUgT,SAChB3J,KAAMrJ,EAAUgT,UAEb9N,ECpBX,SADAiO,MAAJ,ICEyCd,GAArCe,IACAX,EAAkBW,GADmBf,GAUvCc,IADSC,IAPP,SAASA,KACL,IAAIlO,EAAQmN,GAAO5R,KAAKd,OAASA,KAIjC,OAHAuF,EAAMyN,IAAM,EACZzN,EAAM/C,WAAa,GACnB+C,EAAM2D,aAAe,GACd3D,ECRf,IAAqCmN,GAAjCgB,IACAZ,EAAkBY,GADehB,GAqBnCe,IAHEC,GAAMC,aAAe,0CACrBD,GAAMxR,SAAW,YACVwR,IAfP,SAASA,GAAM3M,EAAQU,EAAMjF,EAAY0G,GACrC,IAAI3D,EAAQmN,GAAO5R,KAAKd,OAASA,KAUjC,OATAuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACf5L,KAAMpH,EAAUgT,SAChB7Q,WAAYnC,EAAUuT,QACtB1K,aAAc7I,EAAUuT,SAE5BrO,EAAMkC,KAAOZ,GAAce,eAAeb,EAAQU,IAASqC,GAAK4G,aAChEnL,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GAC5D+C,EAAM2D,aAAerC,GAAcoC,qBAAqBlC,EAAQmC,GACzD3D,EChBX,SADAsO,MAAJ,ICC6CnB,GAAzCoB,IACAhB,EAAkBgB,GADuBpB,GAW3Cc,IADSM,IARP,SAASA,KACL,IAAIvO,EAAQmN,GAAO5R,KAAKd,OAASA,KAKjC,OAJAuF,EAAMyN,IAAM,EACZzN,EAAMwO,WAAa,GACnBxO,EAAM/C,WAAa,GACnB+C,EAAM2D,aAAe,GACd3D,ECTX,SADAyO,KAEIhU,KAAKiU,cAAe,EACpBjU,KAAKkU,YAAc,GAH3B,ICKyCxB,GAArCyB,IACArB,EAAkBqB,GADmBzB,GAiFvCoB,IAxCEK,GAAUC,oBAAsB,SAAUrN,EAAQ0B,GAC9C,IAAIsL,EAAatL,EAAUsL,YACpBtL,EAAUsL,WAAW9M,IAAI,SAAUoN,GAAM,OAAOC,GAAkBF,oBAAoBrN,EAAQsN,KAErG,OADoB,IAAIF,GAAUpN,EAAQwN,EAAiB,GAAI9L,EAAW,CAAEsL,WAAYA,MAG5FI,GAAUjU,UAAUsU,YAAc,WAC9B,IAAIC,EAAKzU,KAAM+T,EAAaU,EAAGV,WAAYvR,EAAaiS,EAAGjS,WAAY0G,EAAeuL,EAAGvL,aAAcwL,EAAgBD,EAAGC,cAAe1B,EAAMyB,EAAGzB,IAAK2B,EAAeF,EAAGE,aAAcrL,EAAKmL,EAAGnL,GAAIsL,EAAWH,EAAGG,SAIjN,MAAO,CACH5B,IAAKA,EACLe,WAL4BA,aAAsBpU,OAC/CoU,EAAW9M,IAAI,SAAUwB,GAAa,OAAOA,EAAU+L,sBACvD7O,EAIH+O,cAAeA,EACflS,WAAYA,EACZ0G,aAAcA,EACdyL,aAAcA,EACdrL,GAAIA,EACJsL,SAAUA,IAMlBT,GAAUU,sBAAwB,SAAUnS,EAASoS,EAAUC,EAAUC,EAAUC,EAASC,GACxF,MAAO,CACHnB,WAAY,CACR,CACIE,cAAc,EACdvR,QAASA,EACTqN,MAAOkF,EACPH,SAAUA,MAK1BX,GAAUR,aAAe,8CACzBQ,GAAUjS,SAAW,gBACdiS,IA3EP,SAASA,GAAUpN,EAAQ0B,EAAWjG,EAAY0G,EAAcwL,EAAepL,GAC3E,IAAI/D,EAAQmN,GAAO5R,KAAKd,OAASA,KAiCjC,OAhCAuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACfU,WAAY1T,EAAUgT,SACtBqB,cAAerU,EAAUuT,QACzBpR,WAAYnC,EAAUuT,QACtB1K,aAAc7I,EAAUuT,SAExBnL,aAAqBxC,OACrBV,EAAMwO,WAAa,CAAC,IAAIO,GAAkBvN,EAAQ0B,IAClDlD,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GAC5D+C,EAAM2D,aAAerC,GAAcoC,qBAAqBlC,EAAQmC,GAC5DwL,IACAnP,EAAMmP,cAAgBA,GACtBpL,IACA/D,EAAM+D,GAAKA,KAGf/D,EAAMwO,WAAatL,EAAUsL,WAC7BxO,EAAM/C,WAAaiG,EAAUjG,WAC7B+C,EAAM2D,aAAeT,EAAUS,aAC3BT,EAAUiM,gBACVnP,EAAMmP,cAAgBjM,EAAUiM,eAChCjM,EAAUa,KACV/D,EAAM+D,GAAKb,EAAUa,IACrBb,EAAUkM,eACVpP,EAAMoP,aAAelM,EAAUkM,cAE9B3T,EAAUC,kBAAkBwH,EAAUuK,OACvCzN,EAAMyN,IAAMvK,EAAUuK,KACrBhS,EAAUC,kBAAkBwH,EAAUmM,YACvCrP,EAAMqP,SAAWnM,EAAUmM,WAE5BrP,EA4Cf,IAAiDmN,GAA7C4B,IACAxB,EAAkBwB,GAD2B5B,GAiG/CsB,IAnEEM,GAAkBpU,UAAUsU,YAAc,WACtC,IAAIN,EAAclU,KAAKkU,uBAAuBvU,OACvCK,KAAKkU,YAAYjN,IAAI,SAAUkO,GAAS,OAAOA,EAAMX,gBAU5D,MATgC,CAC5BlL,GAAItJ,KAAKsJ,GACT8L,QAASpV,KAAKoV,QACdN,SAAU9U,KAAK8U,SACfpS,QAAS1C,KAAK0C,QACduR,aAAcjU,KAAKiU,aACnBlE,MAAO/P,KAAK+P,MACZmE,YAAaA,QAAevO,IAIpC2O,GAAkBF,oBAAsB,SAAUrN,EAAQ0B,GACtD,IAAIyL,EAAezL,EAAUyL,uBAAuBvU,OAC7C8I,EAAUyL,YAAYjN,IAAI,SAAUkO,GAAS,OAAOE,GAAYjB,oBAAoBe,MACpF1M,EAAUyL,YAEjB,OADuB,IAAII,GAAkBvN,EAAQwN,EAAiB,GAAI9L,EAAW,CAAEyL,YAAaA,MAGxGI,GAAkBgB,WAAa,SAAUvF,GACrC,IAAImE,OAAcvO,EAClB,GAAqB,iBAAVoK,EAAoB,CAC3B,IAAIwF,EAASxF,EAAM9C,MAAM,MACzBiH,EAAc,GAGd,IAFA,IAAIsB,EAAQ,EACRC,EAAmB,EACd/U,EAAI,EAAGA,GAAK6U,EAAO1U,OAAQH,IAAK,CACrC,IAAIyU,EAAQI,EAAO7U,GACnB,GAAI2U,GAAYK,MAAMC,KAAKR,GAAQ,CAC/B,IAAIS,EAAc,IAAIP,GAAYE,EAAO7U,GAAI8U,KAC7CC,GAAoBG,EAAYC,YAChC3B,EAAYhQ,KAAK0R,IAMzB,GADoC,MAChCH,EAMA,IALA,IAAIK,EAAO,EACPC,EAAQ7B,EAAYrT,OAAS,EAC7BmV,EAAO,EACPC,EAAeH,EACfI,EAAgBH,EACbD,EAAOC,GAAO,CAKjB,GAZ4B,OAW5BC,GAFY9B,EAAY4B,GAAMD,YAClB3B,EAAY6B,GAAOF,aAEW,CAEtC,IAAIM,EAAUD,EAAgBD,EAAe,EAC7C/B,EAAYkC,OAAOH,EAAcE,GACjC,MAGJF,EAAeH,EACfI,EAAgBH,EAChBD,IACAC,KAIZ,OAAO7B,GAEJI,IA9FP,SAASA,GAAkBvN,EAAQ0B,GAC/B,IAAIlD,EAAQmN,GAAO5R,KAAKd,OAASA,KAUjC,GATAuF,EAAM6N,eAAiB,CACnB9J,GAAIjJ,EAAUuT,QACdwB,QAAS/U,EAAUuT,QACnBkB,SAAUzU,EAAUgT,SACpB3Q,QAASrC,EAAUgT,SACnBY,aAAc5T,EAAUuT,QACxB7D,MAAO1P,EAAUuT,QACjBM,YAAa7T,EAAUV,OAEvB8I,aAAqBxC,MAAO,CAC5BV,EAAMuP,SAAWjO,GAAce,eAAeb,EAAQ0B,EAAUhB,OAASqC,GAAK4G,aAC9EnL,EAAM7C,QAAUmE,GAAcwB,gBAAgBtB,EAAQ0B,EAAU/F,UAAYoH,GAAK4G,aACjF,IAAIX,EAAQtH,EAAUsH,MACtBxK,EAAM2O,YAAcI,GAAkBgB,WAAWvF,GACjDxK,EAAMwK,MAAQlJ,GAAc2B,kBAAkBzB,EAAQgJ,GACtDxK,EAAM0O,aAAenK,GAAKyD,QAAQhI,EAAM2O,cAA2C,EAA3B3O,EAAM2O,YAAYrT,YAG1E0E,EAAMuP,SAAWrM,EAAUqM,SAC3BvP,EAAM7C,QAAU+F,EAAU/F,QAC1B6C,EAAMwK,MAAQtH,EAAUsH,MACxBxK,EAAM2O,YAAczL,EAAUyL,YAC9B3O,EAAM0O,aAAexL,EAAUwL,aAEnC,OAAO1O,EAuEf,IAA2CmN,GAAvC2C,IACAvC,EAAkBuC,GADqB3C,GA4DzCmB,IAjBEwB,GAAYjB,oBAAsB,SAAUe,GACxC,OAAO,IAAIE,GAAYF,EAAO,OAElCE,GAAYnV,UAAUsU,YAAc,WAChC,MAAO,CACHgB,MAAOxV,KAAKwV,MACZlE,OAAQtR,KAAKsR,OACbyD,SAAU/U,KAAK+U,SACfC,SAAUhV,KAAKgV,SACfE,KAAMlV,KAAKkV,OAKnBG,GAAYK,MAAQ,mEACpBL,GAAYgB,SAAW,GAChBhB,IAzDP,SAASA,GAAYiB,EAAad,GAC9B,IAAIjQ,EAAQmN,GAAO5R,KAAKd,OAASA,KASjC,GARAuF,EAAMsQ,YAAc,EACpBtQ,EAAM6N,eAAiB,CACnBoC,MAAOnV,EAAUgT,SACjB/B,OAAQjR,EAAUgT,SAClB0B,SAAU1U,EAAUuT,QACpBoB,SAAU3U,EAAUuT,QACpBsB,KAAM7U,EAAUuT,SAEO,iBAAhB0C,EAA0B,CACjC,IAAInB,EAAQmB,EACZ/Q,EAAMiQ,MAAQA,EACdjQ,EAAM+L,OAAS,cACf/L,EAAMwP,SAAWjL,GAAKnC,KAAKwN,GAC3B5P,EAAMyP,SAAW,GACjBzP,EAAM2P,KAAO,EACb,IAAIqB,EAAUpB,EAAM1D,MAAM4D,GAAYK,OAClCa,GAA6B,GAAlBA,EAAQ1V,SACnB0E,EAAM+L,OAASxH,GAAKnC,KAAK4O,EAAQ,KAAOhR,EAAM+L,OAC9C/L,EAAMyP,SAAWlL,GAAKnC,KAAK4O,EAAQ,IACnChR,EAAM2P,KAAOpG,SAASyH,EAAQ,KAAO,QAIzChR,EAAMiQ,MAAQc,EAAYd,MAC1BjQ,EAAM+L,OAASgF,EAAYhF,OAC3B/L,EAAMwP,SAAWuB,EAAYvB,SAC7BxP,EAAMyP,SAAWsB,EAAYtB,SAC7BzP,EAAM2P,KAAOoB,EAAYpB,KACzB3P,EAAMsQ,YAAc,EASxB,OAPAtQ,EAAMsQ,aAAetQ,EAAM+L,OAAOzQ,OAClC0E,EAAMsQ,aAAetQ,EAAMyP,SAASnU,OACpC0E,EAAMsQ,aAAetQ,EAAMwP,SAASlU,OAEpC0E,EAAMsQ,aAAeR,GAAYgB,SACjC9Q,EAAMsQ,aAAetQ,EAAMiQ,MAAM5T,WAAWf,OAC5C0E,EAAMsQ,aAAetQ,EAAM2P,KAAKtT,WAAWf,OACpC0E,ECjOf,IAA0CmN,GCF/B8D,GACAA,GDCPC,IACA3D,EAAkB2D,GADoB/D,GAUxCc,IADSiD,IAPP,SAASA,KACL,IAAIlR,EAAQmN,GAAO5R,KAAKd,OAASA,KAIjC,OAHAuF,EAAMyN,IAAM,EACZzN,EAAMmR,QAAU,GAChBnR,EAAM/C,WAAa,GACZ+C,GCRJiR,GAGRA,KAAkBA,GAAgB,KAFnBA,GAA2B,YAAI,GAAK,cAClDA,GAAcA,GAA2B,YAAI,GAAK,cCFtD,ICFyC9D,GAArCiE,IACA7D,EAAkB6D,GADmBjE,GDGrC,WACI1S,KAAK4W,KAAOJ,GAAcK,cCcvBF,IAhBP,SAASA,KACL,IAAIpR,EAAmB,OAAXmN,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KAahE,OATAuF,EAAM6N,eAAiB,CACnB3L,KAAMpH,EAAUgT,SAChBuD,KAAMvW,EAAUuT,QAChB/L,MAAOxH,EAAUgT,SACjByD,MAAOzW,EAAUuT,QACjBvE,IAAKhP,EAAUuT,QACfmD,IAAK1W,EAAUuT,QACfoD,OAAQ3W,EAAUuT,SAEfrO,ECbf,IAAsCmN,GAAlCuE,IACAnE,EAAkBmE,GADgBvE,GAyBpC+D,IAHEQ,GAAOtD,aAAe,2CACtBsD,GAAO/U,SAAW,aACX+U,IAnBP,SAASA,GAAOlQ,EAAQU,EAAMI,EAAOiP,EAAOzH,EAAK0H,EAAKvU,GAClD,IAAI+C,EAAQmN,GAAO5R,KAAKd,OAASA,KACjCuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACfqD,QAASrW,EAAUgT,SACnB7Q,WAAYnC,EAAUuT,SAE1B,IAAIsD,EAAY,IAAIP,GAQpB,OAPAO,EAAUJ,MAAgB,EAARA,EAAYA,OAAQnR,EACtCuR,EAAUH,IAAM9H,MAAM8H,IAAgB,OAARA,OAAepR,EAAYoR,EACzDG,EAAU7H,IAAMJ,MAAMI,IAAgB,OAARA,OAAe1J,EAAY0J,EACzD6H,EAAUzP,KAAOZ,GAAce,eAAeb,EAAQU,IAASqC,GAAK4G,aACpEwG,EAAUrP,MAAQA,EAClBtC,EAAMmR,QAAU,CAACQ,GACjB3R,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GACrD+C,ECpBf,IAA4CmN,GAAxCyE,IACArE,EAAkBqE,GADsBzE,GAU1Ce,IADS0D,IAPP,SAASA,KACL,IAAI5R,EAAQmN,GAAO5R,KAAKd,OAASA,KAIjC,OAHAuF,EAAMyN,IAAM,EACZzN,EAAM/C,WAAa,GACnB+C,EAAM2D,aAAe,GACd3D,ECRf,IAAwCmN,GAApC0E,IACAtE,EAAkBsE,GADkB1E,GA6BtCyE,IAHEC,GAASzD,aAAe,6CACxByD,GAASlV,SAAW,eACbkV,IAvBP,SAASA,GAASrQ,EAAQU,EAAMS,EAAKmP,EAAY7U,EAAY0G,EAAcI,GACvE,IAAI/D,EAAQmN,GAAO5R,KAAKd,OAASA,KAkBjC,OAjBAuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACf5L,KAAMpH,EAAUuT,QAChB1L,IAAK7H,EAAUuT,QACf0D,SAAUjX,EAAUuT,QACpBpR,WAAYnC,EAAUuT,QACtB1K,aAAc7I,EAAUuT,QACxBtK,GAAIjJ,EAAUuT,SAElBrO,EAAM+D,GAAKzC,GAAcwC,WAAWtC,EAAQuC,GAC5C/D,EAAM2C,IAAMrB,GAAcoB,YAAYlB,EAAQmB,GAC9C3C,EAAMkC,KAAOZ,GAAce,eAAeb,EAAQU,IAASqC,GAAK4G,aAC3DzB,MAAMoI,KACP9R,EAAM+R,SAAWxN,GAAKiF,aAAasI,IAEvC9R,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GAC5D+C,EAAM2D,aAAerC,GAAcoC,qBAAqBlC,EAAQmC,GACzD3D,ECvBf,IAAoDmN,GAAhD6E,IACAzE,EAAkByE,GAD8B7E,GAWlDc,IADS+D,IARP,SAASA,KACL,IAAIhS,EAAQmN,GAAO5R,KAAKd,OAASA,KAKjC,OAJAuF,EAAMyN,IAAM,EACZzN,EAAMiS,SAAU,EAChBjS,EAAM/C,WAAa,GACnB+C,EAAM2D,aAAe,GACd3D,ECRf,IAAoDmN,GAAhD6E,IACAzE,EAAkByE,GAD8B7E,GA+ClD+E,IAHEF,GAAqB5D,aAAe,qDACpC4D,GAAqBrV,SAAW,uBACzBqV,IAzCP,SAASA,GAAqBxQ,EAAQuC,EAAIiI,EAAaK,EAAa/J,EAAO2P,EAASE,EAAYpG,EAAQqG,EAAYnV,EAAY0G,QACzG,IAAfyO,IAAyBA,EAAa,QAC1C,IAAIpS,EAAQmN,GAAO5R,KAAKd,OAASA,KACjCuF,EAAM6N,eAAiB,CACnB9J,GAAIjJ,EAAUgT,SACdL,IAAK3S,EAAUgT,SACf5L,KAAMpH,EAAUuT,QAChB8D,WAAYrX,EAAUuT,QACtB0D,SAAUjX,EAAUuT,QACpB4D,QAASnX,EAAUuT,QACnBlK,KAAMrJ,EAAUuT,QAChB/B,OAAQxR,EAAUuT,QAClBgE,KAAMvX,EAAUuT,QAChBpR,WAAYnC,EAAUuT,QACtB1K,aAAc7I,EAAUuT,QACxBgD,KAAMvW,EAAUuT,QAChB/L,MAAOxH,EAAUuT,QACjBkD,MAAOzW,EAAUuT,QACjBvE,IAAKhP,EAAUuT,QACfmD,IAAK1W,EAAUuT,QACfoD,OAAQ3W,EAAUuT,QAClBiE,eAAgBxX,EAAUuT,QAC1BkE,iBAAkBzX,EAAUuT,QAC5BhC,YAAavR,EAAUuT,QACvBmE,mBAAoB1X,EAAUuT,SAElCrO,EAAM+D,GAAKA,EACX/D,EAAM+R,SAAWxN,GAAKiF,aAAalH,GACnCtC,EAAMiS,QAAUA,EAChBjS,EAAMmS,WAAaA,EAAa,GAChCnS,EAAMqS,KAAO/Q,GAAce,eAAeb,EAAQ4Q,GAClD,IAAIK,EAAmBtG,GAAWC,oBAAoB5K,EAAQwK,EAAaD,EAAQM,GAMnF,OALArM,EAAMmE,KAAO7C,GAAcoB,YAAYlB,EAAQ6K,IAAgBoG,EAAiBtO,KAChFnE,EAAMsM,OAAShL,GAAce,eAAeb,EAAQiR,EAAiBnG,QACrEtM,EAAMkC,KAAOZ,GAAce,eAAeb,EAAQiR,EAAiBvQ,MACnElC,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GAC5D+C,EAAM2D,aAAerC,GAAcoC,qBAAqBlC,EAAQmC,GACzD3D,EC1Cf,IAA2CmN,GAAvCuF,IACAnF,EAAkBmF,GADqBvF,GASzCc,IADSyE,IANP,SAASA,KACL,IAAI1S,EAAQmN,GAAO5R,KAAKd,OAASA,KAGjC,OAFAuF,EAAMyN,IAAM,EACZzN,EAAM/C,WAAa,GACZ+C,ECPf,IAAqCmN,GAAjCwF,IACApF,EAAkBoF,GADexF,GAwBnCuF,IAHEC,GAAMvE,aAAe,4CACrBuE,GAAMhW,SAAW,cACVgW,IAlBP,SAASA,GAAMnR,EAAQrE,EAASgS,EAAelS,GAC3C,IAAI+C,EAAQmN,GAAO5R,KAAKd,OAASA,KAajC,OAZAuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACf3Q,QAASrC,EAAUgT,SACnBqB,cAAerU,EAAUuT,QACzBpR,WAAYnC,EAAUuT,SAE1BlR,EAAUA,GAAWoH,GAAK4G,aAC1BnL,EAAM7C,QAAUmE,GAAcwB,gBAAgBtB,EAAQrE,GACtD6C,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GACxDkS,IACAnP,EAAMmP,cAAgBA,GAEnBnP,EClBf,IAAgDmN,GAA5CyF,IACArF,EAAkBqF,GAD0BzF,GAU9CyE,IADSgB,IAPP,SAASA,KACL,IAAI5S,EAAQmN,GAAO5R,KAAKd,OAASA,KAIjC,OAHAuF,EAAMyN,IAAM,EACZzN,EAAM/C,WAAa,GACnB+C,EAAM2D,aAAe,GACd3D,ECRf,IAAmDmN,GAA/C0F,IACAtF,EAAkBsF,GAD6B1F,GAqCjDyF,IAHEC,GAAoBzE,aAAe,wDACnCyE,GAAoBlW,SAAW,0BACxBkW,IA/BP,SAASA,GAAoBrR,EAAQU,EAAMS,EAAKmQ,EAAQ7V,EAAY0G,EAAcoP,GAC9E,IAAI/S,EAAQmN,GAAO5R,KAAKd,OAASA,KA0BjC,OAzBAuF,EAAM6N,eAAiB,CACnBJ,IAAK3S,EAAUgT,SACf5L,KAAMpH,EAAUuT,QAChB1L,IAAK7H,EAAUuT,QACf0D,SAAUjX,EAAUuT,QACpB2E,UAAWlY,EAAUuT,QACrB4E,eAAgBnY,EAAUuT,QAC1B6E,YAAapY,EAAUuT,QACvB8E,iBAAkBrY,EAAUuT,QAC5B+E,cAAetY,EAAUuT,QACzBpR,WAAYnC,EAAUuT,QACtB1K,aAAc7I,EAAUuT,SAE5BrO,EAAM2C,IAAMrB,GAAcoB,YAAYlB,EAAQmB,GAC9C3C,EAAMkC,KAAOZ,GAAce,eAAeb,EAAQU,IAASqC,GAAK4G,aAChEnL,EAAM/C,WAAaqE,GAAc+B,mBAAmB7B,EAAQvE,GAC5D+C,EAAM2D,aAAerC,GAAcoC,qBAAqBlC,EAAQmC,GAC5DoP,IACA/S,EAAMoT,cAAgBL,EAAYK,cAClCpT,EAAM+R,SAAWgB,EAAYhB,SAC7B/R,EAAMiT,eAAiBF,EAAYE,eACnCjT,EAAMgT,UAAYD,EAAYC,UAC9BhT,EAAMmT,iBAAmBJ,EAAYI,iBACrCnT,EAAMkT,YAAcH,EAAYG,aAE7BlT,EClCf,IAAoCmN,GCCzBkG,GACAA,GDFP/F,IACAC,EAAkBD,GADcH,GAmBlCmG,IADShG,IAbP,SAASA,GAAKiG,EAAUpP,GACpB,IAAInE,EAAQmN,GAAO5R,KAAKd,OAASA,KAUjC,OANAuF,EAAM6N,eAAiB,CACnB0F,SAAUzY,EAAUgT,SACpB0F,SAAU1Y,EAAUgT,UAExB9N,EAAMuT,SAAWA,EACjBvT,EAAMwT,SAAWrP,EACVnE,GCdJqT,GAMRA,KAAkBA,GAAgB,KALnBA,GAAuB,QAAI,GAAK,UAC9CA,GAAcA,GAA2B,YAAI,GAAK,cAClDA,GAAcA,GAAuB,QAAI,GAAK,UAC9CA,GAAcA,GAAqB,MAAI,GAAK,QAC5CA,GAAcA,GAAwB,SAAI,GAAK,WCTnD,IAAII,IAGAA,GAAqBC,UAAY,SAAU3U,EAAQ6C,EAAOnB,EAAY6G,GAElE,IAAIqM,EAOJ,YARqB,IAAjBrM,IAA2BA,GAAe,GAG1CqM,EADAlT,GAAc1B,EAAO6U,iBAAmB7U,EAAO6U,gBAAgBnT,KAAgBhF,EAAUC,kBAAkBqD,EAAO6U,gBAAgBnT,GAAYmB,IAChI7C,EAAO6U,gBAAgBnT,GAAYmB,GAGnC7C,EAAO6C,GAEjBnG,EAAUC,kBAAkBiY,GAA6BrM,EAAdqM,GAEhDF,IAbP,SAASA,MCDb,IAAII,GACA,WACIpZ,KAAKqZ,mBAAqB,qBAC1BrZ,KAAKsZ,iBAAmB,uBACxBtZ,KAAKuZ,kBAAoB,wBACzBvZ,KAAKwZ,cAAgB,+BACrBxZ,KAAKyZ,iBAAmB,uBACxBzZ,KAAK0Z,SAAW,eAChB1Z,KAAK2Z,SAAW,eAChB3Z,KAAK4Z,eAAiB,qBACtB5Z,KAAK6Z,aAAe,mBACpB7Z,KAAK8Z,YAAc,kBACnB9Z,KAAK+Z,mBAAqB,yBAC1B/Z,KAAKga,cAAgB,oBACrBha,KAAKia,kBAAoB,wBACzBja,KAAKka,cAAgB,oBACrBla,KAAKma,SAAW,eAChBna,KAAKoa,gBAAkB,sBACvBpa,KAAKqa,mBAAqB,yBAC1Bra,KAAKsa,eAAiB,qBACtBta,KAAKua,uBAAyB,6BAC9Bva,KAAKwa,WAAa,iBAClBxa,KAAKya,kBAAoB,wBACzBza,KAAK0a,aAAe,mBACpB1a,KAAK2a,cAAgB,oBACrB3a,KAAK4a,qBAAuB,2BAC5B5a,KAAK6a,WAAa,iBAClB7a,KAAK8a,gBAAkB,sBACvB9a,KAAK+a,iBAAmB,uBACxB/a,KAAKgb,aAAe,mBACpBhb,KAAKib,YAAc,kBACnBjb,KAAKkb,cAAgB,oBACrBlb,KAAKmb,kBAAoB,wBACzBnb,KAAKob,gBAAkB,sBACvBpb,KAAKqb,yBAA2B,+BAChCrb,KAAKsb,2BAA6B,iCAClCtb,KAAKub,UAAY,gBACjBvb,KAAKwb,eAAiB,qBACtBxb,KAAKyb,aAAe,mBACpBzb,KAAK0b,2BAA6B,iCAClC1b,KAAK2b,cAAgB,oBACrB3b,KAAK6O,UAAY,oBACjB7O,KAAK4b,OAAS,aACd5b,KAAK6b,gBAAkB,sBACvB7b,KAAK8b,eAAiB,qBACtB9b,KAAK+b,iCAAmC,kCACxC/b,KAAKgc,qCAAuC,kCAC5Chc,KAAKic,UAAY,gBACjBjc,KAAKkc,UAAY,gBACjBlc,KAAKmc,aAAe,mBACpBnc,KAAKoc,kBAAoB,wBACzBpc,KAAKqc,iBAAmB,uBACxBrc,KAAKsc,cAAgB,oBACrBtc,KAAKuc,oBAAsB,0BAC3Bvc,KAAKwc,iBAAmB,uBACxBxc,KAAKyc,mBAAqB,yBAC1Bzc,KAAK0c,qBAAuB,4BC5CzBC,GAAa,IAAIvD,GCVxBwD,IAKAA,GAAgB1c,UAAU2c,QAAU,SAAUC,GAC1C9c,KAAK+c,QAAQ7Y,KAAK4Y,IAEtBF,GAAgB1c,UAAU4W,MAAQ,WAC9B,OAAO9W,KAAK+c,QAAQlc,QAExB+b,GAAgB1c,UAAU8c,MAAQ,WAC9Bhd,KAAK+c,QAAQlc,OAAS,GAE1B+b,GAAgB1c,UAAU+c,SAAW,WACjC,OAAOjd,KAAK+c,QAAQvO,MAAM,IAE9BoO,GAAgB1c,UAAUgd,cAAgB,SAAUJ,GAChD,OAAIA,GAA4B,EAAjBA,EAAQjc,OACPb,KAAKmd,QAAQC,wBACrBN,EAAQO,KAAK,MACb,IAAMP,EAAQO,KAAK,KAAO,IAG3B,MAEXT,GAAgB1c,UAAUod,WAAa,SAAUR,GAC7C9c,KAAKgd,SAETJ,GAAgB1c,UAAUqd,UAAY,SAAUT,KAGzCF,IA/BP,SAASA,GAAgBtY,GACrBtE,KAAKmd,QAAU7Y,EACftE,KAAK+c,QAAU,GAmCvB,IAAIS,IAkBAA,GAAyBtd,UAAU2c,QAAU,SAAUC,GAC/C9c,KAAK+c,QAAQlc,QAAU2c,GAAyBC,gBAE3Czd,KAAK0d,yBACN1d,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAA6C,gCAAkC9B,KAAK+c,QAAQlc,QAAQ,GACxJb,KAAK0d,wBAAyB,IAItC1d,KAAK+c,QAAQ7Y,KAAK4Y,GAClB9c,KAAK4d,UAAUJ,GAAyBK,WAAY7d,KAAK+c,WAE7DS,GAAyBtd,UAAU4W,MAAQ,WACvC,OAAO9W,KAAK+c,QAAQlc,QAExB2c,GAAyBtd,UAAU8c,MAAQ,WACvChd,KAAK+c,QAAQlc,OAAS,EACtBb,KAAK4d,UAAUJ,GAAyBK,WAAY,IACpD7d,KAAK4d,UAAUJ,GAAyBM,gBAAiB,IACzD9d,KAAK0d,wBAAyB,GAElCF,GAAyBtd,UAAU+c,SAAW,WAC1C,OAAOjd,KAAK+c,QAAQvO,MAAM,IAE9BgP,GAAyBtd,UAAUgd,cAAgB,SAAUJ,GACzD,OAAIA,GAA4B,EAAjBA,EAAQjc,OACPb,KAAKmd,QAAQC,wBACrBN,EAAQO,KAAK,MACb,IAAMP,EAAQO,KAAK,KAAO,IAG3B,MAEXG,GAAyBtd,UAAUod,WAAa,SAAUR,GACtD9c,KAAK+c,QAAU/c,KAAK+d,yBAAyBjB,EAAS9c,KAAK+c,SAC3D/c,KAAK4d,UAAUJ,GAAyBK,WAAY7d,KAAK+c,SACzD,IAAIiB,EAAehe,KAAKie,UAAUT,GAAyBM,iBACvDE,aAAwBre,OAASmd,aAAmBnd,SACpDqe,EAAeA,EAAaE,OAAOpB,IAClBjc,OAAS2c,GAAyBC,kBAG/Czd,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,yCAA2Ckc,EAAand,QAAQ,GAClKmd,EAAand,OAAS2c,GAAyBC,iBAEnDzd,KAAK4d,UAAUJ,GAAyBM,gBAAiBE,KAGjER,GAAyBtd,UAAUqd,UAAY,SAAUT,GACrD,IAAIkB,EAAehe,KAAKie,UAAUT,GAAyBM,iBAC3DE,EAAehe,KAAK+d,yBAAyBjB,EAASkB,GACtDhe,KAAK4d,UAAUJ,GAAyBM,gBAAiBE,IAE7DR,GAAyBtd,UAAU6d,yBAA2B,SAAUK,EAAUC,GAC9E,IAAIC,EAAY,GAChB,IAAK,IAAI5d,KAAK2d,EAAQ,CAClB,IAAIE,GAAW,EACf,IAAK,IAAIC,KAAKJ,EACV,GAAIA,EAASI,KAAOH,EAAO3d,GAAI,CAC3B6d,GAAW,EACX,MAGHA,GACDD,EAAUpa,KAAKma,EAAO3d,IAI9B,OAAO4d,GAEXd,GAAyBtd,UAAU+d,UAAY,SAAUjX,GACrD,IAAIyX,EAAczX,EAClB,IACIyX,EAAcze,KAAKmd,QAAQuB,YAAc1e,KAAKmd,QAAQuB,aAAe1e,KAAKmd,QAAQuB,aAAe,IAAMD,EAAcA,EACrH,IAAIE,EAAa7U,GAAKkC,kBAAkBhM,KAAK2d,QAASc,GACtD,GAAIE,EAAY,CACZ,IAAIN,EAASzb,KAAKgc,MAAMD,GACxB,GAAIN,EACA,OAAOA,GAInB,MAAOtV,GACH/I,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAiD,iBAAmB2c,EAAc,KAAO3U,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAEnM,MAAO,IAEXyU,GAAyBtd,UAAU0d,UAAY,SAAU5W,EAAKqX,GAC1D,IAAII,EAAczX,EAClB,IACIyX,EAAcze,KAAKmd,QAAQuB,YAAc1e,KAAKmd,QAAQuB,aAAe1e,KAAKmd,QAAQuB,aAAe,IAAMD,EAAcA,EACrH,IAAIE,EAAa/b,KAAKC,UAAUwb,GAChCvU,GAAKmC,kBAAkBjM,KAAK2d,QAASc,EAAaE,GAEtD,MAAO5V,GAGHe,GAAKmC,kBAAkBjM,KAAK2d,QAASc,EAAa7b,KAAKC,UAAU,KACjE7C,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAA6C,iBAAmB2c,EAAc,KAAO3U,GAAKyB,iBAAiBxC,GAAK,mBAAoB,CAAEN,UAAWqB,GAAK0B,KAAKzC,OAGvNyU,GAAyBK,WAAa,YACtCL,GAAyBM,gBAAkB,gBAE3CN,GAAyBC,gBAAkB,IACpCD,IA1HP,SAASA,GAAyBzW,EAAQzC,GACtCtE,KAAK0d,wBAAyB,EAC9B1d,KAAK2d,QAAU5W,EACf/G,KAAKmd,QAAU7Y,EACf,IAAIua,EAAc7e,KAAKie,UAAUT,GAAyBK,YACtDiB,EAAoB9e,KAAKie,UAAUT,GAAyBM,iBAChE9d,KAAK+c,QAAU8B,EAAYX,OAAOY,GAE9B9e,KAAK+c,QAAQlc,OAAS2c,GAAyBC,kBAC/Czd,KAAK+c,QAAQlc,OAAS2c,GAAyBC,iBAKnDzd,KAAK4d,UAAUJ,GAAyBM,gBAAiB,IACzD9d,KAAK4d,UAAUJ,GAAyBK,WAAY7d,KAAK+c,SCrDjE,IAAIgC,IAGAA,GAAgBC,kBAAoB,SAAUtV,GAC1C,IAAIuV,EAAmB,KACvB,IAAK,IAAIjY,KAAO0C,EACZ,GAAIA,EAAK7J,eAAemH,GAAM,CAC1B,IAAIa,EAAQ6B,EAAK1C,GACI,iBAAVa,IACFoX,IACDA,EAAmB,IAEvBA,EAAiBjY,GAAOa,GAIpC,OAAOoX,GAEXF,GAAgBG,4BAA8B,SAAUxV,EAAMlH,EAAY0G,GACtE,IAAKlI,EAAUC,kBAAkByI,GAC7B,IAAK,IAAI1C,KAAO0C,EACZ,GAAIA,EAAK7J,eAAemH,GAAM,CAC1B,IAAIa,EAAQ6B,EAAK1C,GACI,iBAAVa,EACPqB,EAAalC,GAAOa,EAGpBrF,EAAWwE,GADW,iBAAVa,EACMA,EAGAjF,KAAKC,UAAUgF,KAOrDkX,GAAgBI,eAAiB,SAAUpY,EAAQ4M,EAAcyL,EAAe1V,GAC5E,IAAI2V,EAAW,IAAItM,GAAShM,EAAQ2C,EAAMiK,GAC1C0L,EAAS/L,KAAO8L,EAAc9L,KAC9B,IAAIgM,EAAeF,EAAc9L,KAAKhS,QAAQ,KAAM,IAQpD,OAPA+d,EAAS5X,KAAO4X,EAAS5X,KAAKnG,QAAQ,MAAOge,GAE7CP,GAAgBQ,uBAAuBH,EAAeC,GAEjDD,EAAclM,OACfkM,EAAclM,KAAO,IAElBmM,GAKXN,GAAgBQ,uBAAyB,SAAU3a,EAAM4a,GAWrD,GATKA,EAAItM,OACLsM,EAAItM,KAAO,IAEVtO,EAAK6a,MACN7a,EAAK6a,IAAM,IAEV7a,EAAKsO,OACNtO,EAAKsO,KAAO,IAEZtO,EAAK6a,IAAIC,KAAM,CACX9a,EAAK6a,IAAIC,KAAKC,SACdH,EAAItM,KAAKyJ,GAAWb,gBAAkBlX,EAAK6a,IAAIC,KAAKC,QAExD,IAAI/D,EAAShX,EAAK6a,IAAIC,KAAKpW,IAAM1E,EAAK6a,IAAIC,KAAKE,QAC3ChE,IACA4D,EAAItM,KAAKyJ,GAAWf,QAAUA,GAmBtC,GAhBIhX,EAAK6a,IAAII,KACLjb,EAAK6a,IAAII,IAAIC,QACbN,EAAItM,KAAKyJ,GAAWpB,WAAa3W,EAAK6a,IAAII,IAAIC,OAGlDlb,EAAK6a,IAAIM,UACLnb,EAAK6a,IAAIM,OAAOzW,IAAM1E,EAAK6a,IAAIM,OAAOH,WACtCJ,EAAItM,KAAKyJ,GAAWjD,UAAY9U,EAAK6a,IAAIM,OAAOzW,IAAM1E,EAAK6a,IAAIM,OAAOH,SAEtEhb,EAAK6a,IAAIM,OAAOC,cAChBR,EAAItM,KAAKyJ,GAAWnC,YAAc5V,EAAK6a,IAAIM,OAAOC,aAElDpb,EAAK6a,IAAIM,OAAOE,KAChBT,EAAItM,KAAKyJ,GAAWhD,UAAY/U,EAAK6a,IAAIM,OAAOE,KAGpDrb,EAAK6a,IAAIS,IAAK,CACd,IAAIA,EAAMtb,EAAK6a,IAAIS,IACfA,EAAIC,cACJX,EAAItM,KAAKyJ,GAAW/C,gBAAkBsG,EAAIC,aAE1CD,EAAIE,aACJZ,EAAItM,KAAKyJ,GAAW/B,sBAAwBsF,EAAIE,YAEhDF,EAAIG,UACJb,EAAItM,KAAKyJ,GAAWhC,eAAiBuF,EAAIG,SAE7Cb,EAAI9V,KAAO8V,EAAI9V,MAAQ,GACvB8V,EAAI9V,KAAKqP,SAAWyG,EAAI9V,KAAKqP,UAAY,GACzCyG,EAAI9V,KAAKqP,SAASvW,WAAagd,EAAI9V,KAAKqP,SAASvW,YAAc,GAC3D0d,EAAI3T,SACJiT,EAAI9V,KAAKqP,SAASvW,WAAmB,OAAI0d,EAAI3T,QAE7C2T,EAAItL,WACJ4K,EAAI9V,KAAKqP,SAASvW,WAAqB,SAAI0d,EAAItL,SAAShT,YAExDse,EAAII,YACJd,EAAI9V,KAAKqP,SAASvW,WAAsB,UAAI0d,EAAII,WAEhDJ,EAAIK,cACJf,EAAI9V,KAAKqP,SAASvW,WAAwB,YAAI0d,EAAIK,YAAY3e,YAGlEgD,EAAK6a,IAAIM,QACLnb,EAAK6a,IAAIM,OAAOS,QAChBhB,EAAItM,KAAKyJ,GAAW7C,aAAelV,EAAK6a,IAAIM,OAAOS,OAGvD5b,EAAK6a,IAAIgB,IAAM7b,EAAK6a,IAAIgB,GAAGhZ,z//DAC3B+X,EAAItM,KAAKyJ,GAAWxC,UAAYvV,EAAK6a,IAAIgB,GAAGhZ,MAE5C7C,EAAK6a,IAAIM,QACLnb,EAAK6a,IAAIM,OAAOvF,aAChBgF,EAAItM,KAAKyJ,GAAWnC,YAAc5V,EAAK6a,IAAIM,OAAOvF,YAItD5V,EAAK6a,IAAIiB,QACL9b,EAAK6a,IAAIiB,MAAMC,WACfnB,EAAItM,KAAKyJ,GAAWxB,mBAAqBvW,EAAK6a,IAAIiB,MAAMC,UAExD/b,EAAK6a,IAAIiB,MAAMjZ,OACf+X,EAAItM,KAAKyJ,GAAWzB,eAAiBtW,EAAK6a,IAAIiB,MAAMjZ,MAEpD7C,EAAK6a,IAAIiB,MAAME,UACfpB,EAAItM,KAAKyJ,GAAW1B,aAAerW,EAAK6a,IAAIiB,MAAME,UA4B1D,IAVA,IAAIC,EAAM,GACNC,EAAU,SAAUpgB,GACpB,IAAIqgB,EAAKnc,EAAKsO,KAAKxS,GAEnBlB,OAAOuM,KAAKgV,GAAIjc,QAAQ,SAAUkC,GAC9B6Z,EAAI7Z,GAAO+Z,EAAG/Z,KAElBpC,EAAKsO,KAAKkD,OAAO1V,EAAG,IAGfA,EAAIkE,EAAKsO,KAAKrS,OAAS,EAAQ,GAALH,EAAQA,IACvCogB,EAAQpgB,GAGZ,IAAK,IAAIqgB,KAAMnc,EAAKsO,KAChB2N,EAAIE,GAAMnc,EAAKsO,KAAK6N,GAExBvB,EAAItM,KAAOqB,EAAiB,GAAIiL,EAAItM,KAAM2N,GACrCrB,EAAItM,KAAKyJ,GAAWF,sBAErB+C,EAAItM,KAAKyJ,GAAWF,oBAAsB,cAAgBsC,GAAgBiC,UAGlFjC,GAAgBiC,QAAU,QACnBjC,IAnLP,SAASA,MAsLb,IAAyDrM,GAArDuO,IACAnO,EAAkBmO,GADmCvO,GAgCvDqM,IA3BEkC,GAA0B/gB,UAAUghB,OAAS,SAAUna,EAAQqY,GAC3Dpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAIqf,EAAqB/B,EAAcrG,SAAS7P,cAAgB,GAC5D+V,EAAmBG,EAAcrG,SAASvW,YAAc,GAC5Duc,GAAgBG,4BAA4BE,EAAc1V,KAAMuV,EAAkBkC,GAClF,IAAIC,EAAKhC,EAAcrG,SACvB,GAAI/X,EAAUC,kBAAkBmgB,GAE5B,OADAra,EAAOzD,cAAc,qCACd,KAEX,IAAIgG,EAAK8X,EAAG9X,GACRiI,EAAc6P,EAAGvP,OACjBwP,EAAUD,EAAG3Z,KACb6P,EAAW8J,EAAG9J,SACdE,EAAU4J,EAAG5J,QACbE,EAAa0J,EAAGE,aAChB3J,EAAayJ,EAAGxJ,KAChBtG,EAAS8P,EAAG5e,YAAc4e,EAAG5e,WAAWoQ,IAAcwO,EAAG5e,WAAWoQ,IAAc,MAClFmG,EAAW,IAAIxB,GAAqBxQ,EAAQuC,EAAIiI,EAAa8P,EAAS/J,EAAUE,EAASE,EAAYpG,EAAQqG,EAAYsH,EAAkBkC,GAC3IzX,EAAO,IAAImJ,GAAK0E,GAAqBrV,SAAU6W,GACnD,OAAOgG,GAAgBI,eAAepY,EAAQwQ,GAAqB5D,aAAcyL,EAAe1V,IAEpGuX,GAA0BA,0BAA4B,IAAIA,GACnDA,IA7BP,SAASA,KACL,OAAkB,OAAXvO,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KA+BnE,IAAoD0S,GAAhD6O,IACAzO,EAAkByO,GAD8B7O,GAiClDqM,IA5BEwC,GAAqBrhB,UAAUghB,OAAS,SAAUna,EAAQqY,GACtDpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAImd,EAAmB,GACnBkC,EAAqB,GACrB/B,EAActG,WAAapF,GAAMxR,WACjC+c,EAAiC,eAAIG,EAActG,UAEnDsG,EAActG,WAAapF,GAAMxR,UACjC+c,EAAmBG,EAAcrG,SAASvW,YAAc,GACxD2e,EAAqB/B,EAAcrG,SAAS7P,cAAgB,IAGxDkW,EAAcrG,UACdgG,GAAgBG,4BAA4BE,EAAcrG,SAAUkG,EAAkBkC,GAI9FpC,GAAgBG,4BAA4BE,EAAc1V,KAAMuV,EAAkBkC,GAClF,IAAIlR,EAAYmP,EAAcrG,SAAStR,KACnCsR,EAAW,IAAIrF,GAAM3M,EAAQkJ,EAAWgP,EAAkBkC,GAC1DzX,EAAO,IAAImJ,GAAKa,GAAMxR,SAAU6W,GACpC,OAAOgG,GAAgBI,eAAepY,EAAQ2M,GAAMC,aAAcyL,EAAe1V,IAErF6X,GAAqBA,qBAAuB,IAAIA,GACzCA,IA9BP,SAASA,KACL,OAAkB,OAAX7O,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KAgCnE,IAAwD0S,GAApD8O,IACA1O,EAAkB0O,GADkC9O,GAiBtDqM,IAZEyC,GAAyBthB,UAAUghB,OAAS,SAAUna,EAAQqY,GAC1Dpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAIsf,EAAKhC,EAAcrG,SACnBA,EAAW5E,GAAUC,oBAAoBrN,EAAQqa,GACjD1X,EAAO,IAAImJ,GAAKsB,GAAUjS,SAAU6W,GACxC,OAAOgG,GAAgBI,eAAepY,EAAQoN,GAAUR,aAAcyL,EAAe1V,IAEzF8X,GAAyBA,yBAA2B,IAAIA,GACjDA,IAdP,SAASA,KACL,OAAkB,OAAX9O,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KAgBnE,IAAqD0S,GAAjD+O,IACA3O,EAAkB2O,GAD+B/O,GAwBnDqM,IAnBE0C,GAAsBvhB,UAAUghB,OAAS,SAAUna,EAAQqY,GACvDpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAI4f,EAAQtC,EAAcrG,SAASvW,YAAc,GAC7Cyc,EAAmBF,GAAgBC,kBAAkBI,EAAc1V,MACvEuV,EAAmB1K,EAAiB,GAAImN,EAAOzC,GAC/C,IAAIxX,EAAO2X,EAAcrG,SAAStR,KAC9Bka,EAAUvC,EAAcrG,SAAS4I,QACjCC,EAAcxC,EAAcrG,SAAS6I,YACrCvS,EAAM+P,EAAcrG,SAAS1J,IAC7B0H,EAAMqI,EAAcrG,SAAShC,IAC7BgC,EAAW,IAAI9B,GAAOlQ,EAAQU,EAAMka,EAASC,EAAavS,EAAK0H,EAAKkI,GACpEvV,EAAO,IAAImJ,GAAKoE,GAAO/U,SAAU6W,GACrC,OAAOgG,GAAgBI,eAAepY,EAAQkQ,GAAOtD,aAAcyL,EAAe1V,IAEtF+X,GAAsBA,sBAAwB,IAAIA,GAC3CA,IArBP,SAASA,KACL,OAAkB,OAAX/O,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KAuBnE,IAAuD0S,GAAnDmP,IACA/O,EAAkB+O,GADiCnP,GA6DrDqM,IAxDE8C,GAAwB3hB,UAAUghB,OAAS,SAAUna,EAAQqY,GACzDpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAGtG,IAAIwV,OAAW3R,EACV3E,EAAUC,kBAAkBme,EAAcrG,WAC1C/X,EAAUC,kBAAkBme,EAAcrG,SAASvW,aACnDxB,EAAUC,kBAAkBme,EAAcrG,SAASvW,WAAW8U,UAIzDtW,EAAUC,kBAAkBme,EAAc1V,OAC/C1I,EAAUC,kBAAkBme,EAAc1V,KAAe,YAC1D4N,EAAW8H,EAAc1V,KAAe,gBACjC0V,EAAc1V,KAAe,WANpC4N,EAAW8H,EAAcrG,SAASvW,WAAW8U,gBACtC8H,EAAcrG,SAASvW,WAAW8U,UAO7C,IAEIwK,EAFAV,EAAKhC,EAAcrG,SAGnBqG,EAAcK,KAAOL,EAAcK,IAAIiB,OAAStB,EAAcK,IAAIiB,MAAME,UACxEkB,EAAmB1C,EAAcK,IAAIiB,MAAME,SAE/C,IAAItX,EAAK8X,EAAG9X,IAAMwY,EACdra,EAAO2Z,EAAG3Z,KACVS,EAAMkZ,EAAGW,IACTvf,EAAa4e,EAAG5e,YAAc,GAC9B0G,EAAekY,EAAGlY,cAAgB,GActC,GAZKlI,EAAUC,kBAAkBmgB,EAAGY,UAChCxf,EAAmB,OAAI4e,EAAGY,QAGzBhhB,EAAUC,kBAAkBmgB,EAAGa,YAChCzf,EAAqB,SAAI4e,EAAGa,UAG3BjhB,EAAUC,kBAAkBmgB,EAAGc,cAChC1f,EAAuB,WAAI4e,EAAGc,WAAWtgB,aAGxCZ,EAAUC,kBAAkBmgB,EAAG5e,YAAa,CAC7C,IAAI2f,EAAWf,EAAG5e,WAClB,IAAK,IAAIwE,KAAOmb,EACRA,EAAStiB,eAAemH,KACxBxE,EAAWwE,GAAOmb,EAASnb,IAIvC,IAAI+R,EAAW,IAAI3B,GAASrQ,EAAQU,EAAMS,EAAKoP,EAAU9U,EAAY0G,EAAcI,GAC/EI,EAAO,IAAImJ,GAAKuE,GAASlV,SAAU6W,GACvC,OAAOgG,GAAgBI,eAAepY,EAAQqQ,GAASzD,aAAcyL,EAAe1V,IAExFmY,GAAwBA,wBAA0B,IAAIA,GAC/CA,IA1DP,SAASA,KACL,OAAkB,OAAXnP,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KA4DnE,IAAkE0S,GAA9D0P,IACAtP,EAAkBsP,GAD4C1P,GAqBhEqM,IAhBEqD,GAAmCliB,UAAUghB,OAAS,SAAUna,EAAQqY,GACpEpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAIsf,EAAKhC,EAAcrG,SACnBtR,EAAO2Z,EAAG3Z,KACVS,EAAMkZ,EAAGW,KAAOX,EAAGlZ,IACnB1F,EAAa4e,EAAG5e,WAChB0G,EAAekY,EAAGlY,aAClB6P,EAAW,IAAIX,GAAoBrR,EAAQU,EAAMS,OAAKvC,EAAWnD,EAAY0G,EAAckY,GAC3F1X,EAAO,IAAImJ,GAAKuF,GAAoBlW,SAAU6W,GAClD,OAAOgG,GAAgBI,eAAepY,EAAQqR,GAAoBzE,aAAcyL,EAAe1V,IAEnG0Y,GAAmCA,mCAAqC,IAAIA,GACrEA,IAlBP,SAASA,KACL,OAAkB,OAAX1P,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KAoBnE,IAAoD0S,GAAhD2P,IACAvP,EAAkBuP,GAD8B3P,GAoBlDqM,IAfEsD,GAAqBniB,UAAUghB,OAAS,SAAUna,EAAQqY,GACtDpf,KAAK2d,QAAU5W,EACX/F,EAAUC,kBAAkBme,EAAcrG,WAC1C/Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,0CAEtG,IAAIY,EAAU0c,EAAcrG,SAASrW,QACjCgS,EAAgB0K,EAAcrG,SAASrE,cACvCuK,EAAmBF,GAAgBC,kBAAkBI,EAAc1V,MACnEgY,EAAQnN,EAAiB,GAAI0K,EAAkBG,EAAcrG,SAASvW,YACtEuW,EAAW,IAAIb,GAAMnR,EAAQrE,EAASgS,EAAegN,GACrDhY,EAAO,IAAImJ,GAAKqF,GAAMhW,SAAU6W,GACpC,OAAOgG,GAAgBI,eAAepY,EAAQmR,GAAMvE,aAAcyL,EAAe1V,IAErF2Y,GAAqBA,qBAAuB,IAAIA,GACzCA,IAjBP,SAASA,KACL,OAAkB,OAAX3P,IAAmBA,GAAO3R,MAAMf,KAAMY,YAAcZ,KCtYnE,IAAIsiB,IAOAA,GAAWpiB,UAAUqiB,UAAY,SAAUrhB,GACvC,IAAIshB,EAASxiB,KAAKyiB,iBAAiBvhB,EAAO,QAC1C,OAAO0B,KAAKC,UAAU2f,IAE1BF,GAAWpiB,UAAUuiB,iBAAmB,SAAUC,EAAQjb,GACtD,IAAIkb,EAAyB,uBACzBH,EAAS,GACb,IAAKE,EAED,OADA1iB,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA0C,0DAA2D,CAAE2F,KAAMA,IAAQ,GACnK+a,EAEX,GAAIE,EAAOC,GAEP,OADA3iB,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAA8C,uDAAwD,CAAE2F,KAAMA,IAAQ,GACnK+a,EAEX,IAAKE,EAAOtP,eAAgB,CAExB,GAAa,iBAAT3L,EACA+a,EAASxiB,KAAK4iB,oBAAoBF,EAAQ,SAAUjb,QAEnD,GAAa,eAATA,EACL+a,EAASxiB,KAAK4iB,oBAAoBF,EAAQ,SAAUjb,QAEnD,GAAa,SAATA,EACL+a,EAASxiB,KAAK4iB,oBAAoBF,EAAQ,SAAUjb,QAEnD,GAAIqC,GAAKyD,QAAQmV,GAClBF,EAASxiB,KAAK6iB,gBAAgBH,EAAQjb,OAErC,CACDzH,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAyD,2EAA4E,CAAE2F,KAAMA,IAAQ,GACzM,IAEI7E,KAAKC,UAAU6f,GACfF,EAASE,EAEb,MAAO3Z,GAEH/I,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA2CiH,GAA2B,mBAAfA,EAAEnH,SAA2BmH,EAAEnH,WAAa,2BAA4B,MAAM,IAGlM,OAAO4gB,EAGX,IAAK,IAAIrb,KADTub,EAAOC,IAA0B,EACfD,EAAOtP,eAAgB,CACrC,IAeIvL,EAfAib,EAAWJ,EAAOtP,eAAejM,GACjC4b,EAAkC,mBAAbD,EAA4BA,IAAaziB,EAAUgT,SAAayP,EAAWziB,EAAUgT,SAC1G2P,EAAgC,mBAAbF,EAA4BA,IAAaziB,EAAUkT,OAAWuP,EAAWziB,EAAUkT,OACtGhG,EAAUuV,EAAWziB,EAAUV,MAC/BsjB,OAA8Btd,IAAlB+c,EAAOvb,GACnB+b,EAAoC,iBAAlBR,EAAOvb,IAAyC,OAAlBub,EAAOvb,IACvD4b,GAAeE,GAAc1V,EAK7ByV,QAoBUrd,KAZNkC,EAHJqb,EACI3V,EAEQvN,KAAK6iB,gBAAgBH,EAAOvb,GAAQA,GAIpCnH,KAAKyiB,iBAAiBC,EAAOvb,GAAQA,GAKzCub,EAAOvb,MAIfqb,EAAOrb,GAASU,GAzBhB7H,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAsD,wFAAyF,CAAEqF,MAAOA,EAAOM,KAAMA,IA6BlO,cADOib,EAAOC,GACPH,GAEXF,GAAWpiB,UAAU2iB,gBAAkB,SAAUM,EAAS1b,GACtD,IAAI+a,OAAS7c,EACb,GAAMwd,EACF,GAAKrZ,GAAKyD,QAAQ4V,GAGb,CACDX,EAAS,GACT,IAAK,IAAI9hB,EAAI,EAAGA,EAAIyiB,EAAQtiB,OAAQH,IAAK,CACrC,IAAIgiB,EAASS,EAAQziB,GACjBkE,EAAO5E,KAAKyiB,iBAAiBC,EAAQjb,EAAO,IAAM/G,EAAI,KAC1D8hB,EAAOte,KAAKU,SAPhB5E,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAmC,yFAA0F,CAAE2F,KAAMA,IAAQ,GAW1M,OAAO+a,GAEXF,GAAWpiB,UAAU0iB,oBAAsB,SAAU3b,EAAKmc,EAAc3b,GACpE,IAAI+a,OAAS7c,EACb,GAAIsB,EAEA,IAAK,IAAIE,KADTqb,EAAS,GACSvb,EAAK,CACnB,IAAIY,EAAQZ,EAAIE,GAChB,GAAqB,WAAjBic,OACczd,IAAVkC,EACA2a,EAAOrb,GAAS,YAED,OAAVU,EACL2a,EAAOrb,GAAS,OAEVU,EAAMjG,SAIZ4gB,EAAOrb,GAASU,EAAMjG,WAHtB4gB,EAAOrb,GAAS,iDAMnB,GAAqB,WAAjBic,EACL,QAAczd,IAAVkC,EACA2a,EAAOrb,GAAS,iBAEf,GAAc,OAAVU,EACL2a,EAAOrb,GAAS,WAEf,CACD,IAAIwC,EAAM0Z,WAAWxb,GACjBoH,MAAMtF,GACN6Y,EAAOrb,GAAS,MAGhBqb,EAAOrb,GAASwC,OAKxB6Y,EAAOrb,GAAS,kBAAoBM,EAAO,uBAC3CzH,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUqE,EAAOrb,GAAQ,MAAM,GAItF,OAAOqb,GAEJF,IAvJP,SAASA,GAAWvb,GAChB/G,KAAK2d,QAAU5W,ECGnB,SAASuc,KACLtjB,KAAKujB,eAAgB,EACrB,IAC0B,oBAAX7Y,OACP1K,KAAKwjB,aAAc,EAEd9Y,QAAUA,OAAO0F,kBACtB1F,OAAO0F,iBAAiB,SAAUpQ,KAAKyjB,WAAWC,KAAK1jB,OAAO,GAC9D0K,OAAO0F,iBAAiB,UAAWpQ,KAAK2jB,YAAYD,KAAK1jB,OAAO,GAChEA,KAAKwjB,aAAc,GAEdpX,UAAYA,SAASwX,MAC1BxX,SAASwX,KAAKC,SAAW7jB,KAAKyjB,WAAWC,KAAK1jB,MAC9CoM,SAASwX,KAAKE,UAAY9jB,KAAK2jB,YAAYD,KAAK1jB,MAChDA,KAAKwjB,aAAc,GAEdpX,UACLA,SAASyX,SAAW7jB,KAAKyjB,WAAWC,KAAK1jB,MACzCoM,SAAS0X,UAAY9jB,KAAK2jB,YAAYD,KAAK1jB,MAC3CA,KAAKwjB,aAAc,GAInBxjB,KAAKwjB,aAAc,EAG3B,MAAOza,GAEH/I,KAAKwjB,aAAc,GA4BxB,IAAIO,IAzBPT,GAAgBpjB,UAAUujB,WAAa,WACnCzjB,KAAKujB,eAAgB,GAEzBD,GAAgBpjB,UAAUyjB,YAAc,WACpC3jB,KAAKujB,eAAgB,GAEzBD,GAAgBpjB,UAAU8jB,SAAW,WACjC,OAAIhkB,KAAKwjB,YACExjB,KAAKujB,gBAEP3U,YAAc5N,EAAUC,kBAAkB2N,UAAUqV,UAClDrV,UAAUqV,QAOzBX,GAAgBpjB,UAAUgkB,UAAY,WAClC,OAAQlkB,KAAKgkB,YAEjBV,GAAgBS,QAAU,IAAIT,GACvBA,IAG0BS,QC7DjCI,IAGAA,GAAuBjkB,UAAUkkB,iBAAmB,SAAUpd,GAE1D,OADYhH,KAAKqkB,YAAYrd,GAAOmd,GAAuBG,cAC5C,KAEnBH,GAAuBjkB,UAAUmkB,YAAc,SAAUnjB,GACrD,GAAa,IAATA,EACA,OAAO,EAEX,KAAOA,EAAML,OAASsjB,GAAuBI,kBACzCrjB,EAAQA,EAAMgd,OAAOhd,GAIzB,IADA,IAAIsjB,EAAO,KACF9jB,EAAI,EAAGA,EAAIQ,EAAML,SAAUH,EAChC8jB,GAASA,GAAQ,GAAKA,EAAQtjB,EAAMujB,WAAW/jB,GAG/C8jB,GAAcA,EAElB,OAAO9iB,KAAKgjB,IAAIF,IAGpBL,GAAuBG,cAAgB,WAEvCH,GAAuBI,iBAAmB,EACnCJ,IA3BP,SAASA,MCCb,IAAIQ,IAKAA,GAAuBzkB,UAAU0kB,iBAAmB,SAAUhgB,GAkB1D,OAhBIA,EAAKsO,MAAQtO,EAAKsO,KAAKlT,KAAK+L,KAAK6P,QACzB5b,KAAK6kB,kBAAkBT,iBAAiBxf,EAAKsO,KAAKlT,KAAK+L,KAAK6P,SAE/DhX,EAAK6a,KAAO7a,EAAK6a,IAAIC,MAAQ9a,EAAK6a,IAAIC,KAAKpW,GACxCtJ,KAAK6kB,kBAAkBT,iBAAiBxf,EAAK6a,IAAIC,KAAKpW,IAEzD1E,EAAKsO,MAAQtO,EAAKsO,KAAKlT,KAAK+L,KAAKkP,aAC9Bjb,KAAK6kB,kBAAkBT,iBAAiBxf,EAAKsO,KAAKlT,KAAK+L,KAAKkP,cAE/DrW,EAAK6a,KAAO7a,EAAK6a,IAAIqF,gBAAkBlgB,EAAK6a,IAAIqF,eAAelE,QAC5D5gB,KAAK6kB,kBAAkBT,iBAAiBxf,EAAK6a,IAAIqF,eAAelE,SAI/C,IAAhBlf,KAAKC,UAIfgjB,IAxBP,SAASA,KACL3kB,KAAK6kB,kBAAoB,IAAIV,GAC7BnkB,KAAK+L,KAAO,IAAIqN,GCFxB,IAAI2L,IAoBAA,GAAO7kB,UAAU8kB,YAAc,SAAU3F,GACrC,IAAI4F,EAAqBjlB,KAAKiT,WAE9B,OAAIgS,MAAAA,GAAyF,KAAtBA,GAG9D5F,EAASvG,WAAa7B,GAAO/U,UAIxBlC,KAAKklB,uBAAuBN,iBAAiBvF,GAAY4F,GAGpEF,IAhCP,SAASA,GAAO9R,EAAYlM,GAExB/G,KAAKskB,cAAgB,WACjBtjB,EAAUC,kBAAkB8F,GAC5B/G,KAAK2d,QAAU,IAAI7a,EAGnB9C,KAAK2d,QAAU5W,GAEF,IAAbkM,GAAoBA,EAAa,KACjCjT,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAyC,8IAA+I,CAAEqjB,aAAclS,IAAc,GAC1QjT,KAAKiT,WAAa,KAEtBjT,KAAKiT,WAAaA,EAClBjT,KAAKklB,uBAAyB,IAAIP,OCZtCS,IASAA,GAAOllB,UAAUmlB,MAAQ,WACrB,MAAM,IAAIpf,MAAM,4BAEpBmf,GAAOllB,UAAUolB,OAAS,WACtB,MAAM,IAAIrf,MAAM,4BAEpBmf,GAAOllB,UAAUqlB,MAAQ,WACrB,IACIvlB,KAAKwlB,cAET,MAAOzc,GACH/I,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAgC,kDAAoDgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,OAGlMqc,GAAOllB,UAAUulB,SAAW,WACxB,MAAM,IAAIxf,MAAM,4BAEpBmf,GAAOllB,UAAUkF,WAAa,SAAUd,EAAQe,EAAMC,GAClD,IAAIC,EAAQvF,KACZA,KAAK2d,QAAUtY,EAAK0B,OACpB/G,KAAK0lB,YAAc,IAAIpD,GAAWjd,EAAK0B,QACvC/G,KAAK2lB,mBAAqB,EAC1B3lB,KAAK4lB,SAAW,KAChB5lB,KAAK6lB,UAAY,EACjB7lB,KAAK8lB,QAAU,KACf,IAAIC,EAAgBX,GAAOY,sCAEb,SAAVlF,EAAoB3Z,GACpB8e,EAAO9I,QAAQhW,GAAS,WAAc,OAAO6R,GAAqBC,UAAU3U,EAAQ6C,EAAO5B,EAAMS,WAAY+f,EAAc5e,OAF/HnH,KAAKmd,QAAUiI,GAAOc,oCACtB,IAGID,EAASjmB,KACb,IAAK,IAAImH,KAAS4e,EACdjF,EAAQ3Z,GAEZnH,KAAK+c,QAAW/c,KAAKmd,QAAQgJ,4BAA8Brc,GAAK8B,uBAC1D,IAAI4R,GAAyBxd,KAAK2d,QAAS3d,KAAKmd,SAAW,IAAIP,GAAgB5c,KAAKmd,SAC1Fnd,KAAKomB,QAAU,IAAIrB,GAAO/kB,KAAKmd,QAAQ8H,qBAAsBjlB,KAAK2d,UAC7D3d,KAAKmd,QAAQkJ,uBAAyBvc,GAAKuG,uBAC5CrQ,KAAK8lB,QAAU9lB,KAAKsmB,cAGS,oBAAlBC,iBAEH,oBADU,IAAIA,gBAEdvmB,KAAK8lB,QAAU9lB,KAAKwmB,WACpBxmB,KAAKymB,0BAA2B,GAED,oBAAnBC,iBACZ1mB,KAAK8lB,QAAU9lB,KAAK2mB,cAKpCvB,GAAOllB,UAAUyE,iBAAmB,SAAUya,GAC1C,IAAI7Z,EAAQvF,KACZ,IAEI,GAAIA,KAAKmd,QAAQyJ,mBAEb,OAGJ,IAAKxH,EAED,YADApf,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA6C,+BAItG,GAAIsd,EAAcrG,WAAaqG,EAActG,SAEzC,YADA9Y,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAiC,uDAQ1F,GALKsd,EAActG,WAEfsG,EAActG,SAAW,cAGxB9Y,KAAK8lB,QAEN,YADA9lB,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAyC,8BAIlG,IAAK9B,KAAK6mB,aAAazH,GAGnB,YADApf,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAA+C,8CAA+C,CAAEglB,WAAY9mB,KAAKomB,QAAQnT,aAI7KmM,EAAclM,KAAOkM,EAAclM,MAAQ,GAC3CkM,EAAclM,KAAe,WAAIlT,KAAKomB,QAAQnT,WAGlD,IAAI8T,EAAe3B,GAAO4B,kBAAkB5H,EAAepf,KAAKmd,QAAQ8J,qBAAsBjnB,KAAK2d,SACnG,IAAKoJ,EAED,YADA/mB,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAwC,4CAGjG,IAAIolB,GAAkB,EAkBtB,GAhBI9H,EAAclM,MAAQkM,EAAclM,KAAKP,MACzCyM,EAAclM,KAAKP,IAAe7N,QAAQ,SAAUqiB,GAChD,IACQA,IAAuC,IAA3BA,EAASJ,KACrBG,GAAkB,EAClB3hB,EAAMoY,QAAQra,cAAc,4CAGpC,MAAOyF,GAGHxD,EAAMoY,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA+C,0EAA4EgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAAM,aAGzOqW,EAAclM,KAAKP,KAE1BuU,EACA,OAGJ,IAAIpK,EAAU9c,KAAK0lB,YAAYnD,UAAUwE,GAErCK,EAAgBpnB,KAAK+c,QAAQE,WAC7BoK,EAAQrnB,KAAK+c,QAAQG,cAAckK,GACnCC,GAAUA,EAAMxmB,OAASic,EAAQjc,OAASb,KAAKmd,QAAQmK,uBACvDtnB,KAAKwlB,cAGTxlB,KAAK+c,QAAQF,QAAQC,GAErB9c,KAAKunB,cAET,MAAOxe,GACH/I,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAkD,gFAAkFgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,KAGxO/H,EAAUC,kBAAkBjB,KAAKwnB,cAClCxnB,KAAKwnB,YAAY7iB,iBAAiBya,IAG1CgG,GAAOllB,UAAUgG,cAAgB,SAAUuhB,GACvCznB,KAAKwnB,YAAcC,GAKvBrC,GAAOllB,UAAUwnB,qBAAuB,SAAUC,EAAK7K,EAAS8K,GAC5D,GAAuB,IAAnBD,EAAIE,WAAkB,CACtB,IAAIC,EAAW,KACV9nB,KAAK+nB,SACND,EAAW9nB,KAAKgoB,eAAeL,EAAIM,cAAgBN,EAAIG,YACvCA,EAASI,QACrBloB,KAAK+nB,OAASD,EAASI,QAG1BP,EAAIQ,OAAS,KAAqB,KAAdR,EAAIQ,SAAiC,IAAfR,EAAIQ,QAC1CnoB,KAAKmd,QAAQiL,mBAAqBpoB,KAAKqoB,aAAaV,EAAIQ,SACzDnoB,KAAKsoB,eAAexL,GACpB9c,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAuC,mBACpE6lB,EAAIQ,OAAS,wBAA0BrL,EAAQjc,OAAS,YAG/Eb,KAAKuoB,SAASzL,EAAS9c,KAAKwoB,uBAAuBb,IAGlD5D,GAAQG,YAERlkB,KAAKmd,QAAQiL,oBAEdpoB,KAAKsoB,eAAexL,EADW,IAE/B9c,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAuC,8BAAgC6lB,EAAIQ,OAAS,qBAAuBpE,GAAQG,YAAc,wBAA0BpH,EAAQjc,OAAS,YAIjN,MAAf8mB,EAAIQ,QACCL,IACDA,EAAW9nB,KAAKgoB,eAAeL,EAAIM,cAAgBN,EAAIG,WAEvDA,IAAa9nB,KAAKmd,QAAQiL,kBAC1BpoB,KAAKyoB,kBAAkB3L,EAASgL,GAGhC9nB,KAAKuoB,SAASzL,EAAS9c,KAAKwoB,uBAAuBb,MAIvD3nB,KAAK2lB,mBAAqB,EAC1B3lB,KAAK0oB,WAAW5L,EAAS8K,MASzCxC,GAAOllB,UAAUslB,YAAc,SAAUmD,QACvB,IAAVA,IAAoBA,GAAQ,GAChC,IAEI,GAAK3oB,KAAKmd,QAAQyJ,mBAUd5mB,KAAK+c,QAAQC,YAVqB,CAClC,GAA2B,EAAvBhd,KAAK+c,QAAQjG,QAAa,CAC1B,IAAIgG,EAAU9c,KAAK+c,QAAQE,WAE3Bjd,KAAK8lB,QAAQhJ,EAAS6L,GAG1B3oB,KAAK6lB,WAAa,IAAIlb,KAK1Bie,aAAa5oB,KAAK6oB,gBAClB7oB,KAAK6oB,eAAiB,KACtB7oB,KAAK4lB,SAAW,KAEpB,MAAO7c,KAEEe,GAAK2E,gBAAwC,EAAtB3E,GAAK2E,iBAC7BzO,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAAuC,+DAAiEgI,GAAKyB,iBAAiBxC,GAAI,CAAEN,UAAWqB,GAAK0B,KAAKzC,OAO1Nqc,GAAOllB,UAAUqoB,SAAW,SAAUzL,EAASpa,EAASomB,GACpD9oB,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAA4B,4BAA6B,CAAEY,QAASA,IACxH1C,KAAK+c,QAAQQ,UAAUT,IAK3BsI,GAAOllB,UAAUuoB,kBAAoB,SAAU3L,EAASiM,GAKpD,IAJA,IAAIC,EAAS,GACTC,EAAQ,GAGHC,EAAK,EAAGC,EADJJ,EAAQK,OAAOC,UACQH,EAAKC,EAAStoB,OAAQqoB,IAAM,CAC5D,IAAIvZ,EAAQwZ,EAASD,GACjBI,EAAYxM,EAAQ1G,OAAOzG,EAAM4Z,MAAO,GAAG,GAC3CvpB,KAAKqoB,aAAa1Y,EAAM6Z,YACxBP,EAAM/kB,KAAKolB,GAIXN,EAAO9kB,KAAKolB,GAGC,EAAjBxM,EAAQjc,QACRb,KAAK0oB,WAAW5L,EAASiM,EAAQU,eAEjB,EAAhBT,EAAOnoB,QACPb,KAAKuoB,SAASS,EAAQhpB,KAAKwoB,uBAAuB,KAAM,CAAC,kBAAmBO,EAAQU,cAAe,KAAMV,EAAQW,eAAerM,KAAK,OAEtH,EAAf4L,EAAMpoB,SACNb,KAAKsoB,eAAeW,GACpBjpB,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAuC,+BACvEgb,EAAQjc,OAAS,aAAemoB,EAAOnoB,OACvD,wBAA0BooB,EAAMpoB,OAAS,WAAakoB,EAAQW,cAAgB,YAM1FtE,GAAOllB,UAAUwoB,WAAa,SAAU5L,EAAS8K,GAC7C5nB,KAAK+c,QAAQQ,UAAUT,IAK3BsI,GAAOllB,UAAUypB,WAAa,SAAUC,EAAK9M,GACzC,IAAI8M,GAAQA,EAAI3B,aAAe,IAAO,OAA8B,KAArB2B,EAAI3B,aAI9C,CACD,IAAIc,EAAU/oB,KAAKgoB,eAAe4B,EAAI3B,cAClCc,GAAWA,EAAQW,eAAiBX,EAAQW,cAAgBX,EAAQU,gBAChEzpB,KAAKmd,QAAQiL,kBACjBpoB,KAAKyoB,kBAAkB3L,EAASiM,GAGhC/oB,KAAKuoB,SAASzL,EAAS9c,KAAK6pB,uBAAuBD,SAVvD5pB,KAAK2lB,mBAAqB,EAC1B3lB,KAAK0oB,WAAW5L,EAAS,IAajCsI,GAAO4B,kBAAoB,SAAU8C,EAAMxW,EAAMvM,GAC7C,IAAIsY,EAOJ,QAFIA,EAJA/L,IAASwW,EAAKxW,MAAStS,EAAUC,kBAAkBqS,GAIxCwW,EAHAvV,EAAiB,GAAIuV,EAAM,CAAExW,KAAMA,KAKjCwF,UACb,KAAKpF,GAAMxR,SACP,OAAOqf,GAAqBA,qBAAqBL,OAAOna,EAAQsY,GACpE,KAAKnH,GAAMhW,SACP,OAAOmgB,GAAqBA,qBAAqBnB,OAAOna,EAAQsY,GACpE,KAAKjI,GAASlV,SACV,OAAO2f,GAAwBA,wBAAwBX,OAAOna,EAAQsY,GAC1E,KAAKjH,GAAoBlW,SACrB,OAAOkgB,GAAmCA,mCAAmClB,OAAOna,EAAQsY,GAChG,KAAKlL,GAAUjS,SACX,OAAOsf,GAAyBA,yBAAyBN,OAAOna,EAAQsY,GAC5E,KAAKpI,GAAO/U,SACR,OAAOuf,GAAsBA,sBAAsBP,OAAOna,EAAQsY,GACtE,KAAK9H,GAAqBrV,SACtB,OAAO+e,GAA0BA,0BAA0BC,OAAOna,EAAQsY,GAC9E,QACI,OAAOkC,GAAqBA,qBAAqBL,OAAOna,EAAQsY,KAG5E+F,GAAOY,oCAAsC,WAEzC,MAAO,CACH9a,YAAa,WAAc,MAAO,iDAClCkS,sBAAuB,WAAc,OAAO,GAC5C2M,iBAAkB,WAAc,OAAO,MACvCzC,oBAAqB,WAAc,OAAO,QAC1CV,iBAAkB,WAAc,OAAO,GACvCT,2BAA4B,WAAc,OAAO,GACjDiC,gBAAiB,WAAc,OAAO,GACtC/B,oBAAqB,WAAc,OAAO,GAC1CY,mBAAoB,aACpBvI,WAAY,aACZuG,mBAAoB,WAAc,OAAO,OAGjDG,GAAOc,kCAAoC,WACvC,MAAO,CACHhb,iBAAavF,EACbyX,2BAAuBzX,EACvBokB,sBAAkBpkB,EAClB2hB,yBAAqB3hB,EACrBihB,sBAAkBjhB,EAClBwgB,gCAA4BxgB,EAC5ByiB,qBAAiBziB,EACjB0gB,yBAAqB1gB,EACrBshB,wBAAoBthB,EACpB+Y,gBAAY/Y,EACZsf,wBAAoBtf,IAG5Byf,GAAOllB,UAAU2mB,aAAe,SAAUxH,GACtC,OAAOrf,KAAKomB,QAAQpB,YAAY3F,IASpC+F,GAAOllB,UAAUomB,cAAgB,SAAUxJ,EAASkN,GAChD,IAAI9hB,EAAMlI,KAAKmd,QAAQjS,cACnBmc,EAAQrnB,KAAK+c,QAAQG,cAAcJ,GAGnCmN,EAAiB,IAAIC,KAAK,CAAC7C,GAAQ,CAAEzP,KAAM,6BAElChJ,UAAU0B,WAAWpI,EAAK+hB,IAEnCjqB,KAAK+c,QAAQO,WAAWR,GAExB9c,KAAK0oB,WAAW5L,EAASA,EAAQjc,UAGjCb,KAAKwmB,WAAW1J,GAAS,GACzB9c,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAuC,yEAQnGsjB,GAAOllB,UAAUsmB,WAAa,SAAU1J,EAASkN,GAC7C,IAAIzkB,EAAQvF,KACR2nB,EAAM,IAAIpB,eACdoB,EAAwB,yDAAI,EAC5BA,EAAIwC,KAAK,OAAQnqB,KAAKmd,QAAQjS,cAAe8e,GAC7CrC,EAAIyC,iBAAiB,eAAgB,oBAEjCtgB,GAAKmB,sCAAsCjL,KAAKmd,QAAQjS,gBACxDyc,EAAIyC,iBAAiB/jB,EAAeK,iBAAkBL,EAAeM,8BAEzEghB,EAAI0C,mBAAqB,WAAc,OAAO9kB,EAAMmiB,qBAAqBC,EAAK7K,EAASA,EAAQjc,SAC/F8mB,EAAI2C,QAAU,SAAUxB,GAAS,OAAOvjB,EAAMgjB,SAASzL,EAASvX,EAAMijB,uBAAuBb,GAAMmB,IAEnG,IAAIzB,EAAQrnB,KAAK+c,QAAQG,cAAcJ,GACvC6K,EAAI4C,KAAKlD,GACTrnB,KAAK+c,QAAQO,WAAWR,IAM5BsI,GAAOllB,UAAU8nB,eAAiB,SAAUF,GACxC,IACI,GAAIA,GAAyB,KAAbA,EAAiB,CAC7B,IAAI1a,EAASxK,KAAKgc,MAAMkJ,GACxB,GAAI1a,GAAUA,EAAOsc,eAAiBtc,EAAOsc,eAAiBtc,EAAOqc,eACjErc,EAAOsc,cAAgBtc,EAAOqc,eAAiBrc,EAAOgc,OAAOvoB,OAC7D,OAAOuM,GAInB,MAAOrE,GACH/I,KAAK2d,QAAQ5a,cAAclB,EAAgBsc,SAAUrc,EAA2C,8BAAgCgI,GAAKyB,iBAAiBxC,GAAI,CACtJ+e,SAAUA,IAGlB,OAAO,MAMX1C,GAAOllB,UAAUooB,eAAiB,SAAUxL,EAAS0N,GAEjD,QADqB,IAAjBA,IAA2BA,EAAe,GACzC1N,GAA8B,IAAnBA,EAAQjc,OAAxB,CAGAb,KAAK+c,QAAQQ,UAAUT,GACvB9c,KAAK2lB,qBACL,IAAK,IAAIuD,EAAK,EAAGuB,EAAY3N,EAASoM,EAAKuB,EAAU5pB,OAAQqoB,IAAM,CAC/D,IAAItkB,EAAO6lB,EAAUvB,GACrBlpB,KAAK+c,QAAQF,QAAQjY,GAGzB5E,KAAK0qB,cAAcF,GACnBxqB,KAAKunB,gBAKTnC,GAAOllB,UAAUwqB,cAAgB,SAAUF,GACvC,IACIG,EACJ,GAAI3qB,KAAK2lB,oBAAsB,EAC3BgF,EAHqB,OAKpB,CACD,IAAIC,GAAelpB,KAAKmpB,IAAI,EAAG7qB,KAAK2lB,oBAAsB,GAAK,EAE3DmF,EAAeppB,KAAK4L,MAAM5L,KAAKC,SAAWipB,EARzB,IAQ6D,EAClFE,GAAeN,EACfG,EAAiBjpB,KAAKqV,IAAIrV,KAAK2N,IAAIyb,EAAc,MAV5B,IAazB,IAAIC,EAAqBpgB,KAAKyH,MAA0B,IAAjBuY,EAEvC3qB,KAAK4lB,SAAWmF,GAKpB3F,GAAOllB,UAAUqnB,YAAc,WAC3B,IAAIhiB,EAAQvF,KACZ,IAAKA,KAAK6oB,eAAgB,CACtB,IAAImC,EAAgBhrB,KAAK4lB,SAAWlkB,KAAKqV,IAAI,EAAG/W,KAAK4lB,SAAWjb,KAAKyH,OAAS,EAC1E6Y,EAAavpB,KAAKqV,IAAI/W,KAAKmd,QAAQ4M,mBAAoBiB,GAC3DhrB,KAAK6oB,eAAiBqC,WAAW,WAC7B3lB,EAAMigB,eACPyF,KAOX7F,GAAOllB,UAAUmoB,aAAe,SAAUmB,GACtC,OAAqB,KAAdA,GACc,KAAdA,GACc,KAAdA,GACc,KAAdA,GAEXpE,GAAOllB,UAAUsoB,uBAAyB,SAAUb,EAAKjlB,GACrD,OAAIilB,EACO,yBAA2BA,EAAIQ,OAAS,aAAeR,EAAIM,cAAgBN,EAAIG,UAAY,GAE/FplB,GAYX0iB,GAAOllB,UAAUymB,WAAa,SAAU7J,EAASkN,GAC7C,IAAIzkB,EAAQvF,KACR4pB,EAAM,IAAIlD,eACdkD,EAAIuB,OAAS,WAAc,OAAO5lB,EAAMokB,WAAWC,EAAK9M,IACxD8M,EAAIU,QAAU,SAAUxB,GAAS,OAAOvjB,EAAMgjB,SAASzL,EAASvX,EAAMskB,uBAAuBD,GAAMd,IAGnG,IAAIsC,EAAkB1gB,OAAOgC,UAAYhC,OAAOgC,SAASC,SACzD,GAAmE,IAA/D3M,KAAKmd,QAAQjS,cAAcmgB,YAAYD,EAAiB,GAIxD,OAHAprB,KAAK2d,QAAQ5a,cAAclB,EAAgBwB,QAASvB,EAAuC,0GAE3F9B,KAAK+c,QAAQC,QAGjB,IAAI9R,EAAclL,KAAKmd,QAAQjS,cAAc5J,QAAQ,aAAc,IACnEsoB,EAAIO,KAAK,OAAQjf,GAEjB,IAAImc,EAAQrnB,KAAK+c,QAAQG,cAAcJ,GACvC8M,EAAIW,KAAKlD,GACTrnB,KAAK+c,QAAQO,WAAWR,IAE5BsI,GAAOllB,UAAU2pB,uBAAyB,SAAUD,EAAKlnB,GACrD,OAAIknB,EACO,2BAA6BA,EAAI3B,cAAgB,GAErDvlB,GAEJ0iB,IAhhBP,SAASA,KACLplB,KAAK8F,SAAW,KAChB9F,KAAKgG,WCcwB,2BDV7BhG,KAAKymB,0BAA2B"}