{"version":3,"file":"SamplingScoreGenerator.js","sourceRoot":"","sources":["../../../src/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,OAAO,EAAE,cAAc,EAAE,MAAM,uCAAuC,CAAC;AAEvE;IAII;QACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,sBAAsB,EAAE,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;IACrC,CAAC;IAEM,iDAAgB,GAAvB,UAAwB,IAAoB;QACxC,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACjF,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACvD,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACtF,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAChF,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACrF,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,2CAA2C;YAC3C,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,6BAAC;AAAD,CAAC,AA1BD,IA0BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ITelemetryItem } from '@microsoft/applicationinsights-core-js';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\n\r\nexport class SamplingScoreGenerator {\r\n    private hashCodeGeneragor: HashCodeScoreGenerator;\r\n    private keys: ContextTagKeys;\r\n\r\n    constructor() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n\r\n    public getSamplingScore(item: ITelemetryItem): number {\r\n        var score: number = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) { // search in tags first, then ext\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        } else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        } else if (item.tags && item.tags[this.keys.operationId]) { // search in tags first, then ext\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        } else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        } else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n\r\n        return score;\r\n    }\r\n}"]}