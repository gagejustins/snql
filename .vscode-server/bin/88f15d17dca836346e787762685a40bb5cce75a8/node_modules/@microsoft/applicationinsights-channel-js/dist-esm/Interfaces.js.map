{"version":3,"file":"Interfaces.js","sourceRoot":"","sources":["../src/Interfaces.ts"],"names":[],"mappings":"","sourcesContent":["export interface ISenderConfig {\r\n    /**\r\n     * The url to which payloads will be sent\r\n     */\r\n    endpointUrl: () => string;\r\n\r\n    /**\r\n    * The JSON format (normal vs line delimited). True means line delimited JSON.\r\n    */\r\n    emitLineDelimitedJson: () => boolean;\r\n\r\n    /**\r\n     * The maximum size of a batch in bytes\r\n     */\r\n    maxBatchSizeInBytes: () => number;\r\n\r\n    /**\r\n     * The maximum interval allowed between calls to batchInvoke\r\n     */\r\n    maxBatchInterval: () => number;\r\n\r\n    /**\r\n     * The master off switch.  Do not send any data if set to TRUE\r\n     */\r\n    disableTelemetry: () => boolean;\r\n\r\n    /**\r\n     * Store a copy of a send buffer in the session storage\r\n     */\r\n    enableSessionStorageBuffer: () => boolean;\r\n\r\n    /**\r\n     * Is retry handler disabled.\r\n     * If enabled, retry on 206 (partial success), 408 (timeout), 429 (too many requests), 500 (internal server error) and 503 (service unavailable).\r\n     */\r\n    isRetryDisabled: () => boolean;\r\n\r\n    isBeaconApiDisabled: () => boolean;\r\n\r\n    /**\r\n     * (Optional) Override the instrumentation key that this channel instance sends to\r\n     */\r\n    instrumentationKey: () => string;\r\n\r\n    namePrefix: () => string;\r\n\r\n    samplingPercentage: () => number;\r\n}\r\n\r\nexport interface IBackendResponse {\r\n    /**\r\n     * Number of items received by the backend\r\n     */\r\n    itemsReceived: number;\r\n\r\n    /**\r\n     * Number of items succesfuly accepted by the backend\r\n     */\r\n    itemsAccepted: number;\r\n\r\n    /**\r\n     * List of errors for items which were not accepted\r\n     */\r\n    errors: IResponseError[];\r\n\r\n    /**\r\n     * App id returned by the backend - not necessary returned, but we don't need it with each response.\r\n     */\r\n    appId?: string;\r\n}\r\n\r\nexport interface XDomainRequest extends XMLHttpRequestEventTarget {\r\n    responseText: string;\r\n    send(payload: string);\r\n    open(method: string, url: string);\r\n}\r\n\r\nexport interface IResponseError {\r\n    index: number;\r\n    statusCode: number;\r\n    message: string;\r\n}\r\n"]}