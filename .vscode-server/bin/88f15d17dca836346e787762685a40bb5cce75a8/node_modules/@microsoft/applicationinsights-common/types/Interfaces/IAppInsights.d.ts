import { IEventTelemetry } from './IEventTelemetry';
import { IPageViewTelemetry } from './IPageViewTelemetry';
import { IExceptionTelemetry } from './IExceptionTelemetry';
import { IAutoExceptionTelemetry } from './IExceptionTelemetry';
import { ITraceTelemetry } from './ITraceTelemetry';
import { IMetricTelemetry } from './IMetricTelemetry';
import { IPageViewPerformanceTelemetry } from './IPageViewPerformanceTelemetry';
import { ITelemetryItem } from '@microsoft/applicationinsights-core-js';
export interface IAppInsights {
    trackEvent(event: IEventTelemetry, customProperties?: {
        [key: string]: any;
    }): any;
    trackPageView(pageView: IPageViewTelemetry, customProperties?: {
        [key: string]: any;
    }): any;
    trackException(exception: IExceptionTelemetry, customProperties?: {
        [key: string]: any;
    }): void;
    _onerror(exception: IAutoExceptionTelemetry): void;
    trackTrace(trace: ITraceTelemetry, customProperties?: {
        [key: string]: any;
    }): void;
    trackMetric(metric: IMetricTelemetry, customProperties?: {
        [key: string]: any;
    }): void;
    startTrackPage(name?: string): any;
    stopTrackPage(name?: string, url?: string, customProperties?: Object): any;
    startTrackEvent(name: string): any;
    stopTrackEvent(name: string, properties?: Object, measurements?: Object): any;
    addTelemetryInitializer(telemetryInitializer: (item: ITelemetryItem) => boolean | void): any;
    trackPageViewPerformance(pageViewPerformance: IPageViewPerformanceTelemetry, customProperties?: {
        [key: string]: any;
    }): void;
}
