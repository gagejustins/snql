// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import * as tslib_1 from "tslib";
import { EventData } from '../Interfaces/Contracts/Generated/EventData';
import { DataSanitizer } from './Common/DataSanitizer';
import { FieldType } from '../Enums';
import { Util } from '../Util';
var Event = /** @class */ (function (_super) {
    tslib_1.__extends(Event, _super);
    /**
     * Constructs a new instance of the EventTelemetry object
     */
    function Event(logger, name, properties, measurements) {
        var _this = _super.call(this) || this;
        _this.aiDataContract = {
            ver: FieldType.Required,
            name: FieldType.Required,
            properties: FieldType.Default,
            measurements: FieldType.Default
        };
        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;
        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);
        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);
        return _this;
    }
    Event.envelopeType = "Microsoft.ApplicationInsights.{0}.Event";
    Event.dataType = "EventData";
    return Event;
}(EventData));
export { Event };
//# sourceMappingURL=Event.js.map