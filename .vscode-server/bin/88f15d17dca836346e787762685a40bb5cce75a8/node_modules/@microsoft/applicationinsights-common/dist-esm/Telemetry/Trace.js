// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import * as tslib_1 from "tslib";
import { MessageData } from '../Interfaces/Contracts/Generated/MessageData';
import { DataSanitizer } from './Common/DataSanitizer';
import { FieldType } from '../Enums';
import { Util } from '../Util';
var Trace = /** @class */ (function (_super) {
    tslib_1.__extends(Trace, _super);
    /**
     * Constructs a new instance of the TraceTelemetry object
     */
    function Trace(logger, message, severityLevel, properties) {
        var _this = _super.call(this) || this;
        _this.aiDataContract = {
            ver: FieldType.Required,
            message: FieldType.Required,
            severityLevel: FieldType.Default,
            properties: FieldType.Default
        };
        message = message || Util.NotSpecified;
        _this.message = DataSanitizer.sanitizeMessage(logger, message);
        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);
        if (severityLevel) {
            _this.severityLevel = severityLevel;
        }
        return _this;
    }
    Trace.envelopeType = "Microsoft.ApplicationInsights.{0}.Message";
    Trace.dataType = "MessageData";
    return Trace;
}(MessageData));
export { Trace };
//# sourceMappingURL=Trace.js.map