{"version":3,"file":"IExceptionTelemetry.js","sourceRoot":"","sources":["../../src/Interfaces/IExceptionTelemetry.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { SeverityLevel } from './Contracts/Generated/SeverityLevel'\r\n\r\n/**\r\n * @export\r\n * @interface IExceptionTelemetry\r\n * @description Exception interface used as primary parameter to trackException\r\n */\r\nexport interface IExceptionTelemetry {\r\n    /**\r\n     * Unique guid identifying this error\r\n     */\r\n    id?: string;\r\n\r\n    /**\r\n     * @deprecated\r\n     * @type {Error}\r\n     * @memberof IExceptionTelemetry\r\n     * @description DEPRECATED: Please use exception instead. Behavior/usage for exception remains the same as this field.\r\n     */\r\n    error?: Error;\r\n\r\n    /**\r\n     * @type {Error}\r\n     * @memberof IExceptionTelemetry\r\n     * @description Error Object(s)\r\n     */\r\n    exception?: Error;\r\n\r\n    /**\r\n     * @description Specified severity of exception for use with\r\n     * telemetry filtering in dashboard\r\n     * @type {(SeverityLevel | number)}\r\n     * @memberof IExceptionTelemetry\r\n     */\r\n    severityLevel?: SeverityLevel | number;\r\n\r\n    /**\r\n     * Collection of custom properties\r\n     * @type {{ [key: any]: string}}\r\n     * @memberof IExceptionTelemetry\r\n     */\r\n    properties?: { [key: string]: any};\r\n\r\n    /**\r\n     * Collection of custom measurements\r\n     * @type {{ [key: string]: number}}\r\n     * @memberof IExceptionTelemetry\r\n     */\r\n    measurements?: { [key: string]: number};\r\n}\r\n\r\n/**\r\n * @description window.onerror function parameters\r\n * @export\r\n * @interface IAutoExceptionTelemetry\r\n */\r\nexport interface IAutoExceptionTelemetry {\r\n    /**\r\n     * @description error message. Available as event in HTML onerror=\"\" handler\r\n     * @type {string}\r\n     * @memberof IAutoExceptionTelemetry\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * @description URL of the script where the error was raised\r\n     * @type {string}\r\n     * @memberof IAutoExceptionTelemetry\r\n     */\r\n    url: string;\r\n\r\n    /**\r\n     * @description Line number where error was raised\r\n     * @type {number}\r\n     * @memberof IAutoExceptionTelemetry\r\n     */\r\n    lineNumber: number;\r\n\r\n    /**\r\n     * @description Column number for the line where the error occurred\r\n     * @type {number}\r\n     * @memberof IAutoExceptionTelemetry\r\n     */\r\n    columnNumber: number;\r\n\r\n    /**\r\n     * @description Error Object (object)\r\n     * @type {Error}\r\n     * @memberof IAutoExceptionTelemetry\r\n     */\r\n    error: Error;\r\n}\r\n\r\nexport interface IExceptionInternal {\r\n    ver: number;\r\n    id: string;\r\n    exceptions: IExceptionDetailsInternal[];\r\n    severityLevel?: SeverityLevel | number;\r\n    problemGroup: string;\r\n    isManual: boolean;\r\n    properties: { [key: string]: any};\r\n    measurements: { [key: string]: number};\r\n}\r\n\r\nexport interface IExceptionDetailsInternal {\r\n    id: number;\r\n    outerId: number;\r\n    typeName: string;\r\n    message: string;\r\n    hasFullStack: boolean;\r\n    stack: string;\r\n    parsedStack: IExceptionStackFrameInternal[];\r\n}\r\n\r\nexport interface IExceptionStackFrameInternal {\r\n    level: number;\r\n    method: string;\r\n    assembly: string;\r\n    fileName: string;\r\n    line: number;\r\n    pos?: number;\r\n}\r\n"]}