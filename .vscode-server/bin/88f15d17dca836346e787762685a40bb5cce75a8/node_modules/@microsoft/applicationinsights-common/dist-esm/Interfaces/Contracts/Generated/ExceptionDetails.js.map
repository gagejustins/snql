{"version":3,"file":"ExceptionDetails.js","sourceRoot":"","sources":["../../../../src/Interfaces/Contracts/Generated/ExceptionDetails.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAKlC;;GAEG;AACH;IAqCI;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IACL,uBAAC;AAAD,CAAC,AAzCD,IAyCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { StackFrame } from './StackFrame';\r\n\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nexport class ExceptionDetails {\r\n\r\n    /**\r\n     * In case exception is nested (outer exception contains inner one), the id and outerId properties are used to represent the nesting.\r\n     */\r\n    public id: number;\r\n\r\n    /**\r\n     * The value of outerId is a reference to an element in ExceptionDetails that represents the outer exception\r\n     */\r\n    public outerId: number;\r\n\r\n    /**\r\n     * Exception type name.\r\n     */\r\n    public typeName: string;\r\n\r\n    /**\r\n     * Exception message.\r\n     */\r\n    public message: string;\r\n\r\n    /**\r\n     * Indicates if full exception stack is provided in the exception. The stack may be trimmed, such as in the case of a StackOverflow exception.\r\n     */\r\n    public hasFullStack: boolean;\r\n\r\n    /**\r\n     * Text describing the stack. Either stack or parsedStack should have a value.\r\n     */\r\n    public stack: string;\r\n\r\n    /**\r\n     * List of stack frames. Either stack or parsedStack should have a value.\r\n     */\r\n    public parsedStack: StackFrame[];\r\n\r\n    constructor() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n}\r\n"]}