{"version":3,"file":"applicationinsights-properties-js.min.js","sources":["../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../dist-esm/Context/Session.js","../dist-esm/Context/Application.js","../dist-esm/Context/Device.js","../dist-esm/Context/Internal.js","../dist-esm/Context/User.js","../dist-esm/Context/Location.js","../dist-esm/Context/TelemetryTrace.js","../dist-esm/TelemetryContext.js","../dist-esm/PropertiesPlugin.js","../../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel)\r\n                _this.severityLevel = severityLevel;\r\n            if (id)\r\n                _this.id = id;\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel)\r\n                _this.severityLevel = exception.severityLevel;\r\n            if (exception.id)\r\n                _this.id = exception.id;\r\n            if (exception.problemGroup)\r\n                _this.problemGroup = exception.problemGroup;\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!CoreUtils.isNullOrUndefined(exception.ver))\r\n                _this.ver = exception.ver;\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual))\r\n                _this.isManual = exception.isManual;\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate == 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.1.1\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n    * Constructs a new instance of the internal telemetry data class.\r\n    */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this._logger = logger;\r\n        //get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Sets the authenticated user id and the account id in this session.\r\n    *\r\n    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n    */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.newId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        if (window && window.location && window.location.pathname) {\r\n            this.name = window.location.pathname;\r\n        }\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n        }\r\n        this.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags[CtxTagKeys.applicationVersion] = this.application.ver;\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags[CtxTagKeys.applicationBuild] = this.application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags[CtxTagKeys.locationIp] = this.location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags[CtxTagKeys.userAccountId] = this.user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 110;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event);\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","_InternalMessageId","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","msgId","msg","isUserAct","properties","this","messageId","message","diagnosticText","JSON","stringify","DiagnosticLogger","prototype","throwInternal","severity","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","queue","push","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","config","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","StorageType","FieldType","ChannelController","processTelemetry","item","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","core","extensions","_this","isCookieUseDisabled","Array","channels","invalidChannelIdentifier_1","undefined","sort","a","b","priority","queueItem","identifier","Error","i","setNextPlugin","arr","plugin","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","s","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","_super","__assign","assign","t","n","arguments","apply","Data","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","Domain","EventData","Event","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","baseType","baseData","ConfigurationManager","getConfig","configValue","extensionConfig","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","Session","_SessionManager","update","automaticSession","initializeAutomaticSession","acquisitionExpired","acquisitionDate","sessionExpirationMs","renewalExpired","renewalDate","sessionRenewalMs","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","_logger","_storageNamePrefix","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","CRITICAL","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","cookieDomain","join","toUTCString","acquisitionSpan","renewalSpan","cookieNameConst","namePrefix","Application","Device","deviceClass","Internal","sdkVersion","sdkExtension","User","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","validateUserInput","authenticatedId","authCookie","cookieSeparator","authUserCookieName","encodeURI","clearAuthenticatedUserContext","userCookieName","acqStr","accountAcquisitionDate","newCookie","name_1","authCookieString","decodeURI","Location","TelemetryTrace","parentId","traceID","parentID","TelemetryContext","applySessionContext","event","sessionContext","session","sessionManager","ext","app","sesId","applyOperatingSystemContxt","os","applyApplicationContext","application","build","applyDeviceContext","device","localId","ip","model","applyInternalContext","internal","agentVersion","applyLocationContext","applyOperationContext","telemetryTrace","trace","applyWebContext","web","applyUserContext","user","authId","cleanUp","defaultConfig","appId","PropertiesPlugin","getDefaultConfig","instrumentationKey","samplingPercentage","isBrowserLinkTrackingEnabled","_loop_1","this_1","_extensionConfig","context","_breezeChannel","_processTelemetryInternal","_nextPlugin","nextPlugin"],"mappings":"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"}