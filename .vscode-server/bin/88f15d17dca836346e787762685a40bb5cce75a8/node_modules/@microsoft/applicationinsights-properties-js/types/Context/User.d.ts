import { ITelemetryConfig } from '../Interfaces/ITelemetryConfig';
import { IUser } from '@microsoft/applicationinsights-common';
import { IDiagnosticLogger } from '@microsoft/applicationinsights-core-js';
export declare class User implements IUser {
    static cookieSeparator: string;
    static userCookieName: string;
    static authUserCookieName: string;
    /**
     * The telemetry configuration.
     */
    config: ITelemetryConfig;
    /**
     * The user ID.
     */
    id: string;
    /**
     * Authenticated user id
     */
    authenticatedId: string;
    /**
     * The localId
     */
    localId: string;
    /**
     * The account ID.
     */
    accountId: string;
    /**
     * The account acquisition date.
     */
    accountAcquisitionDate: string;
    private _logger;
    /**
    * Sets the authenticated user id and the account id in this session.
    *
    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.
    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.
    */
    setAuthenticatedUserContext(authenticatedUserId: string, accountId?: string, storeInCookie?: boolean): void;
    /**
     * Clears the authenticated user id and the account id from the user context.
     * @returns {}
     */
    clearAuthenticatedUserContext(): void;
    constructor(config: ITelemetryConfig, logger: IDiagnosticLogger);
    private validateUserInput(id);
}
