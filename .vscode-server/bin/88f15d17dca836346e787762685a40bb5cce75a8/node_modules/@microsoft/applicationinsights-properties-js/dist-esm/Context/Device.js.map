{"version":3,"file":"Device.js","sourceRoot":"","sources":["../../src/Context/Device.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAIlC;IAgCI;;OAEG;IACH;QACI,wCAAwC;QACxC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QAEpB,kDAAkD;QAClD,uFAAuF;QACvF,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IACjC,CAAC;IACL,aAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { IDevice } from '@microsoft/applicationinsights-common';\r\n\r\nexport class Device implements IDevice {\r\n\r\n    /**\r\n     * The type for the current device.\r\n     */\r\n    public deviceClass: string;\r\n\r\n    /**\r\n     * A device unique ID.\r\n     */\r\n    public id: string;\r\n\r\n    /**\r\n     * The application screen resolution.\r\n     */\r\n    resolution: string;\r\n\r\n    /**\r\n     * The device model for the current device.\r\n     */\r\n    public model: string;\r\n\r\n    /**\r\n     * Device identifier known at instrumentation time\r\n     */\r\n    public localId: string;\r\n\r\n    /**\r\n     * Device identifier known at instrumentation time\r\n     */\r\n    public ip: string;\r\n\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    constructor() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n}\r\n"]}