{"version":3,"file":"PropertiesPlugin.js","sourceRoot":"","sources":["../src/PropertiesPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\nimport {\r\n    ITelemetryPlugin, IConfiguration, CoreUtils,\r\n    IAppInsightsCore, IPlugin, ITelemetryItem, IDiagnosticLogger\r\n} from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager,\r\n    IConfig, BreezeChannelIdentifier, PropertiesPluginIdentifier, IPropertiesPlugin, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nimport { ITelemetryConfig } from './Interfaces/ITelemetryConfig';\r\n\r\nexport default class PropertiesPlugin implements ITelemetryPlugin, IPropertiesPlugin {\r\n    public context: TelemetryContext;\r\n    private _logger: IDiagnosticLogger;\r\n    private _breezeChannel: IPlugin; // optional. If exists, grab appId from it\r\n\r\n    public priority = 110;\r\n    public identifier = PropertiesPluginIdentifier;\r\n\r\n    private _nextPlugin: ITelemetryPlugin;\r\n    private _extensionConfig: ITelemetryConfig;\r\n\r\n    public static getDefaultConfig(): ITelemetryConfig {\r\n        const defaultConfig: ITelemetryConfig = {\r\n            instrumentationKey: () => undefined,\r\n            accountId: () => null,\r\n            sessionRenewalMs: () => 30 * 60 * 1000,\r\n            samplingPercentage: () => 100,\r\n            sessionExpirationMs: () => 24 * 60 * 60 * 1000,\r\n            cookieDomain: () => null,\r\n            sdkExtension: () => null,\r\n            isBrowserLinkTrackingEnabled: () => false,\r\n            appId: () => null,\r\n            namePrefix: () => undefined\r\n        }\r\n        return defaultConfig;\r\n    }\r\n\r\n    initialize(config: IConfiguration & IConfig, core: IAppInsightsCore, extensions: IPlugin[]) {\r\n        const defaultConfig: ITelemetryConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        for (let field in defaultConfig) {\r\n            this._extensionConfig[field] = () => ConfigurationManager.getConfig(config, field, this.identifier, defaultConfig[field]());\r\n        }\r\n\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = () => this._breezeChannel ? this._breezeChannel[\"_appId\"] : null;\r\n    }\r\n\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    processTelemetry(event: ITelemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        } else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n\r\n            this._processTelemetryInternal(event);\r\n\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    setNextPlugin(nextPlugin: ITelemetryPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    }\r\n\r\n    private _processTelemetryInternal(event: ITelemetryItem) {\r\n\r\n\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    }\r\n}"]}