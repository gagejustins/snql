{"version":3,"file":"Init.js","sourceRoot":"","sources":["../src/Init.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAGlC,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AAE9E,OAAO,EAAE,cAAc,IAAI,mBAAmB,EAAW,MAAM,kBAAkB,CAAC;AAElF,YAAY,CAAC;AACb,iEAAiE;AACjE,IAAI,CAAC;IAED,yFAAyF;IACzF,IAAI,MAAM,CAAC;IACX,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;QAC/D,+CAA+C;QAE/C,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,aAAa,CAAC;QAEnD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;YAC/B,+CAA+C;YAC/C,IAAI,OAAO,GAAY,MAAM,CAAC,MAAM,CAAC,IAAS,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;YAE/D,0CAA0C;YAC1C,sCAAsC;YACtC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,OAAO,KAAK,SAAU,CAAC,CAAC,CAAC;gBAC3F,4BAA4B,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1E,CAAC;QACL,CAAC;IACL,CAAC;AACL,CAAC;AAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,2EAA2E;IAC3E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACV,OAAO,CAAC,IAAI,CAAC,uDAAuD,GAAG,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/F,CAAC;AACL,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Initialization as ApplicationInsights, Snippet } from \"./Initialization\";\r\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\n\r\nexport { Initialization as ApplicationInsights, Snippet } from \"./Initialization\";\r\n\r\n\"use strict\";\r\n//should be global function that should load as soon as SDK loads\r\ntry {\r\n\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    var aiName;\r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n        // get snippet or initialize to an empty object\r\n\r\n        aiName = window[\"appInsightsSDK\"] || \"appInsights\";\r\n\r\n        if (window[aiName] !== undefined) {\r\n            // this is the typical case for browser+snippet\r\n            var snippet: Snippet = window[aiName] || <any>{ version: 2.0 };\r\n\r\n            // overwrite snippet with full appInsights\r\n            // for 2.0 initialize only if required\r\n            if ((snippet.version === 2.0 && window[aiName].initialize) || snippet.version === undefined ) {\r\n                ApplicationInsightsContainer.getAppInsights(snippet, snippet.version);\r\n            }\r\n        }\r\n    }\r\n} catch (e) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    if (console) {\r\n        console.warn('Failed to initialize AppInsights JS SDK for instance ' + aiName + e.message);\r\n    }\r\n}\r\n"]}