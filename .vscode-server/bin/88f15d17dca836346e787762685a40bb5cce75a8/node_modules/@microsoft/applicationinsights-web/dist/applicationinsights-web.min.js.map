{"version":3,"file":"applicationinsights-web.min.js","sources":["../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../common/temp/node_modules/tslib/tslib.es6.js","../../shared/AppInsightsCommon/dist-esm/Enums.js","../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../shared/AppInsightsCommon/dist-esm/Util.js","../../shared/AppInsightsCommon/dist-esm/Constants.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","../../channels/applicationinsights-channel-js/dist-esm/SendBuffer.js","../../channels/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","../../channels/applicationinsights-channel-js/dist-esm/Serializer.js","../../channels/applicationinsights-channel-js/dist-esm/Offline.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js","../../channels/applicationinsights-channel-js/dist-esm/Sender.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Session.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Application.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Device.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Internal.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/User.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Location.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","../../extensions/applicationinsights-properties-js/dist-esm/TelemetryContext.js","../../extensions/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajax.js","../dist-esm/Initialization.js","../dist-esm/ApplicationInsightsDeprecated.js","../dist-esm/ApplicationInsightsContainer.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { ChannelController } from './ChannelController';\r\n\"use strict\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Concat all available extensions \r\n        (_a = this._extensions).push.apply(_a, extensions.concat(this.config.extensions));\r\n        // Initial validation \r\n        this._extensions.forEach(function (extension) {\r\n            var isValid = true;\r\n            if (CoreUtils.isNullOrUndefined(extension) || CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                isValid = false;\r\n            }\r\n            if (!isValid) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        // Initial validation complete\r\n        this._extensions.push(this._channelController);\r\n        // Sort by priority\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === this._channelController.priority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < _this._channelController.priority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (this._extensions.length == 0) {\r\n            this._channelController.processTelemetry(telemetryItem); // Pass to Channel controller so data is sent to correct channel queues\r\n        }\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel)\r\n                _this.severityLevel = severityLevel;\r\n            if (id)\r\n                _this.id = id;\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel)\r\n                _this.severityLevel = exception.severityLevel;\r\n            if (exception.id)\r\n                _this.id = exception.id;\r\n            if (exception.problemGroup)\r\n                _this.problemGroup = exception.problemGroup;\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!CoreUtils.isNullOrUndefined(exception.ver))\r\n                _this.ver = exception.ver;\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual))\r\n                _this.isManual = exception.isManual;\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n    * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n    * @param currentPageName Name of page to begin timing for visit duration\r\n    * @param currentPageUrl Url of page to begin timing for visit duration\r\n    */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            //TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib_1.__assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this._logger, exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === \"object\" && typeof history.pushState === \"function\" && typeof history.replaceState === \"function\"\r\n            && typeof window === \"object\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"pushState\"));\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"replaceState\"));\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                window.dispatchEvent(new Event(_self_1.config.namePrefix + \"locationchange\"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = Util.newId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location.pathname;\r\n                }\r\n                setTimeout(function () {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: null, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }, _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.1.1\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = Util.getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.1.1\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = Exception.CreateFromInterface(logger, bd);\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) {\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties;\r\n        var measurements = bd.measurements;\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","import { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !CoreUtils.isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input == \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        this._sample = new Sample(this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[SampleRate] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     */\r\n    Sender.prototype.triggerSend = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    this._sender(payload, async);\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate == 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.1.1\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n    * Constructs a new instance of the internal telemetry data class.\r\n    */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this._logger = logger;\r\n        //get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Sets the authenticated user id and the account id in this session.\r\n    *\r\n    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n    */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.newId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        if (window && window.location && window.location.pathname) {\r\n            this.name = window.location.pathname;\r\n        }\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n        }\r\n        this.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags[CtxTagKeys.applicationVersion] = this.application.ver;\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags[CtxTagKeys.applicationBuild] = this.application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags[CtxTagKeys.locationIp] = this.location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags[CtxTagKeys.userAccountId] = this.user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 110;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event);\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(id, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        ///<summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        //<summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        //<summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        //<summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        //<summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        //<summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.id = id;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!CoreUtils.isNullOrUndefined(strObject)) {\r\n            var stringified = \"\";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\nexport { stringUtils };\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    ///<param name=\"obj\">Object to which </param>\r\n    ///<param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n    ///<param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n    ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=ajaxUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, ConfigurationManager, PropertiesPluginIdentifier } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this._trackAjaxAttempts = 0;\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 120;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    ///<param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    ///<returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== 'undefined') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        }\r\n        else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") == -1) {\r\n                    ajaxMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: xhr.ajaxData.id,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || CoreUtils.isNullOrUndefined(window.Request) ||\r\n            CoreUtils.isNullOrUndefined(window.Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                init.headers.set(RequestHeaders.requestIdHeader, ajaxData.id);\r\n                var appId_1 = this._config.appId || this._context.appId();\r\n                if (appId_1) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId_1);\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                xhr.setRequestHeader(RequestHeaders.requestIdHeader, xhr.ajaxData.id);\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += \"(url: '\" + input + \"')\";\r\n                }\r\n                else {\r\n                    result += \"(url: '\" + input.url + \"')\";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined,\r\n            correlationHeaderDomains: undefined,\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = void 0, extIx = 0;\r\n                while (!propExt && extIx < extensions.length) {\r\n                    if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {\r\n                        propExt = extensions[extIx];\r\n                    }\r\n                    extIx++;\r\n                }\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}());\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { AppInsightsCore, LoggingSeverity, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Util, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\n\"use strict\";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            ApplicationInsights.Version = \"2.1.1\"; // Not currently used anywhere\r\n        }\r\n        this.appInsights = new ApplicationInsights();\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n        this.core = new AppInsightsCore();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        var inPv = pageView || {};\r\n        this.appInsights.trackPageView(inPv);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        var inPvp = pageViewPerformance || {};\r\n        this.appInsights.trackPageViewPerformance(inPvp);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        if (!exception.exception && exception.error) {\r\n            exception.exception = exception.error;\r\n        }\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new Sender();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                //appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.flush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n//# sourceMappingURL=Initialization.js.map","import { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    /**\r\n    * The array of telemetry initializers to call before sending each telemetry item.\r\n    */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            exception: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        //var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","import { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map"],"names":["EventsDiscardedReason","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","LoggingSeverity","NotificationManager","prototype","addNotificationListener","listener","this","listeners","push","removeNotificationListener","index","indexOf","splice","eventsSent","events","_this","_loop_1","i","this_1","setTimeout","length","eventsDiscarded","reason","_loop_2","this_2","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","InvalidEvent","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","msgId","msg","isUserAct","properties","messageId","message","diagnosticText","JSON","stringify","DiagnosticLogger","throwInternal","severity","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","queue","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","config","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","ChannelController","processTelemetry","item","channelQueue","forEach","queues","Object","defineProperty","get","enumerable","configurable","initialize","core","extensions","isCookieUseDisabled","Array","channels","invalidChannelIdentifier_1","undefined","sort","a","b","priority","queueItem","identifier","Error","setNextPlugin","arr","plugin","AppInsightsCore","_isInitialized","instrumentationKey","_notificationManager","extensionConfig","logger","_a","_extensions","apply","concat","extension","isValid","_channelController","extA","extB","typeExtA","typeExtB","ext","t","idx","curr","getTransmissionControls","ChannelControls","track","telemetryItem","_notifyInvalidEvent","iKey","time","Date","toISOString","ver","_validateTelmetryItem","pollInternalLogs","interval","diagnosticLogInterval","setInterval","name","baseType","baseData","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","StorageType","FieldType","__assign","assign","s","n","arguments","call","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","nameTrunc","trim","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","test","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","_super","DisabledPropertyName","ProcessLegacy","HttpMethod","Data","tslib_1.__extends","Envelope","sampleRate","tags","aiDataContract","Required","Hidden","Domain","EventData","Event","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames","level","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","max","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","ConfigurationManager","getConfig","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","PropertiesPluginIdentifier","BreezeChannelIdentifier","PageViewManager","trackPageView","pageView","title","uri","_pageViewPerformanceManager","isPerformanceTimingSupported","appInsights","sendPageViewInternal","_channel","q","flush","_logger","pageViewSent","customDuration","getPerformanceTiming","shouldCollectDuration","overridePageViewDuration","handle","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","pageViewPerformanceSent","sendPageViewPerformanceInternal","CRITICAL","pageViewPerformanceManager","PageVisitTimeManager","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageVisitTimeTrackingHandler","pageName","pageUrl","pageVisitTime","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","prevPageVisitDataKeyName","currPageVisitData","PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","parse","pageVisitStartTime","PageViewPerformanceManager","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","durationProperty","ApplicationInsights","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isStorageUseDisabled","isBrowserLinkTrackingEnabled","enableAutoRouteTracking","namePrefix","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","event","EventTelemetry","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","referrer","_trackAjaxAttempts","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","exceptionPartB","trackException","_onerror","properties_1","URL","_sendCORSException","errorString","addTelemetryInitializer","_initialize","_globalconfig","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","f","instance","autoExceptionInstrumented","originalOnError_1","onerror","handled","history","pushState","replaceState","_self_1","_properties","ret","dispatchEvent","context","telemetryTrace","traceID","autoRoutePVDelay","PageName","PageUrl","average","sampleCount","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Version","bind","_events","_name","ArraySendBuffer","enqueue","payload","_buffer","clear","getItems","batchPayloads","_config","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","MAX_BUFFER_SIZE","_bufferFullMessageSent","setBuffer","BUFFER_KEY","SENT_BUFFER_KEY","removePayloadsFromBuffer","sentElements","getBuffer","payloads","buffer","remaining","contains","j","prefixedKey","bufferJson","bufferItems","notDeliveredItems","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","extractPartAExtensions","user","authId","localId","app","sesId","device","deviceClass","ip","web","browserLang","browserVer","browser","screenRes","userConsent","model","os","parentID","tgs","tg","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","PageViewEnvelopeCreator","currentContextId","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","isListening","_setOnline","_setOffline","body","ononline","onoffline","Offline","isOnline","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","getSamplingScore","hashCodeGeneragor","Sample","isSampledIn","samplingScoreGenerator","samplingRate","Sender","pause","resume","triggerSend","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","_getEmptyAppInsightsChannelConfig","enableSessionStorageBuffer","_sample","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","_XMLHttpRequestSupported","XDomainRequest","_xdrSender","disableTelemetry","_isSampledIn","SampleRate","aiEnvelope_1","constructEnvelope","doNotSendItem_1","callBack","bufferPayload","batch","maxBatchSizeInBytes","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","clearTimeout","_timeoutHandle","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","orig","maxBatchInterval","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","Session","_SessionManager","update","automaticSession","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","_storageNamePrefix","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","acquisitionSpan","renewalSpan","cookieNameConst","Application","Device","Internal","sdkVersion","User","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","validateUserInput","authenticatedId","authCookie","cookieSeparator","authUserCookieName","encodeURI","clearAuthenticatedUserContext","userCookieName","acqStr","accountAcquisitionDate","newCookie","name_1","authCookieString","decodeURI","Location","TelemetryTrace","parentId","TelemetryContext","applySessionContext","sessionContext","session","sessionManager","applyOperatingSystemContxt","applyApplicationContext","application","build","applyDeviceContext","applyInternalContext","internal","agentVersion","applyLocationContext","applyOperationContext","applyWebContext","applyUserContext","cleanUp","PropertiesPlugin","_extensionConfig","_breezeChannel","_processTelemetryInternal","nextPlugin","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","onreadystatechangeCallbackAttached","ajaxRecord","completed","requestHeadersSize","ttfb","responseReceivingDuration","callbackDuration","ajaxTotalDuration","aborted","requestSize","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","originalOnreadystatechage","xhrMonitoringState","clientFailure","CalculateMetrics","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","AjaxMonitor","isMonitoredInstance","excludeAjaxDataValidation","init","disabledProperty","ajaxValidation","initialized","_fetchInitialized","ajaxData","supportsAjaxMonitoring","abort","instrumentOpen","originalOpen","ajaxMonitorInstance","openHandler","_core","ajaxDiagnosticsMessage","getFailedAjaxDiagnosticsMessage","_context","attachToOnReadyStateChange","instrumentSend","originalSend","content","sendHandler","includeCorrelationHeaders","instrumentAbort","originalAbort","onAjaxComplete","exceptionText","dependency","correlationContext","getAjaxCorrelationContext","trackDependencyDataInternal","responseHeadersString","getAllResponseHeaders","getResponseHeader","maxAjaxCallsPerView","trackDependencyData","instrumentFetch","supportsFetch","originalFetch","fetch","fetchMonitorInstance","fetchData","isFetchInstrumented","createFetchRecord","getFailedFetchDiagnosticsMessage","then","onFetchComplete","catch","onFetchFailed","Request","currentWindowHost","headers","Headers","set","appId_1","fetchDiagnosticsMessage","getFetchCorrelationContext","instrumentXhr","disableAjaxTracking","disableFetchTracking","getEmptyConfig","propExt","Initialization","inPvp","dependencies","channel","loadAppInsights","legacyMode","appInsightsChannel","emptyQueue","addHousekeepingBeforeUnload","updateSnippetDefinitions","snippet","appInsightsInstance","disableFlushOnBeforeUnload","_sessionManager","getSKUDefaults","version","DependenciesPlugin","AppInsightsDeprecated","addTelemetryInitializers","_hasLegacyInitializers","appInsightsNew","_processLegacyInitializers","_queue","telemetry","trackDependency","totalTime","handledAt","downloadAndSetup","originalTrackPageView","pagePath","legacyPageView","legacyEvent","enableDebug","verboseLogging","ApplicationInsightsContainer","getAppInsights","initialization","legacy"],"mappings":";;;;8OAKO,IAAIA,EAYO,ECddC,GAGAA,EAAUC,kBAAoB,SAAUC,GACpC,OAAOA,MAAAA,GAMXF,EAAUG,eAAiB,WACvBH,EAAUI,gBAAiB,GAE/BJ,EAAUK,QAAU,WAChB,MAAO,uCAAuCC,QAAQC,EAAW,SAAUC,GAEvE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAgB,EAC9B,OAD6C,MAANH,EAAYC,EAAQ,EAAJA,EAAU,GACxDG,SAAS,OAGnBZ,GAnBP,SAASA,KAsBb,ICvBWa,EDuBPN,EAAY,QEvBZO,GAQAA,EAAoBC,UAAUC,wBAA0B,SAAUC,GAC9DC,KAAKC,UAAUC,KAAKH,IAMxBH,EAAoBC,UAAUM,2BAA6B,SAAUJ,GAEjE,IADA,IAAIK,EAAQJ,KAAKC,UAAUI,QAAQN,IACnB,EAATK,GACHJ,KAAKC,UAAUK,OAAOF,EAAO,GAC7BA,EAAQJ,KAAKC,UAAUI,QAAQN,IAOvCH,EAAoBC,UAAUU,WAAa,SAAUC,GAQjD,IAPA,IAAIC,EAAQT,KACRU,EAAU,SAAUC,GAChBC,EAAOX,UAAUU,GAAGJ,YACpBM,WAAW,WAAc,OAAOJ,EAAMR,UAAUU,GAAGJ,WAAWC,IAAY,IAG9EI,EAASZ,KACJW,EAAI,EAAGA,EAAIX,KAAKC,UAAUa,SAAUH,EACzCD,EAAQC,IAShBf,EAAoBC,UAAUkB,gBAAkB,SAAUP,EAAQQ,GAQ9D,IAPA,IAAIP,EAAQT,KACRiB,EAAU,SAAUN,GAChBO,EAAOjB,UAAUU,GAAGI,iBACpBF,WAAW,WAAc,OAAOJ,EAAMR,UAAUU,GAAGI,gBAAgBP,EAAQQ,IAAY,IAG3FE,EAASlB,KACJW,EAAI,EAAGA,EAAIX,KAAKC,UAAUa,SAAUH,EACzCM,EAAQN,IAGTf,GAvDP,SAASA,IACLI,KAAKC,UAAY,IDFdN,EASRA,oBAAoBA,kBAAkB,KALrBA,EAA0B,SAAI,GAAK,WAInDA,EAAgBA,EAAyB,QAAI,GAAK,cAK3CwB,EAAqB,CAE5BC,kCAAmC,EACnCC,8BAA+B,EAC/BC,gCAAiC,EACjCC,+BAAgC,EAChCC,iCAAkC,EAClCC,qCAAsC,EACtCC,uCAAwC,EACxCC,yBAA0B,EAC1BC,2BAA4B,EAC5BC,4BAA6B,EAC7BC,YAAa,GACbC,2BAA4B,GAC5BC,8BAA+B,GAC/BC,uBAAwB,GACxBC,qBAAsB,GACtBC,sBAAuB,GACvBC,qBAAsB,GACtBC,sBAAuB,GACvBC,sCAAuC,GACvCC,oCAAqC,GACrCC,4BAA6B,GAC7BC,uBAAwB,GACxBC,YAAa,GACbC,0BAA2B,GAC3BC,kCAAmC,GACnCC,6BAA8B,GAC9BC,QAAS,GACTC,yBAA0B,GAC1BC,qBAAsB,GACtBC,sBAAuB,GACvBC,qBAAsB,GACtBC,iBAAkB,GAClBC,gBAAiB,GACjBC,2BAA4B,GAC5BC,iBAAkB,GAClBC,qBAAsB,GACtBC,kBAAmB,GACnBC,cAAe,GACfC,kBAAmB,GACnBC,iBAAkB,GAClBC,mBAAoB,GACpBC,yBAA0B,GAC1BC,6BAA8B,GAC9BC,uBAAwB,GACxBC,4BAA6B,GAC7BC,qBAAsB,GACtBC,yBAA0B,GAC1BC,oBAAqB,GAErBC,sBAAuB,GACvBC,qCAAsC,GACtCC,0BAA2B,GAC3BC,uBAAwB,GACxBC,mBAAoB,GACpBC,mBAAoB,GACpBC,eAAgB,GAChBC,qBAAsB,GACtBC,iBAAkB,GAClBC,YAAa,GACbC,qBAAsB,GACtBC,qBAAsB,GACtBC,gCAAiC,GACjCC,mBAAoB,GACpBC,wBAAyB,GACzBC,uBAAwB,GACxBC,2BAA4B,GAC5BC,2BAA4B,GAC5BC,WAAY,GACZC,yBAA0B,GAC1BC,mBAAoB,GACpBC,UAAW,GACXC,aAAc,IEpFdC,GAWAA,EAAoBC,uBAAyB,SAAUC,GACnD,MAAO,IAAOA,EAAKzG,QAAQ,MAAO,IAAM,KAE5CuG,EAAoBG,SAAW,cAI/BH,EAAoBI,0BAA4B,kBAIhDJ,EAAoBK,uBAAyB,OACtCL,GAtBP,SAASA,EAAoBM,EAAOC,EAAKC,EAAWC,QAC9B,IAAdD,IAAwBA,GAAY,GACxCnG,KAAKqG,UAAYJ,EACjBjG,KAAKsG,SACAH,EAAYR,EAAoBK,uBAAyBL,EAAoBI,2BAC1EE,EACR,IAAIM,GAAkBL,EAAM,YAAcP,EAAoBC,uBAAuBM,GAAO,KACvFE,EAAa,UAAYT,EAAoBC,uBAAuBY,KAAKC,UAAUL,IAAe,IACvGpG,KAAKsG,SAAWC,EAiBxB,IAAIG,GA8DAA,EAAiB7G,UAAU8G,cAAgB,SAAUC,EAAUX,EAAOC,EAAKE,EAAYD,QACjE,IAAdA,IAAwBA,GAAY,GACxC,IAAIG,EAAU,IAAIX,EAAoBM,EAAOC,EAAKC,EAAWC,GAC7D,GAAIpG,KAAK6G,wBACL,MAAMP,EAGN,QAAyB,OAAiBA,QACL,IAArBA,EAAe,QAAmB,CAC1C,GAAIH,EAAW,CAEX,IAAIW,GAAcR,EAAQD,YACrBrG,KAAK+G,eAAeD,IAAe9G,KAAKgH,uBAAyBrH,kBAAgBsH,WAClFjH,KAAKkH,cAAcZ,EAAQA,SAC3BtG,KAAK+G,eAAeD,IAAc,QAKlC9G,KAAKgH,uBAAyBrH,kBAAgBsH,SAC9CjH,KAAKkH,cAAcZ,EAAQA,SAGnCtG,KAAKmH,mBAAmBP,EAAUN,KASlDI,EAAiB7G,UAAUqH,cAAgB,SAAUZ,GAC1B,oBAAZc,SAA6BA,UACR,mBAAjBA,QAAQC,KACfD,QAAQC,KAAKf,GAEe,mBAAhBc,QAAQE,KACpBF,QAAQE,IAAIhB,KAOxBI,EAAiB7G,UAAU0H,0BAA4B,WACnDvH,KAAKwH,cAAgB,EACrBxH,KAAK+G,eAAiB,IAO1BL,EAAiB7G,UAAUsH,mBAAqB,SAAUP,EAAUN,GAChE,IAAItG,KAAKyH,gCAAT,CAIA,IAAIC,GAAa,EACbZ,EAAa9G,KAAK2H,wBAA0BrB,EAAQD,UAQxD,GANIrG,KAAK+G,eAAeD,GACpBY,GAAa,EAGb1H,KAAK+G,eAAeD,IAAc,EAElCY,IAEId,GAAY5G,KAAK4H,0BACjB5H,KAAK6H,MAAM3H,KAAKoG,GAChBtG,KAAKwH,iBAGLxH,KAAKwH,eAAiBxH,KAAK8H,2BAA2B,CACtD,IAAIC,EAAuB,oEACvBC,EAAkB,IAAIrC,EAAoBxE,EAAmBwB,0BAA2BoF,GAAsB,GAClH/H,KAAK6H,MAAM3H,KAAK8H,GAChBhI,KAAKkH,cAAca,MAO/BrB,EAAiB7G,UAAU4H,8BAAgC,WACvD,OAAOzH,KAAKwH,eAAiBxH,KAAK8H,2BAE/BpB,GAtJP,SAASA,EAAiBuB,GAItBjI,KAAK2H,wBAA0B,QAI/B3H,KAAK6G,sBAAwB,WAAc,OAAO,GAMlD7G,KAAKgH,oBAAsB,WAAc,OAAO,GAMhDhH,KAAK4H,sBAAwB,WAAc,OAAO,GAIlD5H,KAAK8H,wBAA0B,WAAc,OAAO,IAIpD9H,KAAK6H,MAAQ,GAIb7H,KAAKwH,cAAgB,EAIrBxH,KAAK+G,eAAiB,GAClBjI,EAAUC,kBAAkBkJ,KAM3BnJ,EAAUC,kBAAkBkJ,EAAOC,uBACpClI,KAAKgH,oBAAsB,WAAc,OAAOiB,EAAOC,sBAEtDpJ,EAAUC,kBAAkBkJ,EAAOE,yBACpCnI,KAAK4H,sBAAwB,WAAc,OAAOK,EAAOE,wBAExDrJ,EAAUC,kBAAkBkJ,EAAOG,mBACpCpI,KAAK8H,wBAA0B,WAAc,OAAOG,EAAOG,kBAE1DtJ,EAAUC,kBAAkBkJ,EAAOpB,yBACpC7G,KAAK6G,sBAAwB,WAAc,OAAOoB,EAAOpB,yBCnFrE,IAEIwB,GAKAA,EAAkBxI,UAAUyI,iBAAmB,SAAUC,GACrDvI,KAAKwI,aAAaC,QAAQ,SAAUC,GAEZ,EAAhBA,EAAO5H,QACP4H,EAAO,GAAGJ,iBAAiBC,MAIvCI,OAAOC,eAAeP,EAAkBxI,UAAW,kBAAmB,CAClEgJ,IAAK,WACD,OAAO7I,KAAKwI,cAEhBM,YAAY,EACZC,cAAc,IAElBV,EAAkBxI,UAAUmJ,WAAa,SAAUf,EAAQgB,EAAMC,GAC7D,IAAIzI,EAAQT,KAKZ,GAJIiI,EAAOkB,qBACPrK,EAAUG,iBAEde,KAAKwI,aAAe,IAAIY,MACpBnB,EAAOoB,SAAU,CACjB,IAAIC,OAA6BC,EACjCtB,EAAOoB,SAASZ,QAAQ,SAAUZ,GAC9B,GAAIA,GAAwB,EAAfA,EAAM/G,OAAY,CAW3B,IAVA+G,EAAQA,EAAM2B,KAAK,SAAUC,EAAGC,GAC5B,OAAOD,EAAEE,SAAWD,EAAEC,YAGpBlB,QAAQ,SAAUmB,GAChBA,EAAUD,SArCN,MAsCJL,EAA6BM,EAAUC,YAE3CD,EAAUZ,WAAWf,EAAQgB,EAAMC,KAEnCI,EACA,MAAMQ,MA1CC,+BA0CgCR,GAE3C,IAAK,IAAI3I,EAAI,EAAGA,EAAIkH,EAAM/G,OAAQH,IAC9BkH,EAAMlH,EAAI,GAAGoJ,cAAclC,EAAMlH,IAErCF,EAAM+H,aAAatI,KAAK2H,MAKpC,IADA,IAAImC,EAAM,IAAIZ,MACLzI,EAAI,EAAGA,EAAIuI,EAAWpI,OAAQH,IAAK,CACxC,IAAIsJ,EAASf,EAAWvI,GAtDJ,IAuDhBsJ,EAAON,UACPK,EAAI9J,KAAK+J,GAGjB,GAAiB,EAAbD,EAAIlJ,OAAY,CAQhB,KANAkJ,EAAMA,EAAIR,KAAK,SAAUC,EAAGC,GACxB,OAAOD,EAAEE,SAAWD,EAAEC,YAGtBlB,QAAQ,SAAUmB,GAAa,OAAOA,EAAUZ,WAAWf,EAAQgB,EAAMC,KAEpEvI,EAAI,EAAGA,EAAIqJ,EAAIlJ,OAAQH,IAC5BqJ,EAAIrJ,EAAI,GAAGoJ,cAAcC,EAAIrJ,IAEjCX,KAAKwI,aAAatI,KAAK8J,KAGxB3B,GAtEP,SAASA,IACLrI,KAAK6J,WAAa,0BAClB7J,KAAK2J,SALmB,ICIhC,IACIO,GAMAA,EAAgBrK,UAAUmJ,WAAa,SAAUf,EAAQiB,GACrD,IAAIzI,EAAQT,KAEZ,GAAIA,KAAKmK,eACL,MAAML,MAAM,iDAEhB,IAAK7B,GAAUnJ,EAAUC,kBAAkBkJ,EAAOmC,oBAC9C,MAAMN,MAAM,sCAEhB9J,KAAKiI,OAASA,EACdjI,KAAKqK,qBAAuB,IAAIzK,EAChCI,KAAKiI,OAAOiB,WAAapK,EAAUC,kBAAkBiB,KAAKiI,OAAOiB,YAAc,GAAKlJ,KAAKiI,OAAOiB,WAEhGlJ,KAAKiI,OAAOqC,gBAAkBxL,EAAUC,kBAAkBiB,KAAKiI,OAAOqC,iBAAmB,GAAKtK,KAAKiI,OAAOqC,gBAC1GtK,KAAKiI,OAAOqC,gBAAgB1K,oBAAsBI,KAAKqK,qBACvDrK,KAAKuK,OAAS,IAAI7D,EAAiBuB,IAElCuC,EAAKxK,KAAKyK,aAAavK,KAAKwK,MAAMF,EAAItB,EAAWyB,OAAO3K,KAAKiI,OAAOiB,aAErElJ,KAAKyK,YAAYhC,QAAQ,SAAUmC,GAC/B,IAAIC,GAAU,EAId,IAHI/L,EAAUC,kBAAkB6L,IAAc9L,EAAUC,kBAAkB6L,EAAU5B,eAChF6B,GAAU,IAETA,EACD,MAAMf,MAhCA,oDAoCd9J,KAAKyK,YAAYvK,KAAKF,KAAK8K,oBAE3B9K,KAAKyK,YAAczK,KAAKyK,YAAYjB,KAAK,SAAUC,EAAGC,GAClD,IAAIqB,EAAOtB,EACPuB,EAAOtB,EACPuB,SAAkBF,EAAKzC,iBACvB4C,SAAkBF,EAAK1C,iBAC3B,MAAiB,YAAb2C,GAAwC,YAAbC,EACpBH,EAAKpB,SAAWqB,EAAKrB,SAEf,YAAbsB,GAAwC,YAAbC,EAEpB,EAEM,YAAbD,GAAwC,YAAbC,GACnB,OADZ,IAMJ,IAAIvB,EAAW,GACf3J,KAAKyK,YAAYhC,QAAQ,SAAU0C,GAC/B,IAAIC,EAAID,EACJC,GAAKA,EAAEzB,WACF7K,EAAUC,kBAAkB4K,EAASyB,EAAEzB,WAIxCA,EAASyB,EAAEzB,UAAYyB,EAAEvB,WAHzBpJ,EAAM8J,OAAOrD,cAAc,oCAAsCyC,EAASyB,EAAEzB,UAAY,KAAOyB,EAAEvB,eAS7G,IAFA,IA+BIW,EA/BAlL,GAAK,EAEA+L,EAAM,EAAGA,EAAMrL,KAAKyK,YAAY3J,OAAS,EAAGuK,IAAO,CACxD,IAAIC,EAAQtL,KAAKyK,YAAYY,GAC7B,IAAIC,GAAyC,mBAA1BA,EAAKhD,iBAAxB,CAIA,GAAIgD,EAAK3B,WAAa3J,KAAK8K,mBAAmBnB,SAAU,CACpDrK,EAAI+L,EAAM,EACV,MAEJrL,KAAKyK,YAAYY,GAAKtB,cAAc/J,KAAKyK,YAAYY,EAAM,KAe/D,GAZArL,KAAK8K,mBAAmB9B,WAAWhJ,KAAKiI,OAAQjI,KAAMA,KAAKyK,aAE3DzK,KAAKyK,YAAYhC,QAAQ,SAAU0C,GACvBA,GAAAA,EACGxB,SAAWlJ,EAAMqK,mBAAmBnB,UAC3CwB,EAAInC,WAAWvI,EAAMwH,OAAQxH,EAAOA,EAAMgK,eAI9CnL,EAAIU,KAAKyK,YAAY3J,QACrBd,KAAKyK,YAAYnK,OAAOhB,GAEkB,IAA1CU,KAAKuL,0BAA0BzK,OAC/B,MAAM,IAAIgJ,MAAM,yBAEpB9J,KAAKmK,gBAAiB,GAG1BD,EAAgBrK,UAAU0L,wBAA0B,WAChD,OAAOvL,KAAK8K,mBAAmBU,iBAEnCtB,EAAgBrK,UAAU4L,MAAQ,SAAUC,GACxC,GAAsB,OAAlBA,EAGA,MAFA1L,KAAK2L,oBAAoBD,GAEnB5B,MAAM,0BAEX4B,EAAcE,OAEfF,EAAcE,KAAO5L,KAAKiI,OAAOmC,oBAEhCsB,EAAcG,OAEfH,EAAcG,MAAO,IAAIC,MAAOC,eAEhCjN,EAAUC,kBAAkB2M,EAAcM,OAE1CN,EAAcM,IAAM,OAGxBhM,KAAKiM,sBAAsBP,GAEI,GAA3B1L,KAAKyK,YAAY3J,QACjBd,KAAK8K,mBAAmBxC,iBAAiBoD,GAG7C,IADA,IAAI/K,EAAI,EACDA,EAAIX,KAAKyK,YAAY3J,QAAQ,CAChC,GAAId,KAAKyK,YAAY9J,GAAG2H,iBAAkB,CACtCtI,KAAKyK,YAAY9J,GAAG2H,iBAAiBoD,GACrC,MAEJ/K,MASRuJ,EAAgBrK,UAAUC,wBAA0B,SAAUC,GAC1DC,KAAKqK,qBAAqBvK,wBAAwBC,IAMtDmK,EAAgBrK,UAAUM,2BAA6B,SAAUJ,GAC7DC,KAAKqK,qBAAqBlK,2BAA2BJ,IAKzDmK,EAAgBrK,UAAUqM,iBAAmB,WACzC,IAAIzL,EAAQT,KACRmM,EAAWnM,KAAKiI,OAAOmE,sBAI3B,OAHiB,EAAXD,IACFA,EAAW,KAERE,YAAY,WACf,IAAIxE,EAAQpH,EAAM8J,OAAO1C,MACzBA,EAAMY,QAAQ,SAAUf,GACpB,IAAIa,EAAO,CACP+D,KAAM,sBAAwB5E,EAAWrB,UACzCuF,KAAMnL,EAAMwH,OAAOmC,mBACnByB,MAAM,IAAIC,MAAOC,cACjBQ,SAAU5G,EAAoBG,SAC9B0G,SAAU,CAAElG,QAASoB,EAAWpB,UAEpC7F,EAAMgL,MAAMlD,KAEhBV,EAAM/G,OAAS,GAChBqL,IAEPjC,EAAgBrK,UAAUoM,sBAAwB,SAAUP,GACxD,GAAI5M,EAAUC,kBAAkB2M,EAAcY,MAE1C,MADAtM,KAAK2L,oBAAoBD,GACnB5B,MAAM,2BAEhB,GAAIhL,EAAUC,kBAAkB2M,EAAcG,MAE1C,MADA7L,KAAK2L,oBAAoBD,GACnB5B,MAAM,gCAEhB,GAAIhL,EAAUC,kBAAkB2M,EAAcE,MAE1C,MADA5L,KAAK2L,oBAAoBD,GACnB5B,MAAM,0CAGpBI,EAAgBrK,UAAU8L,oBAAsB,SAAUD,GACtD1L,KAAKqK,qBAAqBtJ,gBAAgB,CAAC2K,GAAgB7M,IAExDqL,GAhMP,SAASA,IACLlK,KAAKmK,gBAAiB,EACtBnK,KAAKyK,YAAc,IAAIrB,MACvBpJ,KAAK8K,mBAAqB,IAAIzC,ECKtC,IAAIoE,EAAgB,SAASC,EAAGhD,GAI5B,OAHA+C,EAAgB9D,OAAOgE,gBAClB,CAAEC,UAAW,cAAgBxD,OAAS,SAAUsD,EAAGhD,GAAKgD,EAAEE,UAAYlD,IACvE,SAAUgD,EAAGhD,GAAK,IAAK,IAAImD,KAAKnD,EAAOA,EAAEoD,eAAeD,KAAIH,EAAEG,GAAKnD,EAAEmD,MACpDH,EAAGhD,IAGrB,SAASqD,EAAUL,EAAGhD,GAEzB,SAASsD,IAAOhN,KAAKiN,YAAcP,EADnCD,EAAcC,EAAGhD,GAEjBgD,EAAE7M,UAAkB,OAAN6J,EAAaf,OAAOuE,OAAOxD,IAAMsD,EAAGnN,UAAY6J,EAAE7J,UAAW,IAAImN,GAG5E,ICxBIG,EACAA,EAQAC,EACAA,EDcAC,EAAW,WAQlB,OAPAA,EAAW1E,OAAO2E,QAAU,SAAkBlC,GAC1C,IAAK,IAAImC,EAAG5M,EAAI,EAAG6M,EAAIC,UAAU3M,OAAQH,EAAI6M,EAAG7M,IAE5C,IAAK,IAAIkM,KADTU,EAAIE,UAAU9M,GACOgI,OAAO9I,UAAUiN,eAAeY,KAAKH,EAAGV,KAAIzB,EAAEyB,GAAKU,EAAEV,IAE9E,OAAOzB,IAEKV,MAAM1K,KAAMyN,aC/BrBN,EAGRA,IAAgBA,EAAc,KAFjBA,EAA0B,aAAI,GAAK,eAC/CA,EAAYA,EAA4B,eAAI,GAAK,kBAO1CC,EAKRA,IAAcA,EAAY,KAJfA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAkB,OAAI,GAAK,SCjBzC,IAAIO,GAMAA,EAAeC,qBAAuB,kBAKtCD,EAAeE,wBAA0B,QAIzCF,EAAeG,0BAA4B,gBAI3CH,EAAeI,gBAAkB,aAKjCJ,EAAeK,iBAAmB,cAIlCL,EAAeM,6BAA+B,QAC9CN,EAAeO,8BAAgC,kBACxCP,GA7BP,SAASA,KCAb,IAAIQ,GAGAA,EAAcC,4BAA8B,SAAU7D,EAAQ8D,EAAKC,GAC/D,IAAIC,EAAaF,EAAIvN,OACjB0N,EAAQL,EAAcM,YAAYlE,EAAQ8D,GAE9C,GAAIG,EAAM1N,SAAWyN,EAAY,CAG7B,IAFA,IAAI5N,EAAI,EACJ+N,EAAcF,OACUjF,IAArB+E,EAAII,IACP/N,IACA+N,EAAcF,EAAMG,UAAU,EAAGR,EAAcS,gBAAkB,GAAKT,EAAcU,UAAUlO,GAElG6N,EAAQE,EAEZ,OAAOF,GAEXL,EAAcM,YAAc,SAAUlE,EAAQ+B,GAC1C,IAAIwC,EAUJ,OATIxC,IAEAA,EAAO6B,EAAcY,KAAKzC,EAAK5M,aAEtBoB,OAASqN,EAAcS,kBAC5BE,EAAYxC,EAAKqC,UAAU,EAAGR,EAAcS,iBAC5CrE,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmB0D,YAAa,+CAAiDsJ,EAAcS,gBAAkB,eAAgB,CAAEtC,KAAMA,IAAQ,IAGhMwC,GAAaxC,GAExB6B,EAAca,eAAiB,SAAUzE,EAAQ0E,EAAOC,GAEpD,IAAIC,EASJ,YAVkB,IAAdD,IAAwBA,EAAYf,EAAciB,mBAElDH,IACAC,EAAYA,GAAwBf,EAAciB,mBAClDH,EAAQd,EAAcY,KAAKE,IACjBvP,WAAWoB,OAASoO,IAC1BC,EAAaF,EAAMvP,WAAWiP,UAAU,EAAGO,GAC3C3E,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmB8D,mBAAoB,sDAAwDiK,EAAY,eAAgB,CAAED,MAAOA,IAAS,KAG5LE,GAAcF,GAEzBd,EAAckB,YAAc,SAAU9E,EAAQ+E,GAC1C,OAAOnB,EAAcoB,cAAchF,EAAQ+E,EAAKnB,EAAcqB,eAAgBrO,EAAmBmE,aAErG6I,EAAcsB,gBAAkB,SAAUlF,EAAQjE,GAC9C,IAAIoJ,EAOJ,OANIpJ,GACIA,EAAQxF,OAASqN,EAAcwB,qBAC/BD,EAAepJ,EAAQqI,UAAU,EAAGR,EAAcwB,oBAClDpF,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmByD,iBAAkB,iDAAmDuJ,EAAcwB,mBAAqB,eAAgB,CAAErJ,QAASA,IAAW,IAGhNoJ,GAAgBpJ,GAE3B6H,EAAcyB,kBAAoB,SAAUrF,EAAQsF,GAChD,IAAIC,EAOJ,OANID,GACIA,EAAU/O,OAASqN,EAAc4B,uBACjCD,EAAiBD,EAAUlB,UAAU,EAAGR,EAAc4B,sBACtDxF,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBqD,mBAAoB,mDAAqD2J,EAAc4B,qBAAuB,eAAgB,CAAEF,UAAWA,IAAa,IAG1NC,GAAkBD,GAE7B1B,EAAc6B,mBAAqB,SAAUzF,EAAQnE,GACjD,GAAIA,EAAY,CACZ,IAAI6J,EAAY,GAChB,IAAK,IAAIC,KAAQ9J,EAAY,CACzB,IAAI6I,EAAQ7I,EAAW8J,GACvB,GAAqB,iBAAVjB,GAAsC,oBAATzI,KAEpC,IACIyI,EAAQzI,KAAKC,UAAUwI,GAE3B,MAAOkB,GACH5F,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBkD,qCAAsC,+BAAgC,CAAEwL,UAAWM,IAAK,GAGjKlB,EAAQd,EAAca,eAAezE,EAAQ0E,EAAOd,EAAciC,qBAElEH,EADAC,EAAO/B,EAAcC,4BAA4B7D,EAAQ2F,EAAMD,IAC7ChB,EAEtB7I,EAAa6J,EAEjB,OAAO7J,GAEX+H,EAAckC,qBAAuB,SAAU9F,EAAQ+F,GACnD,GAAIA,EAAc,CACd,IAAIC,EAAmB,GACvB,IAAK,IAAIC,KAAWF,EAAc,CAC9B,IAAIrB,EAAQqB,EAAaE,GAEzBD,EADAC,EAAUrC,EAAcC,4BAA4B7D,EAAQiG,EAASD,IACzCtB,EAEhCqB,EAAeC,EAEnB,OAAOD,GAEXnC,EAAcsC,WAAa,SAAUlG,EAAQmG,GACzC,OAAOA,EAAKvC,EAAcoB,cAAchF,EAAQmG,EAAIvC,EAAcwC,cAAexP,EAAmBsE,WAAW/F,WAAagR,GAEhIvC,EAAcoB,cAAgB,SAAUhF,EAAQvL,EAAOkQ,EAAW0B,GAC9D,IAAIC,EAQJ,OAPI7R,IACAA,EAAQmP,EAAcY,KAAK/P,IACjB8B,OAASoO,IACf2B,EAAa7R,EAAM2P,UAAU,EAAGO,GAChC3E,EAAO5D,cAAchH,kBAAgBsH,QAAS2J,EAAQ,+CAAiD1B,EAAY,eAAgB,CAAE4B,KAAM9R,IAAS,IAGrJ6R,GAAc7R,GAEzBmP,EAAcU,UAAY,SAAUkC,GAChC,IAAIxD,EAAI,KAAOwD,EACf,OAAOxD,EAAEyD,OAAOzD,EAAEzM,OAAS,IAK/BqN,EAAcY,KAAO,SAAUkC,GAC3B,MAAmB,iBAARA,EACAA,EACJA,EAAI7R,QAAQ,aAAc,KAKrC+O,EAAcS,gBAAkB,IAIhCT,EAAcwC,cAAgB,IAI9BxC,EAAciC,oBAAsB,KAIpCjC,EAAciB,kBAAoB,KAIlCjB,EAAcqB,eAAiB,KAI/BrB,EAAcwB,mBAAqB,MAInCxB,EAAc4B,qBAAuB,MAC9B5B,GA1JP,SAASA,SCET+C,GAMAA,EAAKC,eAAiB,WAClBD,EAAKE,qBAAsB,EAC3BF,EAAKG,uBAAwB,GAMjCH,EAAKI,uBAAyB,WAC1B,OAAIJ,EAAKK,qBACEL,EAAKM,0BAA0BrE,EAAYsE,cAE/C,MAQXP,EAAKM,0BAA4B,SAAUE,GACvC,IACIC,EACAC,EAFAC,EAAU,KAGd,IACI,GAAsB,oBAAXC,OACP,OAAO,KAEXF,EAAM,IAAI9F,MACV+F,EAAUH,IAAgBvE,EAAYsE,aAAeK,OAAOC,aAAeD,OAAOE,gBAC1EC,QAAQL,EAAKA,GACrBD,EAAOE,EAAQK,QAAQN,IAAQA,EAC/BC,EAAQM,WAAWP,GACfD,IACAE,EAAU,MAGlB,MAAOhC,GACHgC,EAAU,KAEd,OAAOA,GAQXX,EAAKkB,sCAAwC,SAAUC,GACnD,OAAuE,IAAhEnB,EAAKoB,mBAAmBjS,QAAQgS,EAAYE,gBAOvDrB,EAAKK,mBAAqB,WAItB,YAHiChI,IAA7B2H,EAAKE,sBACLF,EAAKE,sBAAwBF,EAAKM,0BAA0BrE,EAAYsE,eAErEP,EAAKE,qBAQhBF,EAAKsB,WAAa,SAAUjI,EAAQ+B,GAChC,IAAIuF,EAAUX,EAAKI,yBACnB,GAAgB,OAAZO,EACA,IACI,OAAOA,EAAQK,QAAQ5F,GAE3B,MAAO6D,GACHe,EAAKE,qBAAsB,EAC3B7G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBE,8BAA+B,yCAA2C6P,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGpM,OAAO,MASXe,EAAKyB,WAAa,SAAUpI,EAAQ+B,EAAMwE,GACtC,IAAIe,EAAUX,EAAKI,yBACnB,GAAgB,OAAZO,EACA,IAEI,OADAA,EAAQI,QAAQ3F,EAAMwE,IACf,EAEX,MAAOX,GACHe,EAAKE,qBAAsB,EAC3B7G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBI,+BAAgC,0CAA4C2P,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGtM,OAAO,GAQXe,EAAK0B,cAAgB,SAAUrI,EAAQ+B,GACnC,IAAIuF,EAAUX,EAAKI,yBACnB,GAAgB,OAAZO,EACA,IAEI,OADAA,EAAQM,WAAW7F,IACZ,EAEX,MAAO6D,GACHe,EAAKE,qBAAsB,EAC3B7G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBM,qCAAsC,iDAAmDyP,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGnN,OAAO,GAMXe,EAAK2B,yBAA2B,WAC5B,OAAI3B,EAAK4B,uBACE5B,EAAKM,0BAA0BrE,EAAY4F,gBAE/C,MAOX7B,EAAK4B,qBAAuB,WAIxB,YAHmCvJ,IAA/B2H,EAAKG,wBACLH,EAAKG,wBAA0BH,EAAKM,0BAA0BrE,EAAY4F,iBAEvE7B,EAAKG,uBAOhBH,EAAK8B,sBAAwB,WACzB,IAAIC,EAAO,GACX,GAAI/B,EAAK4B,uBACL,IAAK,IAAIzE,KAAOyD,OAAOE,eACnBiB,EAAK/S,KAAKmO,GAGlB,OAAO4E,GAQX/B,EAAKgC,kBAAoB,SAAU3I,EAAQ+B,GACvC,IAAIuF,EAAUX,EAAK2B,2BACnB,GAAgB,OAAZhB,EACA,IACI,OAAOA,EAAQK,QAAQ5F,GAE3B,MAAO6D,GACHe,EAAKG,uBAAwB,EAC7B9G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBG,gCAAiC,2CAA6C4P,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGxM,OAAO,MASXe,EAAKiC,kBAAoB,SAAU5I,EAAQ+B,EAAMwE,GAC7C,IAAIe,EAAUX,EAAK2B,2BACnB,GAAgB,OAAZhB,EACA,IAEI,OADAA,EAAQI,QAAQ3F,EAAMwE,IACf,EAEX,MAAOX,GACHe,EAAKG,uBAAwB,EAC7B9G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBK,iCAAkC,4CAA8C0P,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAG1M,OAAO,GAQXe,EAAKkC,qBAAuB,SAAU7I,EAAQ+B,GAC1C,IAAIuF,EAAUX,EAAK2B,2BACnB,GAAgB,OAAZhB,EACA,IAEI,OADAA,EAAQM,WAAW7F,IACZ,EAEX,MAAO6D,GACHe,EAAKG,uBAAwB,EAC7B9G,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBO,uCAAwC,mDAAqDwP,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGvN,OAAO,GAKXe,EAAKjS,eAAiB,WAClBH,EAAUG,kBAKdiS,EAAKmC,cAAgB,SAAU9I,GAC3B,QAAiChB,IAA7BzK,EAAUI,eAA8B,CACxCJ,EAAUI,gBAAiB,EAC3B,IACIJ,EAAUI,oBAA0CqK,IAAzB2H,EAAKoC,SAASC,OAE7C,MAAOpD,GACH5F,EAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBqE,mBAAoB,mCAAqC0L,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,MAInL,OAAOrR,EAAUI,gBAKrBgS,EAAKsC,UAAY,SAAUjJ,EAAQ+B,EAAM2C,EAAOwE,GAC5C,IAAIC,EAAe,GACfC,EAAe,GACfF,IACAC,EAAe,WAAaD,GAE5BvC,EAAKoC,SAASM,UAAgD,WAApC1C,EAAKoC,SAASM,SAASC,WACjDF,EAAe,WAEfzC,EAAKmC,cAAc9I,KACnB2G,EAAKoC,SAASC,OAASjH,EAAO,IAAM2C,EAAQyE,EAAe,UAAYC,IAG/EzC,EAAK4C,sBAAwB,SAAU7C,EAAK8C,GAExC,YADqB,IAAjBA,IAA2BA,GAAe,GAC1C9C,MAAAA,EACO8C,EAE6B,SAAjC9C,EAAIvR,WAAW6S,eAK1BrB,EAAK8C,UAAY,SAAUzJ,EAAQ+B,GAC/B,GAAK4E,EAAKmC,cAAc9I,GAAxB,CAGA,IAAI0E,EAAQ,GACZ,GAAI3C,GAAQA,EAAKxL,OAGb,IAFA,IAAImT,EAAa3H,EAAO,IACpB4H,EAAUhD,EAAKoC,SAASC,OAAOY,MAAM,KAChCxT,EAAI,EAAGA,EAAIuT,EAAQpT,OAAQH,IAAK,CACrC,IAAI4S,EAASW,EAAQvT,GAErB,IADA4S,EAASrC,EAAKnC,KAAKwE,KAC0B,IAA/BA,EAAOlT,QAAQ4T,GAAmB,CAC5ChF,EAAQsE,EAAO5E,UAAUsF,EAAWnT,OAAQoT,EAAQvT,GAAGG,QACvD,OAIZ,OAAOmO,IAMXiC,EAAKkD,aAAe,SAAU7J,EAAQ+B,GAC9B4E,EAAKmC,cAAc9I,KAEnB2G,EAAKoC,SAASC,OAASjH,EAAO,oDAMtC4E,EAAKnC,KAAO,SAAUkC,GAClB,MAAmB,iBAARA,EACAA,EACJA,EAAI7R,QAAQ,aAAc,KAKrC8R,EAAKmD,MAAQ,WAKT,IAJA,IACIC,EAAS,GAET7U,EAAyB,WAAhBD,KAAKC,SACF,EAATA,GAEH6U,GANc,mEAKSC,OAAO9U,EAAS,IAEvCA,EAASD,KAAKgV,MAAM/U,EAAS,IAEjC,OAAO6U,GAKXpD,EAAKuD,QAAU,SAAUC,GACrB,MAA+C,mBAAxC/L,OAAO9I,UAAUH,SAASgO,KAAKgH,IAK1CxD,EAAKyD,QAAU,SAAUD,GACrB,MAA+C,mBAAxC/L,OAAO9I,UAAUH,SAASgO,KAAKgH,IAK1CxD,EAAK0D,OAAS,SAAUF,GACpB,MAA+C,kBAAxC/L,OAAO9I,UAAUH,SAASgO,KAAKgH,IAK1CxD,EAAK2D,kBAAoB,SAAUC,GAC/B,GAAI5D,EAAK0D,OAAOE,GAAO,CACnB,GAAIhJ,KAAKjM,UAAUkM,YACf,OAAO+I,EAAK/I,cAGZ,IAAIgJ,EAAM,SAAUhE,GAChB,IAAIxR,EAAIyV,OAAOjE,GAIf,OAHiB,IAAbxR,EAAEuB,SACFvB,EAAI,IAAMA,GAEPA,GAEX,OAAOuV,EAAKG,iBACN,IAAMF,EAAID,EAAKI,cAAgB,GAC/B,IAAMH,EAAID,EAAKK,cACf,IAAMJ,EAAID,EAAKM,eACf,IAAML,EAAID,EAAKO,iBACf,IAAMN,EAAID,EAAKQ,iBACf,IAAMN,QAAQF,EAAKS,qBAAuB,KAAMC,QAAQ,IAAIC,MAAM,EAAG,GACrE,MAOlBvE,EAAKwE,aAAe,SAAUC,QACL,IAAjBA,IAA2BA,EAAe,MAC9C,IAAIC,EAAQD,EAAeA,EAAapD,cAAgBsD,UAAUC,UAAUvD,cAC5E,OAAkC,GAA1BqD,EAAMvV,QAAQ,QAAiB0V,SAASH,EAAMzB,MAAM,QAAQ,IAAM,MAK9EjD,EAAK8E,aAAe,SAAUC,IACtBC,MAAMD,IAAYA,EAAU,KAC5BA,EAAU,GAGd,IAAIE,EAAK,IADTF,EAAUzW,KAAK4W,MAAMH,IACG,IACpBI,EAAM,GAAK7W,KAAKgV,MAAMyB,EAAU,KAAQ,GACxCK,EAAM,GAAK9W,KAAKgV,MAAMyB,OAAyB,GAC/CM,EAAO,GAAK/W,KAAKgV,MAAMyB,QAA8B,GACrDO,EAAOhX,KAAKgV,MAAMyB,SAKtB,OAJAE,EAAmB,IAAdA,EAAGrV,OAAe,KAAOqV,EAAmB,IAAdA,EAAGrV,OAAe,IAAMqV,EAAKA,EAChEE,EAAMA,EAAIvV,OAAS,EAAI,IAAMuV,EAAMA,EACnCC,EAAMA,EAAIxV,OAAS,EAAI,IAAMwV,EAAMA,GAEpB,EAAPE,EAAWA,EAAO,IAAM,KADhCD,EAAOA,EAAKzV,OAAS,EAAI,IAAMyV,EAAOA,GACO,IAAMD,EAAM,IAAMD,EAAM,IAAMF,GAM/EjF,EAAKuF,mBAAqB,SAAUnQ,EAASgJ,EAAKoH,EAAYC,EAAcC,GACxE,OAAoB,kBAAZtQ,GAA2C,iBAAZA,KAAgCsQ,GAK3E1F,EAAKwB,KAAO,SAAUmE,GAClB,IAAIC,EAAiBnO,OAAO9I,UAAUH,SAASgO,KAAKmJ,GAChDE,EAAoBvQ,KAAKC,UAAUoQ,GAIvC,MAHuB,mBAAnBC,IACAC,EAAoB,aAAeF,EAAOG,MAAQ,gBAAkBH,EAAOvQ,QAAU,aAAeuQ,EAAOvK,KAAO,KAE/GwK,EAAiBC,GAK5B7F,EAAKuB,iBAAmB,SAAUoE,GAE9B,MAAuB,mBADFlO,OAAO9I,UAAUH,SAASgO,KAAKmJ,GAEzCA,EAAOvK,KAEX,IAQX4E,EAAK+F,gBAAkB,SAAUC,EAAWC,GACxC,GAAsB,oBAAXrF,SAA2BA,QAA+B,iBAAdoF,GAA8C,mBAAbC,EACpF,OAAO,EAGX,IAAIC,EAAgB,KAAOF,EAE3B,GAAIpF,OAAOuF,iBACPvF,OAAOuF,iBAAiBH,EAAWC,GAAU,OAE5C,CAAA,IAAIrF,OAAoB,YAIzB,OAAO,EAHPA,OAAoB,YAAEsF,EAAeD,GAKzC,OAAO,GAKXjG,EAAKoG,qBAAuB,WACxB,MAAQ,eAAgBzB,WAAaA,UAAU0B,YAEnDrG,EAAKsG,aAAe,SAAUtO,EAAYW,GAGtC,IAFA,IAAIe,EAAY,KACZ6M,EAAQ,GACJ7M,GAAa6M,EAAQvO,EAAWpI,QAChCoI,EAAWuO,IAAUvO,EAAWuO,GAAO5N,aAAeA,IACtDe,EAAY1B,EAAWuO,IAE3BA,IAEJ,OAAO7M,GAEXsG,EAAKoC,SAA+B,oBAAbA,SAA2BA,SAAW,GAC7DpC,EAAKE,yBAAsB7H,EAC3B2H,EAAKG,2BAAwB9H,EAE7B2H,EAAKoB,mBAAqB,CACtB,gDACA,uDACA,qDAEJpB,EAAKwG,aAAe,gBACbxG,GAzdP,SAASA,KA4db,IAAIyG,GAGAA,EAAUC,SAAW,SAAUtI,GAK3B,OAJKqI,EAAUE,oBACXF,EAAUE,kBAAsBF,EAAUrE,SAASwE,cAAgBH,EAAUrE,SAASwE,cAAc,KAAO,CAAEC,KAAMJ,EAAUK,UAAU1I,KAE3IqI,EAAUE,kBAAkBI,KAAO3I,EAC5BqI,EAAUE,mBAErBF,EAAUO,eAAiB,SAAU5I,GACjC,IAAIgF,EACA7K,EAAIkO,EAAUC,SAAStI,GAI3B,OAHI7F,IACA6K,EAAS7K,EAAEwO,MAER3D,GAEXqD,EAAUQ,YAAc,SAAU7I,GAC9B,IAAIgF,EACA7K,EAAIkO,EAAUC,SAAStI,GAI3B,OAHI7F,IACA6K,EAAS7K,EAAE2O,UAER9D,GAEXqD,EAAUU,eAAiB,SAAUC,EAAQC,GACzC,OAAID,EACOA,EAAOE,cAAgB,IAAMD,EAG7BA,GAIfZ,EAAUK,UAAY,SAAU1I,GAC5B,IAAImJ,EAAQnJ,EAAImJ,MAAM,iCACtB,OAAa,MAATA,GAAgC,EAAfA,EAAM3X,QAAkC,iBAAb2X,EAAM,IAAqC,EAAlBA,EAAM,GAAG3X,OACvE2X,EAAM,GAGN,MAGfd,EAAUrE,SAA+B,oBAAbA,SAA2BA,SAAW,GAC3DqE,GA5CP,SAASA,KA+Cb,IAAIe,GAMAA,EAAoBC,4BAA8B,SAAU1Q,EAAQ2Q,EAAYC,GAC5E,GAAI5Q,GAAUA,EAAO6Q,0BACjB,OAAO,EAEX,IAAKF,EACD,OAAO,EAEX,IAAIG,EAAcpB,EAAUC,SAASgB,GAAYb,KAAKxF,cACtD,KAAMtK,GAAWA,EAAO+Q,uBAA0BD,IAAgBF,GAC9D,OAAO,EAEX,IAEQI,EAFJC,EAAkBjR,GAAUA,EAAOkR,yBACvC,GAAID,IAEAA,EAAgBzQ,QAAQ,SAAUgL,GAC9B,IAAI2F,EAAQ,IAAIC,OAAO5F,EAAOlB,cAAcnT,QAAQ,MAAO,KAAMA,QAAQ,MAAO,OAChF6Z,EAAgBA,GAAiBG,EAAME,KAAKP,MAE3CE,GACD,OAAO,EAGf,IAAIM,EAAkBtR,GAAUA,EAAOuR,iCACvC,IAAKD,GAA6C,GAA1BA,EAAgBzY,OACpC,OAAO,EAEX,IAAK,IAAIH,EAAI,EAAGA,EAAI4Y,EAAgBzY,OAAQH,IAExC,GADY,IAAI0Y,OAAOE,EAAgB5Y,GAAG4R,cAAcnT,QAAQ,MAAO,KAAMA,QAAQ,MAAO,OAClFka,KAAKP,GACX,OAAO,EAGf,OAAO,GAKXL,EAAoBe,sBAAwB,SAAUC,GAClD,GAAIA,EAAgB,CAChB,IAAIC,EAAgBjB,EAAoBkB,2BAA2BF,EAAgB/L,EAAeE,yBAClG,GAAI8L,GAAiBA,IAAkBjB,EAAoBmB,oBACvD,OAAOF,IAOnBjB,EAAoBkB,2BAA6B,SAAUF,EAAgBrL,GACvE,GAAIqL,EAEA,IADA,IAAII,EAAYJ,EAAevF,MAAM,KAC5BxT,EAAI,EAAGA,EAAImZ,EAAUhZ,SAAUH,EAAG,CACvC,IAAIoZ,EAAWD,EAAUnZ,GAAGwT,MAAM,KAClC,GAAuB,GAAnB4F,EAASjZ,QAAeiZ,EAAS,IAAM1L,EACvC,OAAO0L,EAAS,KAKhCrB,EAAoBmB,oBAAsB,UACnCnB,GAjEP,SAASA,KAoEb,IAAIsB,GAGAA,EAAWC,oBAAsB,SAAU1P,EAAQgO,EAAaD,EAAQ4B,GACpE,IAAIC,EAAQ7N,EAAO4N,EAAapJ,EAAOoJ,EACvC,GAAI3B,GAAoC,EAArBA,EAAYzX,OAAY,CACvC,IAAIsZ,EAAYzC,EAAUC,SAASW,GAEnC,GADA4B,EAASC,EAAUrC,MACdzL,EACD,GAA0B,MAAtB8N,EAAUhC,SAAkB,CAC5B,IAAIiC,EAA0C,IAA9BD,EAAUhC,SAAStX,OAAgB,IAAMsZ,EAAUhC,SACxC,MAAvBiC,EAAS9F,OAAO,KAChB8F,EAAW,IAAMA,GAErBvJ,EAAOsJ,EAAUhC,SACjB9L,EAAO6B,EAAca,eAAezE,EAAQ+N,EAASA,EAAS,IAAM+B,EAAWA,QAG/E/N,EAAO6B,EAAca,eAAezE,EAAQgO,QAMpDjM,EADA6N,EAASD,EAGb,MAAO,CACHC,OAAQA,EACR7N,KAAMA,EACNwE,KAAMA,IAGPkJ,GA/BP,SAASA,KAqCb,IAAIM,GAMAA,EAAcC,IAAyB,oBAAXzI,OAA0B,WAAc,OAAO,IAAIhG,MAAO0O,WACjF1I,OAAO2I,aAAe3I,OAAO2I,YAAYC,KAAO5I,OAAO2I,YAAYE,OAChE,WACI,OAAO7I,OAAO2I,YAAYC,MAAQ5I,OAAO2I,YAAYE,OAAOC,iBAG5D,WACI,OAAO,IAAI9O,MAAO0O,WAKlCF,EAAcO,YAAc,SAAUC,EAAOC,GACzC,IAAIzG,EAAS,KAIb,OAHc,IAAVwG,GAAuB,IAARC,GAAcjc,EAAUC,kBAAkB+b,IAAWhc,EAAUC,kBAAkBgc,KAChGzG,EAASyG,EAAMD,GAEZxG,GAEJgG,GAxBP,SAASA,KC7nBN,ICM6BU,EDNzBC,EAAuB,0DAEvBC,EAAgB,gBAChBC,EAAa,cCGpBC,GACAC,EAAkBD,EADcJ,ECDhC,cDMOI,GAHP,SAASA,IACL,OAAOJ,EAAOtN,KAAK1N,OAASA,KENpC,ICEwCgb,EAApCM,GACAD,EAAkBC,EADkBN,EDDpC,WACIhb,KAAKgM,IAAM,EACXhM,KAAKub,WAAa,IAClBvb,KAAKwb,KAAO,KCoBTF,GAjBP,SAASA,EAAS/Q,EAAQuG,EAAMxE,GAC5B,IAAI7L,EAAQua,EAAOtN,KAAK1N,OAASA,KAcjC,OAbAS,EAAM6L,KAAO6B,EAAca,eAAezE,EAAQ+B,IAAS4E,EAAKwG,aAChEjX,EAAMqQ,KAAOA,EACbrQ,EAAMoL,KAAOqF,EAAK2D,kBAAkB,IAAI/I,MACxCrL,EAAMgb,eAAiB,CACnB5P,KAAMuB,EAAUsO,SAChB9P,KAAMwB,EAAUsO,SAChBpP,KAAMc,EAAUsO,SAChBH,WAAY,WACR,OAA4B,KAApB9a,EAAM8a,WAAqBnO,EAAUuO,OAASvO,EAAUsO,UAEpEF,KAAMpO,EAAUsO,SAChB5K,KAAM1D,EAAUsO,UAEbjb,ECpBX,SADAmb,KAAJ,ICEyCZ,EAArCa,GACAR,EAAkBQ,EADmBb,EAUvCY,GADSC,GAPP,SAASA,IACL,IAAIpb,EAAQua,EAAOtN,KAAK1N,OAASA,KAIjC,OAHAS,EAAMuL,IAAM,EACZvL,EAAM2F,WAAa,GACnB3F,EAAM6P,aAAe,GACd7P,MCRsBua,EAAjCc,GACAT,EAAkBS,EADed,EAqBnCa,GAHEC,EAAMC,aAAe,0CACrBD,EAAMhW,SAAW,YACVgW,GAfP,SAASA,EAAMvR,EAAQ+B,EAAMlG,EAAYkK,GACrC,IAAI7P,EAAQua,EAAOtN,KAAK1N,OAASA,KAUjC,OATAS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfpP,KAAMc,EAAUsO,SAChBtV,WAAYgH,EAAU4O,QACtB1L,aAAclD,EAAU4O,SAE5Bvb,EAAM6L,KAAO6B,EAAca,eAAezE,EAAQ+B,IAAS4E,EAAKwG,aAChEjX,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GAC5D3F,EAAM6P,aAAenC,EAAckC,qBAAqB9F,EAAQ+F,GACzD7P,EChBX,SADAwb,MAAJ,ICC6CjB,GAAzCkB,IACAb,EAAkBa,GADuBlB,GAW3CY,GADSM,IARP,SAASA,KACL,IAAIzb,EAAQua,GAAOtN,KAAK1N,OAASA,KAKjC,OAJAS,EAAMuL,IAAM,EACZvL,EAAM0b,WAAa,GACnB1b,EAAM2F,WAAa,GACnB3F,EAAM6P,aAAe,GACd7P,ECTX,SADA2b,KAEIpc,KAAKqc,cAAe,EACpBrc,KAAKsc,YAAc,GAH3B,ICKyCtB,GAArCuB,IACAlB,EAAkBkB,GADmBvB,GAiFvCkB,IAxCEK,GAAUC,oBAAsB,SAAUjS,EAAQsF,GAC9C,IAAIsM,EAAatM,EAAUsM,YACpBtM,EAAUsM,WAAW7N,IAAI,SAAUmO,GAAM,OAAOC,GAAkBF,oBAAoBjS,EAAQkS,KAErG,OADoB,IAAIF,GAAUhS,EAAQoS,EAAiB,GAAI9M,EAAW,CAAEsM,WAAYA,MAG5FI,GAAU1c,UAAU+c,YAAc,WAC9B,IAAIpS,EAAKxK,KAAMmc,EAAa3R,EAAG2R,WAAY/V,EAAaoE,EAAGpE,WAAYkK,EAAe9F,EAAG8F,aAAcuM,EAAgBrS,EAAGqS,cAAe7Q,EAAMxB,EAAGwB,IAAK8Q,EAAetS,EAAGsS,aAAcpM,EAAKlG,EAAGkG,GAAIqM,EAAWvS,EAAGuS,SAIjN,MAAO,CACH/Q,IAAKA,EACLmQ,WAL4BA,aAAsB/S,OAC/C+S,EAAW7N,IAAI,SAAUuB,GAAa,OAAOA,EAAU+M,sBACvDrT,EAIHsT,cAAeA,EACfzW,WAAYA,EACZkK,aAAcA,EACdwM,aAAcA,EACdpM,GAAIA,EACJqM,SAAUA,IAMlBR,GAAUS,sBAAwB,SAAU1W,EAAS2W,EAAUC,EAAUC,EAAUC,EAASC,GACxF,MAAO,CACHlB,WAAY,CACR,CACIE,cAAc,EACd/V,QAASA,EACT0Q,MAAOoG,EACPH,SAAUA,MAK1BV,GAAUR,aAAe,8CACzBQ,GAAUzW,SAAW,gBACdyW,IA3EP,SAASA,GAAUhS,EAAQsF,EAAWzJ,EAAYkK,EAAcuM,EAAenM,GAC3E,IAAIjQ,EAAQua,GAAOtN,KAAK1N,OAASA,KAiCjC,OAhCAS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfS,WAAY/O,EAAUsO,SACtBmB,cAAezP,EAAU4O,QACzB5V,WAAYgH,EAAU4O,QACtB1L,aAAclD,EAAU4O,SAExBnM,aAAqB/F,OACrBrJ,EAAM0b,WAAa,CAAC,IAAIO,GAAkBnS,EAAQsF,IAClDpP,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GAC5D3F,EAAM6P,aAAenC,EAAckC,qBAAqB9F,EAAQ+F,GAC5DuM,IACApc,EAAMoc,cAAgBA,GACtBnM,IACAjQ,EAAMiQ,GAAKA,KAGfjQ,EAAM0b,WAAatM,EAAUsM,WAC7B1b,EAAM2F,WAAayJ,EAAUzJ,WAC7B3F,EAAM6P,aAAeT,EAAUS,aAC3BT,EAAUgN,gBACVpc,EAAMoc,cAAgBhN,EAAUgN,eAChChN,EAAUa,KACVjQ,EAAMiQ,GAAKb,EAAUa,IACrBb,EAAUiN,eACVrc,EAAMqc,aAAejN,EAAUiN,cAE9Bhe,EAAUC,kBAAkB8Q,EAAU7D,OACvCvL,EAAMuL,IAAM6D,EAAU7D,KACrBlN,EAAUC,kBAAkB8Q,EAAUkN,YACvCtc,EAAMsc,SAAWlN,EAAUkN,WAE5Btc,EA4Cf,IAAiDua,GAA7C0B,IACArB,EAAkBqB,GAD2B1B,GAiG/CoB,IAnEEM,GAAkB7c,UAAU+c,YAAc,WACtC,IAAIN,EAActc,KAAKsc,uBAAuBlT,OACvCpJ,KAAKsc,YAAYhO,IAAI,SAAUgP,GAAS,OAAOA,EAAMV,gBAU5D,MATgC,CAC5BlM,GAAI1Q,KAAK0Q,GACT6M,QAASvd,KAAKud,QACdN,SAAUjd,KAAKid,SACf3W,QAAStG,KAAKsG,QACd+V,aAAcrc,KAAKqc,aACnBrF,MAAOhX,KAAKgX,MACZsF,YAAaA,QAAe/S,IAIpCmT,GAAkBF,oBAAsB,SAAUjS,EAAQsF,GACtD,IAAIyM,EAAezM,EAAUyM,uBAAuBlT,OAC7CyG,EAAUyM,YAAYhO,IAAI,SAAUgP,GAAS,OAAOE,GAAYhB,oBAAoBc,MACpFzN,EAAUyM,YAEjB,OADuB,IAAII,GAAkBnS,EAAQoS,EAAiB,GAAI9M,EAAW,CAAEyM,YAAaA,MAGxGI,GAAkBe,WAAa,SAAUzG,GACrC,IAAIsF,OAAc/S,EAClB,GAAqB,iBAAVyN,EAAoB,CAC3B,IAAI0G,EAAS1G,EAAM7C,MAAM,MACzBmI,EAAc,GAGd,IAFA,IAAIqB,EAAQ,EACRC,EAAmB,EACdjd,EAAI,EAAGA,GAAK+c,EAAO5c,OAAQH,IAAK,CACrC,IAAI2c,EAAQI,EAAO/c,GACnB,GAAI6c,GAAYpE,MAAME,KAAKgE,GAAQ,CAC/B,IAAIO,EAAc,IAAIL,GAAYE,EAAO/c,GAAIgd,KAC7CC,GAAoBC,EAAYC,YAChCxB,EAAYpc,KAAK2d,IAMzB,GADoC,MAChCD,EAMA,IALA,IAAIG,EAAO,EACPC,EAAQ1B,EAAYxb,OAAS,EAC7Bmd,EAAO,EACPC,EAAeH,EACfI,EAAgBH,EACbD,EAAOC,GAAO,CAKjB,GAZ4B,OAW5BC,GAFY3B,EAAYyB,GAAMD,YAClBxB,EAAY0B,GAAOF,aAEW,CAEtC,IAAIM,EAAUD,EAAgBD,EAAe,EAC7C5B,EAAYhc,OAAO4d,EAAcE,GACjC,MAGJF,EAAeH,EACfI,EAAgBH,EAChBD,IACAC,KAIZ,OAAO1B,GAEJI,IA9FP,SAASA,GAAkBnS,EAAQsF,GAC/B,IAAIpP,EAAQua,GAAOtN,KAAK1N,OAASA,KAUjC,GATAS,EAAMgb,eAAiB,CACnB/K,GAAItD,EAAU4O,QACduB,QAASnQ,EAAU4O,QACnBiB,SAAU7P,EAAUsO,SACpBpV,QAAS8G,EAAUsO,SACnBW,aAAcjP,EAAU4O,QACxBhF,MAAO5J,EAAU4O,QACjBM,YAAalP,EAAUhE,OAEvByG,aAAqB/F,MAAO,CAC5BrJ,EAAMwc,SAAW9O,EAAca,eAAezE,EAAQsF,EAAUvD,OAAS4E,EAAKwG,aAC9EjX,EAAM6F,QAAU6H,EAAcsB,gBAAgBlF,EAAQsF,EAAUvJ,UAAY4K,EAAKwG,aACjF,IAAIV,EAAQnH,EAAUmH,MACtBvW,EAAM6b,YAAcI,GAAkBe,WAAWzG,GACjDvW,EAAMuW,MAAQ7I,EAAcyB,kBAAkBrF,EAAQyM,GACtDvW,EAAM4b,aAAenL,EAAKuD,QAAQhU,EAAM6b,cAA2C,EAA3B7b,EAAM6b,YAAYxb,YAG1EL,EAAMwc,SAAWpN,EAAUoN,SAC3Bxc,EAAM6F,QAAUuJ,EAAUvJ,QAC1B7F,EAAMuW,MAAQnH,EAAUmH,MACxBvW,EAAM6b,YAAczM,EAAUyM,YAC9B7b,EAAM4b,aAAexM,EAAUwM,aAEnC,OAAO5b,EAuEf,IAA2Cua,GAAvCwC,IACAnC,EAAkBmC,GADqBxC,GA4DzCiB,IAjBEuB,GAAYhB,oBAAsB,SAAUc,GACxC,OAAO,IAAIE,GAAYF,EAAO,OAElCE,GAAY3d,UAAU+c,YAAc,WAChC,MAAO,CACHe,MAAO3d,KAAK2d,MACZrF,OAAQtY,KAAKsY,OACb4E,SAAUld,KAAKkd,SACfC,SAAUnd,KAAKmd,SACfE,KAAMrd,KAAKqd,OAKnBG,GAAYpE,MAAQ,mEACpBoE,GAAYa,SAAW,GAChBb,IAzDP,SAASA,GAAYc,EAAaX,GAC9B,IAAIld,EAAQua,GAAOtN,KAAK1N,OAASA,KASjC,GARAS,EAAMqd,YAAc,EACpBrd,EAAMgb,eAAiB,CACnBkC,MAAOvQ,EAAUsO,SACjBpD,OAAQlL,EAAUsO,SAClBwB,SAAU9P,EAAU4O,QACpBmB,SAAU/P,EAAU4O,QACpBqB,KAAMjQ,EAAU4O,SAEO,iBAAhBsC,EAA0B,CACjC,IAAIhB,EAAQgB,EACZ7d,EAAMkd,MAAQA,EACdld,EAAM6X,OAAS,cACf7X,EAAMyc,SAAWhM,EAAKnC,KAAKuO,GAC3B7c,EAAM0c,SAAW,GACjB1c,EAAM4c,KAAO,EACb,IAAIkB,EAAUjB,EAAM7E,MAAM+E,GAAYpE,OAClCmF,GAA6B,GAAlBA,EAAQzd,SACnBL,EAAM6X,OAASpH,EAAKnC,KAAKwP,EAAQ,KAAO9d,EAAM6X,OAC9C7X,EAAM0c,SAAWjM,EAAKnC,KAAKwP,EAAQ,IACnC9d,EAAM4c,KAAOtH,SAASwI,EAAQ,KAAO,QAIzC9d,EAAMkd,MAAQW,EAAYX,MAC1Bld,EAAM6X,OAASgG,EAAYhG,OAC3B7X,EAAMyc,SAAWoB,EAAYpB,SAC7Bzc,EAAM0c,SAAWmB,EAAYnB,SAC7B1c,EAAM4c,KAAOiB,EAAYjB,KACzB5c,EAAMqd,YAAc,EASxB,OAPArd,EAAMqd,aAAerd,EAAM6X,OAAOxX,OAClCL,EAAMqd,aAAerd,EAAM0c,SAASrc,OACpCL,EAAMqd,aAAerd,EAAMyc,SAASpc,OAEpCL,EAAMqd,aAAeN,GAAYa,SACjC5d,EAAMqd,aAAerd,EAAMkd,MAAMje,WAAWoB,OAC5CL,EAAMqd,aAAerd,EAAM4c,KAAK3d,WAAWoB,OACpCL,ECjOf,IAA0Cua,GCF/BwD,GACAA,GDCPC,IACApD,EAAkBoD,GADoBzD,GAUxCY,GADS6C,IAPP,SAASA,KACL,IAAIhe,EAAQua,GAAOtN,KAAK1N,OAASA,KAIjC,OAHAS,EAAMuL,IAAM,EACZvL,EAAMie,QAAU,GAChBje,EAAM2F,WAAa,GACZ3F,GCRJ+d,GAGRA,KAAkBA,GAAgB,KAFnBA,GAA2B,YAAI,GAAK,cAClDA,GAAcA,GAA2B,YAAI,GAAK,cCFtD,ICFyCxD,GAArC2D,IACAtD,EAAkBsD,GADmB3D,GDGrC,WACIhb,KAAK4e,KAAOJ,GAAcK,cCcvBF,IAhBP,SAASA,KACL,IAAIle,EAAmB,OAAXua,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KAahE,OATAS,EAAMgb,eAAiB,CACnBnP,KAAMc,EAAUsO,SAChBkD,KAAMxR,EAAU4O,QAChB/M,MAAO7B,EAAUsO,SACjBoD,MAAO1R,EAAU4O,QACjB1F,IAAKlJ,EAAU4O,QACf+C,IAAK3R,EAAU4O,QACfgD,OAAQ5R,EAAU4O,SAEfvb,MCbuBua,GAAlCiE,IACA5D,EAAkB4D,GADgBjE,GAyBpCyD,IAHEQ,GAAOlD,aAAe,2CACtBkD,GAAOnZ,SAAW,aACXmZ,IAnBP,SAASA,GAAO1U,EAAQ+B,EAAM2C,EAAO6P,EAAOxI,EAAKyI,EAAK3Y,GAClD,IAAI3F,EAAQua,GAAOtN,KAAK1N,OAASA,KACjCS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfgD,QAAStR,EAAUsO,SACnBtV,WAAYgH,EAAU4O,SAE1B,IAAIkD,EAAY,IAAIP,GAQpB,OAPAO,EAAUJ,MAAgB,EAARA,EAAYA,OAAQvV,EACtC2V,EAAUH,IAAM7I,MAAM6I,IAAgB,OAARA,OAAexV,EAAYwV,EACzDG,EAAU5I,IAAMJ,MAAMI,IAAgB,OAARA,OAAe/M,EAAY+M,EACzD4I,EAAU5S,KAAO6B,EAAca,eAAezE,EAAQ+B,IAAS4E,EAAKwG,aACpEwH,EAAUjQ,MAAQA,EAClBxO,EAAMie,QAAU,CAACQ,GACjBze,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GACrD3F,ECpBf,IAA4Cua,GAAxCmE,IACA9D,EAAkB8D,GADsBnE,GAU1Ca,GADSsD,IAPP,SAASA,KACL,IAAI1e,EAAQua,GAAOtN,KAAK1N,OAASA,KAIjC,OAHAS,EAAMuL,IAAM,EACZvL,EAAM2F,WAAa,GACnB3F,EAAM6P,aAAe,GACd7P,MCRyBua,GAApCoE,IACA/D,EAAkB+D,GADkBpE,GA6BtCmE,IAHEC,GAASrD,aAAe,6CACxBqD,GAAStZ,SAAW,eACbsZ,IAvBP,SAASA,GAAS7U,EAAQ+B,EAAMgD,EAAK+P,EAAYjZ,EAAYkK,EAAcI,GACvE,IAAIjQ,EAAQua,GAAOtN,KAAK1N,OAASA,KAkBjC,OAjBAS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfpP,KAAMc,EAAU4O,QAChB1M,IAAKlC,EAAU4O,QACfsD,SAAUlS,EAAU4O,QACpB5V,WAAYgH,EAAU4O,QACtB1L,aAAclD,EAAU4O,QACxBtL,GAAItD,EAAU4O,SAElBvb,EAAMiQ,GAAKvC,EAAcsC,WAAWlG,EAAQmG,GAC5CjQ,EAAM6O,IAAMnB,EAAckB,YAAY9E,EAAQ+E,GAC9C7O,EAAM6L,KAAO6B,EAAca,eAAezE,EAAQ+B,IAAS4E,EAAKwG,aAC3DxB,MAAMmJ,KACP5e,EAAM6e,SAAWpO,EAAK8E,aAAaqJ,IAEvC5e,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GAC5D3F,EAAM6P,aAAenC,EAAckC,qBAAqB9F,EAAQ+F,GACzD7P,ECvBf,IAAoDua,GAAhDuE,IACAlE,EAAkBkE,GAD8BvE,GAWlDY,GADS2D,IARP,SAASA,KACL,IAAI9e,EAAQua,GAAOtN,KAAK1N,OAASA,KAKjC,OAJAS,EAAMuL,IAAM,EACZvL,EAAM+e,SAAU,EAChB/e,EAAM2F,WAAa,GACnB3F,EAAM6P,aAAe,GACd7P,MCRqCua,GAAhDuE,IACAlE,EAAkBkE,GAD8BvE,GA+ClDyE,IAHEF,GAAqBxD,aAAe,qDACpCwD,GAAqBzZ,SAAW,uBACzByZ,IAzCP,SAASA,GAAqBhV,EAAQmG,EAAI6H,EAAa2B,EAAajL,EAAOuQ,EAASE,EAAYpH,EAAQqH,EAAYvZ,EAAYkK,QACzG,IAAfqP,IAAyBA,EAAa,QAC1C,IAAIlf,EAAQua,GAAOtN,KAAK1N,OAASA,KACjCS,EAAMgb,eAAiB,CACnB/K,GAAItD,EAAUsO,SACd1P,IAAKoB,EAAUsO,SACfpP,KAAMc,EAAU4O,QAChB0D,WAAYtS,EAAU4O,QACtBsD,SAAUlS,EAAU4O,QACpBwD,QAASpS,EAAU4O,QACnBlL,KAAM1D,EAAU4O,QAChB7B,OAAQ/M,EAAU4O,QAClB4D,KAAMxS,EAAU4O,QAChB5V,WAAYgH,EAAU4O,QACtB1L,aAAclD,EAAU4O,QACxB4C,KAAMxR,EAAU4O,QAChB/M,MAAO7B,EAAU4O,QACjB8C,MAAO1R,EAAU4O,QACjB1F,IAAKlJ,EAAU4O,QACf+C,IAAK3R,EAAU4O,QACfgD,OAAQ5R,EAAU4O,QAClB6D,eAAgBzS,EAAU4O,QAC1B8D,iBAAkB1S,EAAU4O,QAC5B9B,YAAa9M,EAAU4O,QACvB+D,mBAAoB3S,EAAU4O,SAElCvb,EAAMiQ,GAAKA,EACXjQ,EAAM6e,SAAWpO,EAAK8E,aAAa/G,GACnCxO,EAAM+e,QAAUA,EAChB/e,EAAMif,WAAaA,EAAa,GAChCjf,EAAMmf,KAAOzR,EAAca,eAAezE,EAAQoV,GAClD,IAAIK,EAAmBhG,EAAWC,oBAAoB1P,EAAQgO,EAAaD,EAAQ4B,GAMnF,OALAzZ,EAAMqQ,KAAO3C,EAAckB,YAAY9E,EAAQ2P,IAAgB8F,EAAiBlP,KAChFrQ,EAAM0Z,OAAShM,EAAca,eAAezE,EAAQyV,EAAiB7F,QACrE1Z,EAAM6L,KAAO6B,EAAca,eAAezE,EAAQyV,EAAiB1T,MACnE7L,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GAC5D3F,EAAM6P,aAAenC,EAAckC,qBAAqB9F,EAAQ+F,GACzD7P,EC1Cf,IAA2Cua,GAAvCiF,IACA5E,EAAkB4E,GADqBjF,GASzCY,GADSqE,IANP,SAASA,KACL,IAAIxf,EAAQua,GAAOtN,KAAK1N,OAASA,KAGjC,OAFAS,EAAMuL,IAAM,EACZvL,EAAM2F,WAAa,GACZ3F,MCPsBua,GAAjCkF,IACA7E,EAAkB6E,GADelF,GAwBnCiF,IAHEC,GAAMnE,aAAe,4CACrBmE,GAAMpa,SAAW,cACVoa,IAlBP,SAASA,GAAM3V,EAAQjE,EAASuW,EAAezW,GAC3C,IAAI3F,EAAQua,GAAOtN,KAAK1N,OAASA,KAajC,OAZAS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfpV,QAAS8G,EAAUsO,SACnBmB,cAAezP,EAAU4O,QACzB5V,WAAYgH,EAAU4O,SAE1B1V,EAAUA,GAAW4K,EAAKwG,aAC1BjX,EAAM6F,QAAU6H,EAAcsB,gBAAgBlF,EAAQjE,GACtD7F,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GACxDyW,IACApc,EAAMoc,cAAgBA,GAEnBpc,EClBf,IAAgDua,GAA5CmF,IACA9E,EAAkB8E,GAD0BnF,GAU9CmE,IADSgB,IAPP,SAASA,KACL,IAAI1f,EAAQua,GAAOtN,KAAK1N,OAASA,KAIjC,OAHAS,EAAMuL,IAAM,EACZvL,EAAM2F,WAAa,GACnB3F,EAAM6P,aAAe,GACd7P,MCRoCua,GAA/CoF,IACA/E,EAAkB+E,GAD6BpF,GAqCjDmF,IAHEC,GAAoBrE,aAAe,wDACnCqE,GAAoBta,SAAW,0BACxBsa,IA/BP,SAASA,GAAoB7V,EAAQ+B,EAAMgD,EAAK+Q,EAAQja,EAAYkK,EAAcgQ,GAC9E,IAAI7f,EAAQua,GAAOtN,KAAK1N,OAASA,KA0BjC,OAzBAS,EAAMgb,eAAiB,CACnBzP,IAAKoB,EAAUsO,SACfpP,KAAMc,EAAU4O,QAChB1M,IAAKlC,EAAU4O,QACfsD,SAAUlS,EAAU4O,QACpBuE,UAAWnT,EAAU4O,QACrBwE,eAAgBpT,EAAU4O,QAC1ByE,YAAarT,EAAU4O,QACvB0E,iBAAkBtT,EAAU4O,QAC5B2E,cAAevT,EAAU4O,QACzB5V,WAAYgH,EAAU4O,QACtB1L,aAAclD,EAAU4O,SAE5Bvb,EAAM6O,IAAMnB,EAAckB,YAAY9E,EAAQ+E,GAC9C7O,EAAM6L,KAAO6B,EAAca,eAAezE,EAAQ+B,IAAS4E,EAAKwG,aAChEjX,EAAM2F,WAAa+H,EAAc6B,mBAAmBzF,EAAQnE,GAC5D3F,EAAM6P,aAAenC,EAAckC,qBAAqB9F,EAAQ+F,GAC5DgQ,IACA7f,EAAMkgB,cAAgBL,EAAYK,cAClClgB,EAAM6e,SAAWgB,EAAYhB,SAC7B7e,EAAM+f,eAAiBF,EAAYE,eACnC/f,EAAM8f,UAAYD,EAAYC,UAC9B9f,EAAMigB,iBAAmBJ,EAAYI,iBACrCjgB,EAAMggB,YAAcH,EAAYG,aAE7BhgB,EClCf,IAAoCua,GCEzB4F,GDFPxF,IACAC,EAAkBD,GADcJ,GAmBlC6F,GADSzF,IAbP,SAASA,GAAK7O,EAAUuE,GACpB,IAAIrQ,EAAQua,GAAOtN,KAAK1N,OAASA,KAUjC,OANAS,EAAMgb,eAAiB,CACnBlP,SAAUa,EAAUsO,SACpBlP,SAAUY,EAAUsO,UAExBjb,EAAM8L,SAAWA,EACjB9L,EAAM+L,SAAWsE,EACVrQ,GCdJmgB,GAMRA,kBAAkBA,gBAAgB,KALnBA,GAAuB,QAAI,GAAK,UAC9CA,GAAcA,GAA2B,YAAI,GAAK,cAClDA,GAAcA,GAAuB,QAAI,GAAK,UAC9CA,GAAcA,GAAqB,MAAI,GAAK,QAC5CA,GAAcA,GAAwB,SAAI,GAAK,WCTnD,IAAIE,IAGAA,GAAqBC,UAAY,SAAU9Y,EAAQuG,EAAO3E,EAAYkK,GAElE,IAAIiN,EAOJ,YARqB,IAAjBjN,IAA2BA,GAAe,GAG1CiN,EADAnX,GAAc5B,EAAOqC,iBAAmBrC,EAAOqC,gBAAgBT,KAAgB/K,EAAUC,9+/DAAkBkJ,EAAOqC,gBAAgBT,GAAY2E,IAChIvG,EAAOqC,gBAAgBT,GAAY2E,GAGnCvG,EAAOuG,GAEjB1P,EAAUC,kBAAkBiiB,GAA6BjN,EAAdiN,GAEhDF,IAbP,SAASA,MCDb,IAAIG,GACA,WACIjhB,KAAKkhB,mBAAqB,qBAC1BlhB,KAAKmhB,iBAAmB,uBACxBnhB,KAAKohB,kBAAoB,wBACzBphB,KAAKqhB,cAAgB,+BACrBrhB,KAAKshB,iBAAmB,uBACxBthB,KAAKuhB,SAAW,eAChBvhB,KAAKwhB,SAAW,eAChBxhB,KAAKyhB,eAAiB,qBACtBzhB,KAAK0hB,aAAe,mBACpB1hB,KAAK2hB,YAAc,kBACnB3hB,KAAK4hB,mBAAqB,yBAC1B5hB,KAAK6hB,cAAgB,oBACrB7hB,KAAK8hB,kBAAoB,wBACzB9hB,KAAK+hB,cAAgB,oBACrB/hB,KAAKgiB,SAAW,eAChBhiB,KAAKiiB,gBAAkB,sBACvBjiB,KAAKkiB,mBAAqB,yBAC1BliB,KAAKmiB,eAAiB,qBACtBniB,KAAKoiB,uBAAyB,6BAC9BpiB,KAAKqiB,WAAa,iBAClBriB,KAAKsiB,kBAAoB,wBACzBtiB,KAAKuiB,aAAe,mBACpBviB,KAAKwiB,cAAgB,oBACrBxiB,KAAKyiB,qBAAuB,2BAC5BziB,KAAK0iB,WAAa,iBAClB1iB,KAAK2iB,gBAAkB,sBACvB3iB,KAAK4iB,iBAAmB,uBACxB5iB,KAAK6iB,aAAe,mBACpB7iB,KAAK8iB,YAAc,kBACnB9iB,KAAK+iB,cAAgB,oBACrB/iB,KAAKgjB,kBAAoB,wBACzBhjB,KAAKijB,gBAAkB,sBACvBjjB,KAAKkjB,yBAA2B,+BAChCljB,KAAKmjB,2BAA6B,iCAClCnjB,KAAKojB,UAAY,gBACjBpjB,KAAKqjB,eAAiB,qBACtBrjB,KAAKsjB,aAAe,mBACpBtjB,KAAKujB,2BAA6B,iCAClCvjB,KAAKwjB,cAAgB,oBACrBxjB,KAAK8V,UAAY,oBACjB9V,KAAKyjB,OAAS,aACdzjB,KAAK0jB,gBAAkB,sBACvB1jB,KAAK2jB,eAAiB,qBACtB3jB,KAAK4jB,iCAAmC,kCACxC5jB,KAAK6jB,qCAAuC,kCAC5C7jB,KAAK8jB,UAAY,gBACjB9jB,KAAK+jB,UAAY,gBACjB/jB,KAAKgkB,aAAe,mBACpBhkB,KAAKikB,kBAAoB,wBACzBjkB,KAAKkkB,iBAAmB,uBACxBlkB,KAAKmkB,cAAgB,oBACrBnkB,KAAKokB,oBAAsB,0BAC3BpkB,KAAKqkB,iBAAmB,uBACxBrkB,KAAKskB,mBAAqB,yBAC1BtkB,KAAKukB,qBAAuB,4BCtDhCC,IAYAA,GAAqBtX,OAAS,SAAU3E,EAAMgE,EAAUkY,EAAcla,EAAQma,EAAkBC,GAE5F,GADAF,EAAetW,EAAca,eAAezE,EAAQka,IAAiBvT,EAAKwG,aACtE5Y,EAAUC,kBAAkBwJ,IAC5BzJ,EAAUC,kBAAkBwN,IAC5BzN,EAAUC,kBAAkB0lB,GAC5B,MAAM3a,MAAM,6CAEhB,IAAI4B,EAAgB,CAChBY,KAAMmY,EACN5Y,MAAM,IAAIC,MAAOC,cACjBH,KAAM,GACNT,IAAKwZ,GAAsC,GAC3CnJ,KAAM,GACN1K,KAAM,GACNvE,SAAUA,EACVC,SAAUjE,GAGd,IAAKzJ,EAAUC,kBAAkB2lB,GAC7B,IAAK,IAAIxU,KAAQwU,EACTA,EAAiB5X,eAAeoD,KAChCxE,EAAcoF,KAAKZ,GAAQwU,EAAiBxU,IAIxD,OAAOxE,GAEJ8Y,IAtCP,SAASA,MCLb,IAAII,IAGAA,GAAWC,QAAU,OACrBD,GAAWE,UAAY,SACvBF,GAAWG,SAAW,QACtBH,GAAWI,OAAS,MACpBJ,GAAWK,OAAS,MACpBL,GAAWM,MAAQ,KACnBN,GAAWO,WAAa,MACxBP,GAAWQ,OAAS,MACbR,IAVP,SAASA,MAaN,IAAIS,GAAa,IAAIpE,GCSjBqE,GAA6B,8BAC7BC,GAA0B,2BClBjCC,IAsBAA,GAAgB3lB,UAAU4lB,cAAgB,SAAUC,EAAUhB,GAC1D,IAAIjkB,EAAQT,KACRsM,EAAOoZ,EAASpZ,MAChBxN,EAAUC,kBAAkBuN,IAAyB,iBAATA,IAC5CoZ,EAASpZ,KAAOwF,OAAOwB,UAAYxB,OAAOwB,SAASqS,OAAS,IAEhE,IAAIC,EAAMF,EAASE,IAOnB,IANI9mB,EAAUC,kBAAkB6mB,IAAuB,iBAARA,IAC3CF,EAASE,IAAM9T,OAAO8B,UAAY9B,OAAO8B,SAASqE,MAAQ,KAKzDjY,KAAK6lB,4BAA4BC,+BAKlC,OAJA9lB,KAAK+lB,YAAYC,qBAAqBN,EAAUhB,GAChD1kB,KAAKimB,WAAWxd,QAAQ,SAAUC,GAAUA,EAAOD,QAAQ,SAAUyd,GAAK,OAAOA,EAAEC,OAAM,YAEzFnmB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB0B,6BAA8B,mLAGzG,IAAIwjB,GAAe,EACfC,OAAiB/c,EAEjBuR,EAAQ9a,KAAK6lB,4BAA4BU,uBAAuB3L,gBACpE0L,EAAiBhM,EAAcO,YAAYC,GAAQ,IAAIhP,MAClD9L,KAAK6lB,4BAA4BW,sBAAsBF,KACxDA,OAAiB/c,GAIrB,IAAI+V,OAAW/V,EACVzK,EAAUC,kBAAkB2lB,IAC5B5lB,EAAUC,kBAAkB2lB,EAAiBpF,YAC9CA,EAAWoF,EAAiBpF,WAE5Btf,KAAKymB,0BAA6BvQ,MAAMoJ,KACpCpJ,MAAMoJ,KAEDoF,IACDA,EAAmB,IAEvBA,EAA2B,SAAI4B,GAGnCtmB,KAAK+lB,YAAYC,qBAAqBN,EAAUhB,GAChD1kB,KAAKimB,WAAWxd,QAAQ,SAAUC,GAAUA,EAAOD,QAAQ,SAAUyd,GAAK,OAAOA,EAAEC,OAAM,OACzFE,GAAe,GAId3B,IACDA,EAAmB,IAEvB,IAAIgC,EAASra,uBACT,IACI,GAAI5L,EAAMolB,4BAA4Bc,+BAAgC,CAClEC,cAAcF,GACd,IAAIG,EAAsB,CACtBva,KAAMA,EACNsZ,IAAKA,GAETnlB,EAAMolB,4BAA4BiB,iCAAiCD,GAC9DA,EAAoBhc,SAAYwb,GAQ5BA,IACD3B,EAA2B,SAAImC,EAAoBxH,WACnD5e,EAAMslB,YAAYC,qBAAqBN,EAAUhB,IAEhDjkB,EAAMsmB,0BACPtmB,EAAMslB,YAAYiB,gCAAgCH,EAAqBnC,GACvEjkB,EAAMsmB,yBAA0B,GAEpCtmB,EAAMwlB,WAAWxd,QAAQ,SAAUC,GAAUA,EAAOD,QAAQ,SAAUyd,GAAK,OAAOA,EAAEC,OAAM,SAb1FzB,EAA2B,SAAI4B,EAC/B7lB,EAAMslB,YAAYC,qBAAqBN,EAAUhB,GACjDjkB,EAAMwlB,WAAWxd,QAAQ,SAAUC,GAAUA,EAAOD,QAAQ,SAAUyd,GAAK,OAAOA,EAAEC,OAAM,aAlBnF,IAgCN7L,EAAcO,YAAYC,GAAQ,IAAIhP,QAG3C8a,cAAcF,GACTL,IACD3B,EAA2B,SArCpB,IAsCPjkB,EAAMslB,YAAYC,qBAAqBN,EAAUhB,GACjDjkB,EAAMwlB,WAAWxd,QAAQ,SAAUC,GAAUA,EAAOD,QAAQ,SAAUyd,GAAK,OAAOA,EAAEC,OAAM,SAItG,MAAOhW,GACH1P,EAAM2lB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBuC,kBAAmB,kDAAoDwN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAErM,MAEDqV,IAtHP,SAASA,GAAgBO,EAAaU,EAA0Bxd,EAAMie,GAClElnB,KAAK+mB,yBAA0B,EAC/B/mB,KAAKymB,0BAA2B,EAChCzmB,KAAKymB,yBAA2BA,EAChCzmB,KAAK+lB,YAAcA,EACnB/lB,KAAK6lB,4BAA8BqB,EAC/Bje,IACAjJ,KAAKimB,SAAW,WAAc,OAAQhd,EAAKsC,2BAC3CvL,KAAKomB,QAAUnd,EAAKsB,QCVhC,IAAI4c,IAgBAA,GAAqBtnB,UAAUunB,uBAAyB,SAAUC,EAAiBC,GAC/E,IAEI,IAAIC,EAAwBvnB,KAAKwnB,sBAAsBH,EAAiBC,GAEpEC,GACAvnB,KAAKynB,6BAA6BF,EAAsBG,SAAUH,EAAsBI,QAASJ,EAAsBK,eAG/H,MAAOzX,GACHnQ,KAAKomB,QAAQlf,cAAc,oEAAsEgK,EAAKwB,KAAKvC,MAQnHgX,GAAqBtnB,UAAU2nB,sBAAwB,SAAUE,EAAUC,GACvE,IACI,IAAIE,EAAoB7nB,KAAK8nB,qBAE7B,OADA9nB,KAAK+nB,oBAAoBL,EAAUC,GAC5BE,EAEX,MAAO1X,GAEH,OADAnQ,KAAKomB,QAAQlf,cAAc,2BAA6BgK,EAAKwB,KAAKvC,IAC3D,OAQfgX,GAAqBtnB,UAAUkoB,oBAAsB,SAAUL,EAAUC,GACrE,IACI,GAAIzW,EAAK4B,uBAAwB,CAC7B,GAA2E,MAAvE5B,EAAKgC,kBAAkBlT,KAAKomB,QAASpmB,KAAKgoB,0BAC1C,MAAM,IAAIle,MAAM,gFAEpB,IAAIme,EAAoB,IAAIC,GAAcR,EAAUC,GAChDQ,EAAuB3hB,KAAKC,UAAUwhB,GAC1C/W,EAAKiC,kBAAkBnT,KAAKomB,QAASpmB,KAAKgoB,yBAA0BG,IAG5E,MAAOhY,GAEHnQ,KAAKomB,QAAQlf,cAAc,yBAA2BgK,EAAKwB,KAAKvC,MAOxEgX,GAAqBtnB,UAAUioB,mBAAqB,WAChD,IACI,GAAI5W,EAAK4B,uBAAwB,CAE7B,IAAIsV,EAAmBtc,KAAK4O,MAExB2N,EAAuBnX,EAAKgC,kBAAkBlT,KAAKomB,QAASpmB,KAAKgoB,0BACrE,GAAIK,EAAsB,CAEtB,IAAIR,EAAoBrhB,KAAK8hB,MAAMD,GAKnC,OAJAR,EAAkBD,cAAgBQ,EAAmBP,EAAkBU,mBAEvErX,EAAKkC,qBAAqBpT,KAAKomB,QAASpmB,KAAKgoB,0BAEtCH,EAGP,OAAO,KAGf,OAAO,KAEX,MAAO1X,GAEH,OADAnQ,KAAKomB,QAAQlf,cAAc,iCAAmCgK,EAAKwB,KAAKvC,IACjE,OAGRgX,IA3FP,SAASA,GAAqB5c,EAAQkd,GAClCznB,KAAKgoB,yBAA2B,oBAChChoB,KAAKynB,6BAA+BA,EACpCznB,KAAKomB,QAAU7b,EA2FvB,IAAI2d,GACA,SAAuBR,EAAUC,GAC7B3nB,KAAKuoB,mBAAqBzc,KAAK4O,MAC/B1a,KAAK0nB,SAAWA,EAChB1nB,KAAK2nB,QAAUA,GCvGnBa,IAOAA,GAA2B3oB,UAAUinB,iCAAmC,SAAUD,GAC9EA,EAAoBhc,SAAU,EAa9B,IAAI8P,EAAS3a,KAAKumB,uBAClB,GAAI5L,EAAQ,CACR,IAAI8N,EAAQnO,EAAcO,YAAYF,EAAOC,gBAAiBD,EAAO+N,cACjEC,EAAUrO,EAAcO,YAAYF,EAAOC,gBAAiBD,EAAOiO,YACnEC,EAAUvO,EAAcO,YAAYF,EAAOmO,aAAcnO,EAAOoO,eAChEC,EAAW1O,EAAcO,YAAYF,EAAOoO,cAAepO,EAAOsO,aAClEC,EAAM5O,EAAcO,YAAYF,EAAOsO,YAAatO,EAAO+N,cAClD,GAATD,EACAzoB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBW,YAAa,2CAA4C,CAAE2mB,MAAOA,EAAOE,QAASA,EAASE,QAASA,EAASG,SAAUA,EAAUE,IAAKA,IAEvMlpB,KAAKwmB,sBAAsBiC,EAAOE,EAASE,EAASG,EAAUE,GAG/DT,EAAQjpB,KAAKgV,MAAMmU,GAAWnpB,KAAKgV,MAAMqU,GAAWrpB,KAAKgV,MAAMwU,GAAYxpB,KAAKgV,MAAM0U,GAG3FlpB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBS,2BAA4B,iCAAkC,CAAE6mB,MAAOA,EAAOE,QAASA,EAASE,QAASA,EAASG,SAAUA,EAAUE,IAAKA,KAGlNrC,EAAoBxH,WAAaoJ,EAEjC5B,EAAoBtG,UAAYsG,EAAoBvH,SAAWpO,EAAK8E,aAAayS,GACjF5B,EAAoBrG,eAAiBtP,EAAK8E,aAAa2S,GACvD9B,EAAoBpG,YAAcvP,EAAK8E,aAAa6S,GACpDhC,EAAoBnG,iBAAmBxP,EAAK8E,aAAagT,GACzDnC,EAAoBlG,cAAgBzP,EAAK8E,aAAakT,GACtDrC,EAAoBhc,SAAU,GAf9B7K,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB8C,qBAAsB,qEAAsE,CAAEwkB,MAAOA,EAAOE,QAASA,EAASE,QAASA,EAASG,SAAUA,EAAUE,IAAKA,MAmB5PV,GAA2B3oB,UAAU0mB,qBAAuB,WACxD,OAAIvmB,KAAK8lB,+BACEhU,OAAO2I,YAAYE,OAEvB,MAKX6N,GAA2B3oB,UAAUimB,6BAA+B,WAChE,MAAwB,oBAAVhU,QAAyBA,OAAO2I,aAAe3I,OAAO2I,YAAYE,QAMpF6N,GAA2B3oB,UAAU8mB,6BAA+B,WAChE,IAAIhM,EAAS7I,OAAO2I,YAAYE,OAChC,OAAkC,EAA3BA,EAAOwO,mBACkB,EAAzBxO,EAAOC,iBACgB,EAAvBD,EAAOoO,eACe,EAAtBpO,EAAOmO,cACe,EAAtBnO,EAAO+N,cACc,EAArB/N,EAAOsO,aACa,EAApBtO,EAAOiO,YACa,EAApBjO,EAAOyO,YAKlBZ,GAA2B3oB,UAAU2mB,sBAAwB,WAEzD,IADA,IAAI6C,EAAY,GACPC,EAAK,EAAGA,EAAK7b,UAAU3M,OAAQwoB,IACpCD,EAAUC,GAAM7b,UAAU6b,GAG9B,IAAIC,EAAgB,CAAC,YAAa,gBAAiB,cAAe,wBAC9DzT,EAAYD,UAAUC,UACtB0T,GAAc,EAClB,GAAI1T,EACA,IAAK,IAAI2T,EAAM,EAAGA,EAAMF,EAAczoB,OAAQ2oB,IAC1CD,EAAcA,IAAwE,IAAzD1T,EAAUvD,cAAclS,QAAQkpB,EAAcE,IAGnF,GAAID,EAEA,OAAO,EAIP,IAAK,IAAI7oB,EAAI,EAAGA,EAAI0oB,EAAUvoB,OAAQH,IAClC,GAAI0oB,EAAU1oB,IAAMX,KAAK0pB,qBACrB,OAAO,EAInB,OAAO,GAEJlB,IA5GP,SAASA,GAA2Bvf,GAChCjJ,KAAK0pB,qBAAuB,KACxBzgB,IACAjJ,KAAKomB,QAAUnd,EAAKsB,QCAhC,IAAIof,GAAmB,WACnBC,IAaAA,GAAoBC,iBAAmB,SAAU5hB,GAkB7C,OAjBKA,IACDA,EAAS,IAGbA,EAAO6hB,iBAAmB,KAC1B7hB,EAAO8hB,oBAAsB,MAC7B9hB,EAAO+hB,yBAA2B9Y,EAAK4C,sBAAsB7L,EAAO+hB,0BACpE/hB,EAAOgiB,uBAAyB/Y,EAAK4C,sBAAsB7L,EAAOgiB,wBAClEhiB,EAAOwe,yBAA2BvV,EAAK4C,sBAAsB7L,EAAOwe,2BAChEvQ,MAAMjO,EAAOiiB,qBAAuBjiB,EAAOiiB,oBAAsB,GAAkC,KAA7BjiB,EAAOiiB,sBAC7EjiB,EAAOiiB,mBAAqB,KAEhCjiB,EAAOkB,oBAAsB+H,EAAK4C,sBAAsB7L,EAAOkB,qBAC/DlB,EAAOkiB,qBAAuBjZ,EAAK4C,sBAAsB7L,EAAOkiB,sBAChEliB,EAAOmiB,6BAA+BlZ,EAAK4C,sBAAsB7L,EAAOmiB,8BACxEniB,EAAOoiB,wBAA0BnZ,EAAK4C,sBAAsB7L,EAAOoiB,yBACnEpiB,EAAOqiB,WAAariB,EAAOqiB,YAAc,GAClCriB,GAEX2hB,GAAoB/pB,UAAUyI,iBAAmB,SAAUiiB,GAGvD,IAFA,IAAIC,GAAgB,EAChBC,EAA6BzqB,KAAK0qB,uBAAuB5pB,OACpDH,EAAI,EAAGA,EAAI8pB,IAA8B9pB,EAAG,CACjD,IAAIgqB,EAAuB3qB,KAAK0qB,uBAAuB/pB,GACvD,GAAIgqB,EACA,IACI,IAAgD,IAA5CA,EAAqBjgB,MAAM,KAAM,CAAC6f,IAAiB,CACnDC,GAAgB,EAChB,OAGR,MAAOra,GAGHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiE,2BAA4B,0EAA4E8L,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAAM,IAI9Oqa,GAAkB1rB,EAAUC,kBAAkBiB,KAAK4qB,cACpD5qB,KAAK4qB,YAAYtiB,iBAAiBiiB,IAG1CX,GAAoB/pB,UAAUkK,cAAgB,SAAU8gB,GACpD7qB,KAAK4qB,YAAcC,GAEvBjB,GAAoB/pB,UAAUirB,WAAa,SAAUC,EAAOrG,GACxD,IACI,IAAIhZ,EAAgB8Y,GAAqBtX,OAAO6d,EAAOC,EAAellB,SAAUklB,EAAejP,aAAc/b,KAAKomB,QAAS1B,GAC3H1kB,KAAKiJ,KAAKwC,MAAMC,GAEpB,MAAOyE,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBwC,iBAAkB,mDAAqDuN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAOvMyZ,GAAoB/pB,UAAUorB,gBAAkB,SAAU3e,GACtD,IACItM,KAAKkrB,eAAepQ,MAAMxO,GAE9B,MAAO6D,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB8B,sBAAuB,wDAA0DiO,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OASlNyZ,GAAoB/pB,UAAUsrB,eAAiB,SAAU7e,EAAMlG,EAAYkK,GACvE,IACItQ,KAAKkrB,eAAeE,KAAK9e,OAAM/C,EAAWnD,GAE9C,MAAO+J,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+B,qBAAsB,uDAAyDgO,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAShNyZ,GAAoB/pB,UAAUwrB,WAAa,SAAUC,EAAO5G,GACxD,IACI,IAAIhZ,EAAgB8Y,GAAqBtX,OAAOoe,EAAOpL,GAAMpa,SAAUoa,GAAMnE,aAAc/b,KAAKomB,QAAS1B,GACzG1kB,KAAKiJ,KAAKwC,MAAMC,GAEpB,MAAOyE,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBwC,iBAAkB,mDAAqDuN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAcvMyZ,GAAoB/pB,UAAU0rB,YAAc,SAAUC,EAAQ9G,GAC1D,IACI,IAAIhZ,EAAgB8Y,GAAqBtX,OAAOse,EAAQvM,GAAOnZ,SAAUmZ,GAAOlD,aAAc/b,KAAKomB,QAAS1B,GAC5G1kB,KAAKiJ,KAAKwC,MAAMC,GAEpB,MAAOyE,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBqC,kBAAmB,qDAAuD0N,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAS3MyZ,GAAoB/pB,UAAU4lB,cAAgB,SAAUC,EAAUhB,GAC9D,IACI,IAAI+G,EAAO/F,GAAY,GACvB1lB,KAAK0rB,iBAAiBjG,cAAcgG,EAAM9O,EAAiB,GAAI8O,EAAKrlB,WAAYqlB,EAAKnb,aAAcoU,IAC/F1kB,KAAKiI,OAAOgiB,wBACZjqB,KAAK2rB,sBAAsBvE,uBAAuBqE,EAAKnf,KAAMmf,EAAK7F,KAG1E,MAAOzV,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBsC,cAAe,0DAA4DyN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAS5MyZ,GAAoB/pB,UAAUmmB,qBAAuB,SAAUN,EAAUtf,EAAYue,GACzD,oBAAbrR,WACPoS,EAASkG,YAA6BriB,IAApBmc,EAASkG,OAAuBtY,SAASuY,SAAWnG,EAASkG,QAEnF,IAAIlgB,EAAgB8Y,GAAqBtX,OAAOwY,EAAUtG,GAAStZ,SAAUsZ,GAASrD,aAAc/b,KAAKomB,QAAShgB,EAAYue,GAC9H3kB,KAAKiJ,KAAKwC,MAAMC,GAEhB1L,KAAK8rB,mBAAqB,GAO9BlC,GAAoB/pB,UAAUmnB,gCAAkC,SAAUH,EAAqBzgB,EAAYue,GACvG,IAAIjZ,EAAgB8Y,GAAqBtX,OAAO2Z,EAAqBzG,GAAoBta,SAAUsa,GAAoBrE,aAAc/b,KAAKomB,QAAShgB,EAAYue,GAC/J3kB,KAAKiJ,KAAKwC,MAAMC,IAOpBke,GAAoB/pB,UAAUksB,yBAA2B,SAAUlF,EAAqBnC,GACpF,IACI1kB,KAAK6lB,4BAA4BiB,iCAAiCD,GAClE7mB,KAAKgnB,gCAAgCH,EAAqBnC,GAE9D,MAAOvU,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBsC,cAAe,qEAAuEyN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OASvNyZ,GAAoB/pB,UAAUmsB,eAAiB,SAAU1f,GACrD,IACwB,iBAATA,IACPA,EAAOwF,OAAOwB,UAAYxB,OAAOwB,SAASqS,OAAS,IAEvD3lB,KAAKisB,cAAcnR,MAAMxO,GAE7B,MAAO6D,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBgC,iBAAkB,0DAA4D+N,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAW/MyZ,GAAoB/pB,UAAUqsB,cAAgB,SAAU5f,EAAMgD,EAAKlJ,EAAY+lB,GAC3E,IACwB,iBAAT7f,IACPA,EAAOwF,OAAOwB,UAAYxB,OAAOwB,SAASqS,OAAS,IAEpC,iBAARrW,IACPA,EAAMwC,OAAO8B,UAAY9B,OAAO8B,SAASqE,MAAQ,IAErDjY,KAAKisB,cAAcb,KAAK9e,EAAMgD,EAAKlJ,EAAY+lB,GAC3CnsB,KAAKiI,OAAOgiB,wBACZjqB,KAAK2rB,sBAAsBvE,uBAAuB9a,EAAMgD,GAGhE,MAAOa,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiC,gBAAiB,0DAA4D8N,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAS9MyZ,GAAoB/pB,UAAUusB,sBAAwB,SAAUvc,EAAW6U,EAAkBC,GACzF,IAAI0H,EAAiB,IAAI9P,GAAUvc,KAAKomB,QAASvW,EAAUA,WAAa,IAAI/F,MAAMoH,EAAKwG,cAAe7H,EAAUzJ,WAAYyJ,EAAUS,aAAcT,EAAUgN,cAAehN,EAAUa,IAAIkM,cACvLlR,EAAgB8Y,GAAqBtX,OAAOmf,EAAgB9P,GAAUzW,SAAUyW,GAAUR,aAAc/b,KAAKomB,QAAS1B,EAAkBC,GAC5I3kB,KAAKiJ,KAAKwC,MAAMC,IAWpBke,GAAoB/pB,UAAUysB,eAAiB,SAAUzc,EAAW6U,GAChE,IACI1kB,KAAKosB,sBAAsBvc,EAAW6U,GAE1C,MAAOvU,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBoC,qBAAsB,2DAA6D2N,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAQpNyZ,GAAoB/pB,UAAU0sB,SAAW,SAAU1c,GAC/C,IACI,IAAI2c,EAAe,CACfld,IAAMO,GAAaA,EAAUP,KAAQgE,SAASmZ,IAC9C/V,WAAY7G,EAAU6G,WACtBC,aAAc9G,EAAU8G,aACxBrQ,QAASuJ,EAAUvJ,SAEvB,GAAI4K,EAAKuF,mBAAmB5G,EAAUvJ,QAASuJ,EAAUP,IAAKO,EAAU6G,WAAY7G,EAAU8G,aAAc9G,EAAU+G,OAClH5W,KAAK0sB,mBAAmBF,EAAald,SAEpC,CACD,IAAK4B,EAAKyD,QAAQ9E,EAAU+G,OAAQ,CAChC,IAAII,EAAQ,kBAAoBwV,EAAald,IAAM,IAAMO,EAAU6G,WAAa,KAAO7G,EAAU8G,cAAgB,GACjH9G,EAAU+G,MAAQ,IAAI9M,MAAM+F,EAAUvJ,SACtCuJ,EAAU+G,MAAMI,MAAQA,EAE5BhX,KAAKssB,eAAe,CAAEzc,UAAWA,EAAU+G,MAAOiG,cAAe+D,gBAAc9W,OAAS0iB,IAGhG,MAAOrc,GACH,IAAIwc,EAAc9c,EAAU+G,MACvB/G,EAAU+G,MAAMtK,KAAO,KAAOuD,EAAU+G,MAAMtQ,QAC7C,OACNtG,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBY,2BAA4B,8EAC9FmP,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,GAAIwc,YAAaA,MAGhF/C,GAAoB/pB,UAAU+sB,wBAA0B,SAAUjC,GAC9D3qB,KAAK0qB,uBAAuBxqB,KAAKyqB,IAErCf,GAAoB/pB,UAAUgtB,YAAc,SAAU5kB,EAAQgB,EAAMC,GAChE,IAAIzI,EAAQT,KACZ,IAAIA,KAAKmK,eAAT,CAGA,GAAIrL,EAAUC,kBAAkBkK,GAC5B,MAAMa,MAAM,sBAEhB9J,KAAKiJ,KAAOA,EACZjJ,KAAKomB,QAAUnd,EAAKsB,OACpBvK,KAAK8sB,cAAgB,CACjB1iB,mBAAoBnC,EAAOmC,mBAC3BiI,YAAapK,EAAOoK,aAAe,iDAEvCrS,KAAKiI,OAASA,EAAOqC,iBAAmBrC,EAAOqC,gBAAgBtK,KAAK6J,YAAc5B,EAAOqC,gBAAgBtK,KAAK6J,YAAc,GAE5H,IAAIkjB,EAAWnD,GAAoBC,mBACnC,QAAiBtgB,IAAbwjB,EAAwB,CACxB,IAAK,IAAIve,KAASue,EAEd/sB,KAAKiI,OAAOuG,GAASsS,GAAqBC,UAAU9Y,EAAQuG,EAAOxO,KAAK6J,WAAYkjB,EAASve,IAEjG,GAAIxO,KAAK8sB,cACL,IAAK,IAAIte,KAASue,OACoBxjB,IAA9BvJ,KAAK8sB,cAActe,KACnBxO,KAAK8sB,cAActe,GAASue,EAASve,IAMjDxO,KAAKiI,OAAOkB,qBACZ+H,EAAKjS,iBAGLe,KAAKiI,OAAOkiB,sBACZjZ,EAAKC,iBAET,IAAI6b,EAAgB,CAChB5iB,mBAAoB,WAAc,OAAOnC,EAAOmC,oBAChD6iB,UAAW,WAAc,OAAOxsB,EAAMwH,OAAOglB,WAAahlB,EAAOglB,WACjEnD,iBAAkB,WAAc,OAAOrpB,EAAMwH,OAAO6hB,kBAAoB7hB,EAAO6hB,kBAC/EC,oBAAqB,WAAc,OAAOtpB,EAAMwH,OAAO8hB,qBAAuB9hB,EAAO8hB,qBACrFxO,WAAY,WAAc,OAAO9a,EAAMwH,OAAOiiB,oBAAsBjiB,EAAOiiB,oBAC3EgD,aAAc,WAAc,OAAOzsB,EAAMwH,OAAOilB,cAAgBjlB,EAAOilB,cACvEC,aAAc,WAAc,OAAO1sB,EAAMwH,OAAOklB,cAAgBllB,EAAOklB,cACvE/C,6BAA8B,WAAc,OAAO3pB,EAAMwH,OAAOmiB,8BAAgCniB,EAAOmiB,8BACvGgD,MAAO,WAAc,OAAO3sB,EAAMwH,OAAOmlB,OAASnlB,EAAOmlB,QAE7DptB,KAAK6lB,4BAA8B,IAAI2C,GAA2BxoB,KAAKiJ,MACvEjJ,KAAK0rB,iBAAmB,IAAIlG,GAAgBxlB,KAAMA,KAAKiI,OAAOwe,yBAA0BzmB,KAAKiJ,KAAMjJ,KAAK6lB,6BACxG7lB,KAAK2rB,sBAAwB,IAAIxE,GAAqBnnB,KAAKomB,QAAS,SAAUsB,EAAUC,EAASC,GAAiB,OAAOnnB,EAAM4sB,mBAAmB3F,EAAUC,EAASC,KACrK5nB,KAAK0qB,uBAAyB,GAC9B1qB,KAAKstB,iCAAiCN,GACtChtB,KAAKkrB,eAAiB,IAAIqC,GAAOvtB,KAAKomB,QAAS,cAC/CpmB,KAAKkrB,eAAesC,OAChB,SAAUlhB,EAAMgD,EAAKgQ,EAAUlZ,GACtBA,IACDA,EAAa,IAEjBA,EAAWujB,IAAoBrK,EAAS5f,WACxCe,EAAMqqB,WAAW,CAAExe,KAAMA,EAAMlG,WAAYA,KAGnDpG,KAAKisB,cAAgB,IAAIsB,GAAOvtB,KAAKomB,QAAS,iBAC9CpmB,KAAKisB,cAAcuB,OAAS,SAAUlhB,EAAMgD,EAAKgQ,EAAUlZ,EAAYkK,GAE/DxR,EAAUC,kBAAkBqH,KAC5BA,EAAa,IAEjBA,EAAWujB,IAAoBrK,EAAS5f,WACxC,IAAI+tB,EAAe,CACfnhB,KAAMA,EACNsZ,IAAKtW,EACLlJ,WAAYA,EACZkK,aAAcA,GAElB7P,EAAMulB,qBAAqByH,IAE/B,IAwCsCC,EANHA,EAlC/BC,EAAW3tB,KACf,IAA6C,IAAzCA,KAAKiI,OAAO+hB,2BACXhqB,KAAKiI,OAAO2lB,0BAA2B,CAExC,IACIC,EAAoB/b,OAAgB,QACxCA,OAAOgc,QAAU,SAAUxnB,EAASgJ,EAAKoH,EAAYC,EAAcC,GAC/D,IAAImX,EAAUF,GAAqBA,EAAkBvnB,EAASgJ,EAAKoH,EAAYC,EAAcC,GAU7F,OATgB,IAAZmX,GACAJ,EAASpB,SAAS,CACdjmB,QAASA,EACTgJ,IAAKA,EACLoH,WAAYA,EACZC,aAAcA,EACdC,MAAOA,IAGRmX,GAEX/tB,KAAKiI,OAAO2lB,2BAA4B,EAK5C,IAA4C,IAAxC5tB,KAAKiI,OAAOoiB,yBACU,iBAAZ2D,SAAqD,mBAAtBA,QAAQC,WAA4D,mBAAzBD,QAAQE,cACvE,iBAAXpc,OAAqB,CAC/B,IAAIqc,EAAUnuB,KAEdkJ,EAAWT,QAAQ,SAAUmC,GACrBA,EAAUf,aAAeyb,KACzB7kB,EAAM2tB,YAAcxjB,KAG5BojB,QAAQC,WAAuBP,EAKzBM,QAAQC,UAL6B,WACvC,IAAII,EAAMX,EAAEhjB,MAAM1K,KAAMyN,WAGxB,OAFAqE,OAAOwc,cAAc,IAAIxS,MAAMqS,EAAQlmB,OAAOqiB,WAAa,cAC3DxY,OAAOwc,cAAc,IAAIxS,MAAMqS,EAAQlmB,OAAOqiB,WAAa,mBACpD+D,IAEXL,QAAQE,cAA0BR,EAK5BM,QAAQE,aALgC,WAC1C,IAAIG,EAAMX,EAAEhjB,MAAM1K,KAAMyN,WAGxB,OAFAqE,OAAOwc,cAAc,IAAIxS,MAAMqS,EAAQlmB,OAAOqiB,WAAa,iBAC3DxY,OAAOwc,cAAc,IAAIxS,MAAMqS,EAAQlmB,OAAOqiB,WAAa,mBACpD+D,IAEXvc,OAAOuF,iBAAiB8W,EAAQlmB,OAAOqiB,WAAa,WAAY,WAC5DxY,OAAOwc,cAAc,IAAIxS,MAAMqS,EAAQlmB,OAAOqiB,WAAa,qBAE/DxY,OAAOuF,iBAAiB8W,EAAQlmB,OAAOqiB,WAAa,iBAAkB,WAC9D6D,EAAQC,aAAeD,EAAQC,YAAYG,SAAWJ,EAAQC,YAAYG,QAAQC,iBAClFL,EAAQC,YAAYG,QAAQC,eAAeC,QAAUvd,EAAKmD,QAC1D8Z,EAAQC,YAAYG,QAAQC,eAAeliB,KAAOwF,OAAO8B,SAASwE,UAEtEvX,WAAW,WAEPstB,EAAQ1I,cAAc,CAAEmG,OAAQ,KAAMxlB,WAAY,CAAEkZ,SAAU,MAC/D6O,EAAQO,oBAGnB1uB,KAAKmK,gBAAiB,IAO1Byf,GAAoB/pB,UAAUwtB,mBAAqB,SAAU3F,EAAUC,EAASC,GAC5E,IAAIxhB,EAAa,CAAEuoB,SAAUjH,EAAUkH,QAASjH,GAChD3nB,KAAKurB,YAAY,CACbjf,KAAM,gBACNuiB,QAASjH,EACT7I,IAAK6I,EACLtR,IAAKsR,EACLkH,YAAa,GACd1oB,IAEPwjB,GAAoB/pB,UAAUytB,iCAAmC,SAAUN,GACvE,IAAKA,EAAc5C,+BAAgC,CAC/C,IAAI2E,EAAqB,CAAC,uBAAwB,mBAclD/uB,KAAKgvB,yBAbyB,SAAUC,GACpC,GAAIA,EAAS1iB,WAAagT,GAAqBzZ,SAAU,CACrD,IAAIopB,EAAaD,EAASziB,SAC1B,GAAI0iB,EACA,IAAK,IAAIvuB,EAAI,EAAGA,EAAIouB,EAAmBjuB,OAAQH,IAC3C,GAAIuuB,EAAW/U,QAA8D,GAApD+U,EAAW/U,OAAO9Z,QAAQ0uB,EAAmBpuB,IAClE,OAAO,EAKvB,OAAO,MAKnBipB,GAAoB/pB,UAAUmvB,yBAA2B,SAAUrE,GAC/D3qB,KAAK0qB,uBAAuBxqB,KAAKyqB,IAErCf,GAAoB/pB,UAAU6sB,mBAAqB,SAAUpd,GACzD,IAAIO,EAAY,CACZvJ,QAAS,qJACTgJ,IAAKA,EACLoH,WAAY,EACZC,aAAc,EACdC,WAAOrN,GAEPmC,EAAgB8Y,GAAqBtX,OAAO2C,EAAW0M,GAAUzW,SAAUyW,GAAUR,aAAc/b,KAAKomB,QAAS,CAAE9W,IAAKA,IAC5HtP,KAAKiJ,KAAKwC,MAAMC,IAEpBke,GAAoBuF,QAAU,QACvBvF,IAheP,SAASA,KACL5pB,KAAK6J,WAAa,+BAClB7J,KAAK2J,SAAW,IAChB3J,KAAK0uB,iBAAmB,IACxB1uB,KAAKmK,gBAAiB,EAKtBnK,KAAK8rB,mBAAqB,EAC1B9rB,KAAKgJ,WAAahJ,KAAK6sB,YAAYuC,KAAKpvB,MA4dhD,IAAIutB,IAMAA,GAAO1tB,UAAUib,MAAQ,SAAUxO,QACG,IAAvBtM,KAAKqvB,QAAQ/iB,IACpBtM,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB+D,wBAAyB,uEAAwE,CAAEoH,KAAMtM,KAAKsvB,MAAOjhB,IAAK/B,IAAQ,GAE7MtM,KAAKqvB,QAAQ/iB,IAAS,IAAIR,MAE9ByhB,GAAO1tB,UAAUurB,KAAO,SAAU9e,EAAMgD,EAAKlJ,EAAYkK,GACrD,IAAIwK,EAAQ9a,KAAKqvB,QAAQ/iB,GACzB,GAAI4J,MAAM4E,GACN9a,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBgE,uBAAwB,iDAAkD,CAAEmH,KAAMtM,KAAKsvB,MAAOjhB,IAAK/B,IAAQ,OAEjL,CACD,IAAIyO,GAAO,IAAIjP,KACXwT,EAAWhF,EAAcO,YAAYC,EAAOC,GAChD/a,KAAKwtB,OAAOlhB,EAAMgD,EAAKgQ,EAAUlZ,EAAYkK,UAE1CtQ,KAAKqvB,QAAQ/iB,GACpBtM,KAAKqvB,QAAQ/iB,QAAQ/C,GAElBgkB,IAxBP,SAASA,GAAOhjB,EAAQ+B,GACpBtM,KAAKsvB,MAAQhjB,EACbtM,KAAKqvB,QAAU,GACfrvB,KAAKomB,QAAU7b,EClfvB,IAAIglB,IAKAA,GAAgB1vB,UAAU2vB,QAAU,SAAUC,GAC1CzvB,KAAK0vB,QAAQxvB,KAAKuvB,IAEtBF,GAAgB1vB,UAAUif,MAAQ,WAC9B,OAAO9e,KAAK0vB,QAAQ5uB,QAExByuB,GAAgB1vB,UAAU8vB,MAAQ,WAC9B3vB,KAAK0vB,QAAQ5uB,OAAS,GAE1ByuB,GAAgB1vB,UAAU+vB,SAAW,WACjC,OAAO5vB,KAAK0vB,QAAQja,MAAM,IAE9B8Z,GAAgB1vB,UAAUgwB,cAAgB,SAAUJ,GAChD,OAAIA,GAA4B,EAAjBA,EAAQ3uB,OACPd,KAAK8vB,QAAQC,wBACrBN,EAAQO,KAAK,MACb,IAAMP,EAAQO,KAAK,KAAO,IAG3B,MAEXT,GAAgB1vB,UAAUowB,WAAa,SAAUR,GAC7CzvB,KAAK2vB,SAETJ,GAAgB1vB,UAAUqwB,UAAY,SAAUT,KAGzCF,IA/BP,SAASA,GAAgBtnB,GACrBjI,KAAK8vB,QAAU7nB,EACfjI,KAAK0vB,QAAU,GAmCvB,IAAIS,IAkBAA,GAAyBtwB,UAAU2vB,QAAU,SAAUC,GAC/CzvB,KAAK0vB,QAAQ5uB,QAAUqvB,GAAyBC,gBAE3CpwB,KAAKqwB,yBACNrwB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBoE,yBAA0B,gCAAkCvF,KAAK0vB,QAAQ5uB,QAAQ,GACxJd,KAAKqwB,wBAAyB,IAItCrwB,KAAK0vB,QAAQxvB,KAAKuvB,GAClBzvB,KAAKswB,UAAUH,GAAyBI,WAAYvwB,KAAK0vB,WAE7DS,GAAyBtwB,UAAUif,MAAQ,WACvC,OAAO9e,KAAK0vB,QAAQ5uB,QAExBqvB,GAAyBtwB,UAAU8vB,MAAQ,WACvC3vB,KAAK0vB,QAAQ5uB,OAAS,EACtBd,KAAKswB,UAAUH,GAAyBI,WAAY,IACpDvwB,KAAKswB,UAAUH,GAAyBK,gBAAiB,IACzDxwB,KAAKqwB,wBAAyB,GAElCF,GAAyBtwB,UAAU+vB,SAAW,WAC1C,OAAO5vB,KAAK0vB,QAAQja,MAAM,IAE9B0a,GAAyBtwB,UAAUgwB,cAAgB,SAAUJ,GACzD,OAAIA,GAA4B,EAAjBA,EAAQ3uB,OACPd,KAAK8vB,QAAQC,wBACrBN,EAAQO,KAAK,MACb,IAAMP,EAAQO,KAAK,KAAO,IAG3B,MAEXG,GAAyBtwB,UAAUowB,WAAa,SAAUR,GACtDzvB,KAAK0vB,QAAU1vB,KAAKywB,yBAAyBhB,EAASzvB,KAAK0vB,SAC3D1vB,KAAKswB,UAAUH,GAAyBI,WAAYvwB,KAAK0vB,SACzD,IAAIgB,EAAe1wB,KAAK2wB,UAAUR,GAAyBK,iBACvDE,aAAwBtnB,OAASqmB,aAAmBrmB,SACpDsnB,EAAeA,EAAa/lB,OAAO8kB,IAClB3uB,OAASqvB,GAAyBC,kBAG/CpwB,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBoE,yBAA0B,yCAA2CmrB,EAAa5vB,QAAQ,GAClK4vB,EAAa5vB,OAASqvB,GAAyBC,iBAEnDpwB,KAAKswB,UAAUH,GAAyBK,gBAAiBE,KAGjEP,GAAyBtwB,UAAUqwB,UAAY,SAAUT,GACrD,IAAIiB,EAAe1wB,KAAK2wB,UAAUR,GAAyBK,iBAC3DE,EAAe1wB,KAAKywB,yBAAyBhB,EAASiB,GACtD1wB,KAAKswB,UAAUH,GAAyBK,gBAAiBE,IAE7DP,GAAyBtwB,UAAU4wB,yBAA2B,SAAUG,EAAUC,GAC9E,IAAIC,EAAY,GAChB,IAAK,IAAInwB,KAAKkwB,EAAQ,CAClB,IAAIE,GAAW,EACf,IAAK,IAAIC,KAAKJ,EACV,GAAIA,EAASI,KAAOH,EAAOlwB,GAAI,CAC3BowB,GAAW,EACX,MAGHA,GACDD,EAAU5wB,KAAK2wB,EAAOlwB,IAI9B,OAAOmwB,GAEXX,GAAyBtwB,UAAU8wB,UAAY,SAAUtiB,GACrD,IAAI4iB,EAAc5iB,EAClB,IACI4iB,EAAcjxB,KAAK8vB,QAAQxF,YAActqB,KAAK8vB,QAAQxF,aAAetqB,KAAK8vB,QAAQxF,aAAe,IAAM2G,EAAcA,EACrH,IAAIC,EAAahgB,EAAKgC,kBAAkBlT,KAAKomB,QAAS6K,GACtD,GAAIC,EAAY,CACZ,IAAIL,EAASrqB,KAAK8hB,MAAM4I,GACxB,GAAIL,EACA,OAAOA,GAInB,MAAO1gB,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB2C,6BAA8B,iBAAmBmtB,EAAc,KAAO/f,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAEnM,MAAO,IAEXggB,GAAyBtwB,UAAUywB,UAAY,SAAUjiB,EAAKwiB,GAC1D,IAAII,EAAc5iB,EAClB,IACI4iB,EAAcjxB,KAAK8vB,QAAQxF,YAActqB,KAAK8vB,QAAQxF,aAAetqB,KAAK8vB,QAAQxF,aAAe,IAAM2G,EAAcA,EACrH,IAAIC,EAAa1qB,KAAKC,UAAUoqB,GAChC3f,EAAKiC,kBAAkBnT,KAAKomB,QAAS6K,EAAaC,GAEtD,MAAO/gB,GAGHe,EAAKiC,kBAAkBnT,KAAKomB,QAAS6K,EAAazqB,KAAKC,UAAU,KACjEzG,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB0C,yBAA0B,iBAAmBotB,EAAc,KAAO/f,EAAKuB,iBAAiBtC,GAAK,mBAAoB,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAGvNggB,GAAyBI,WAAa,YACtCJ,GAAyBK,gBAAkB,gBAE3CL,GAAyBC,gBAAkB,IACpCD,IA1HP,SAASA,GAAyB5lB,EAAQtC,GACtCjI,KAAKqwB,wBAAyB,EAC9BrwB,KAAKomB,QAAU7b,EACfvK,KAAK8vB,QAAU7nB,EACf,IAAIkpB,EAAcnxB,KAAK2wB,UAAUR,GAAyBI,YACtDa,EAAoBpxB,KAAK2wB,UAAUR,GAAyBK,iBAChExwB,KAAK0vB,QAAUyB,EAAYxmB,OAAOymB,GAE9BpxB,KAAK0vB,QAAQ5uB,OAASqvB,GAAyBC,kBAC/CpwB,KAAK0vB,QAAQ5uB,OAASqvB,GAAyBC,iBAKnDpwB,KAAKswB,UAAUH,GAAyBK,gBAAiB,IACzDxwB,KAAKswB,UAAUH,GAAyBI,WAAYvwB,KAAK0vB,SCrDjE,IAAI2B,IAGAA,GAAgBC,kBAAoB,SAAUxgB,GAC1C,IAAI4T,EAAmB,KACvB,IAAK,IAAIrW,KAAOyC,EACZ,GAAIA,EAAKhE,eAAeuB,GAAM,CAC1B,IAAIY,EAAQ6B,EAAKzC,GACI,iBAAVY,IACFyV,IACDA,EAAmB,IAEvBA,EAAiBrW,GAAOY,GAIpC,OAAOyV,GAEX2M,GAAgBE,4BAA8B,SAAUzgB,EAAM1K,EAAYkK,GACtE,IAAKxR,EAAUC,kBAAkB+R,GAC7B,IAAK,IAAIzC,KAAOyC,EACZ,GAAIA,EAAKhE,eAAeuB,GAAM,CAC1B,IAAIY,EAAQ6B,EAAKzC,GACI,iBAAVY,EACPqB,EAAajC,GAAOY,EAGpB7I,EAAWiI,GADW,iBAAVY,EACMA,EAGAzI,KAAKC,UAAUwI,KAOrDoiB,GAAgBG,eAAiB,SAAUjnB,EAAQwR,EAAcrQ,EAAeoF,GAC5E,IAAIme,EAAW,IAAI3T,EAAS/Q,EAAQuG,EAAMiL,GAC1CkT,EAASrjB,KAAOF,EAAcE,KAC9B,IAAI6lB,EAAe/lB,EAAcE,KAAKxM,QAAQ,KAAM,IAQpD,OAPA6vB,EAAS3iB,KAAO2iB,EAAS3iB,KAAKlN,QAAQ,MAAOqyB,GAE7CJ,GAAgBK,uBAAuBhmB,EAAeujB,GAEjDvjB,EAAc8P,OACf9P,EAAc8P,KAAO,IAElByT,GAKXoC,GAAgBK,uBAAyB,SAAUnpB,EAAMgiB,GAWrD,GATKA,EAAI/O,OACL+O,EAAI/O,KAAO,IAEVjT,EAAK4C,MACN5C,EAAK4C,IAAM,IAEV5C,EAAKiT,OACNjT,EAAKiT,KAAO,IAEZjT,EAAK4C,IAAIwmB,KAAM,CACXppB,EAAK4C,IAAIwmB,KAAKC,SACdrH,EAAI/O,KAAK6J,GAAW1B,gBAAkBpb,EAAK4C,IAAIwmB,KAAKC,QAExD,IAAInO,EAASlb,EAAK4C,IAAIwmB,KAAKjhB,IAAMnI,EAAK4C,IAAIwmB,KAAKE,QAC3CpO,IACA8G,EAAI/O,KAAK6J,GAAW5B,QAAUA,GAmBtC,GAhBIlb,EAAK4C,IAAI2mB,KACLvpB,EAAK4C,IAAI2mB,IAAIC,QACbxH,EAAI/O,KAAK6J,GAAWjC,WAAa7a,EAAK4C,IAAI2mB,IAAIC,OAGlDxpB,EAAK4C,IAAI6mB,UACLzpB,EAAK4C,IAAI6mB,OAAOthB,IAAMnI,EAAK4C,IAAI6mB,OAAOH,WACtCtH,EAAI/O,KAAK6J,GAAW9D,UAAYhZ,EAAK4C,IAAI6mB,OAAOthB,IAAMnI,EAAK4C,IAAI6mB,OAAOH,SAEtEtpB,EAAK4C,IAAI6mB,OAAOC,cAChB1H,EAAI/O,KAAK6J,GAAWhD,YAAc9Z,EAAK4C,IAAI6mB,OAAOC,aAElD1pB,EAAK4C,IAAI6mB,OAAOE,KAChB3H,EAAI/O,KAAK6J,GAAW7D,UAAYjZ,EAAK4C,IAAI6mB,OAAOE,KAGpD3pB,EAAK4C,IAAIgnB,IAAK,CACd,IAAIA,EAAM5pB,EAAK4C,IAAIgnB,IACfA,EAAIC,cACJ7H,EAAI/O,KAAK6J,GAAW5D,gBAAkB0Q,EAAIC,aAE1CD,EAAIE,aACJ9H,EAAI/O,KAAK6J,GAAW5C,sBAAwB0P,EAAIE,YAEhDF,EAAIG,UACJ/H,EAAI/O,KAAK6J,GAAW7C,eAAiB2P,EAAIG,SAE7C/H,EAAIzZ,KAAOyZ,EAAIzZ,MAAQ,GACvByZ,EAAIzZ,KAAKtE,SAAW+d,EAAIzZ,KAAKtE,UAAY,GACzC+d,EAAIzZ,KAAKtE,SAASpG,WAAamkB,EAAIzZ,KAAKtE,SAASpG,YAAc,GAC3D+rB,EAAI1e,SACJ8W,EAAIzZ,KAAKtE,SAASpG,WAAmB,OAAI+rB,EAAI1e,QAE7C0e,EAAIpV,WACJwN,EAAIzZ,KAAKtE,SAASpG,WAAqB,SAAI+rB,EAAIpV,SAASrd,YAExDyyB,EAAII,YACJhI,EAAIzZ,KAAKtE,SAASpG,WAAsB,UAAI+rB,EAAII,WAEhDJ,EAAIK,cACJjI,EAAIzZ,KAAKtE,SAASpG,WAAwB,YAAI+rB,EAAIK,YAAY9yB,YAGlE6I,EAAK4C,IAAI6mB,QACLzpB,EAAK4C,IAAI6mB,OAAOS,QAChBlI,EAAI/O,KAAK6J,GAAW1D,aAAepZ,EAAK4C,IAAI6mB,OAAOS,OAGvDlqB,EAAK4C,IAAIunB,IAAMnqB,EAAK4C,IAAIunB,GAAGpmB,OAC3Bie,EAAI/O,KAAK6J,GAAWrD,UAAYzZ,EAAK4C,IAAIunB,GAAGpmB,MAE5C/D,EAAK4C,IAAI6mB,QACLzpB,EAAK4C,IAAI6mB,OAAO3P,aAChBkI,EAAI/O,KAAK6J,GAAWhD,YAAc9Z,EAAK4C,IAAI6mB,OAAO3P,YAItD9Z,EAAK4C,IAAImgB,QACL/iB,EAAK4C,IAAImgB,MAAMqH,WACfpI,EAAI/O,KAAK6J,GAAWrC,mBAAqBza,EAAK4C,IAAImgB,MAAMqH,UAExDpqB,EAAK4C,IAAImgB,MAAMhf,OACfie,EAAI/O,KAAK6J,GAAWtC,eAAiBxa,EAAK4C,IAAImgB,MAAMhf,MAEpD/D,EAAK4C,IAAImgB,MAAMmD,UACflE,EAAI/O,KAAK6J,GAAWvC,aAAeva,EAAK4C,IAAImgB,MAAMmD,UA4B1D,IAVA,IAAImE,EAAM,GACNlyB,EAAU,SAAUC,GACpB,IAAIkyB,EAAKtqB,EAAKiT,KAAK7a,GAEnBgI,OAAOsK,KAAK4f,GAAIpqB,QAAQ,SAAU4F,GAC9BukB,EAAIvkB,GAAOwkB,EAAGxkB,KAElB9F,EAAKiT,KAAKlb,OAAOK,EAAG,IAGfA,EAAI4H,EAAKiT,KAAK1a,OAAS,EAAQ,GAALH,EAAQA,IACvCD,EAAQC,GAGZ,IAAK,IAAIkyB,KAAMtqB,EAAKiT,KAChBoX,EAAIC,GAAMtqB,EAAKiT,KAAKqX,GAExBtI,EAAI/O,KAAOmB,EAAiB,GAAI4N,EAAI/O,KAAMoX,GACrCrI,EAAI/O,KAAK6J,GAAWf,sBAErBiG,EAAI/O,KAAK6J,GAAWf,oBAAsB,cAAgB+M,GAAgBlC,UAGlFkC,GAAgBlC,QAAU,QACnBkC,IAnLP,SAASA,MAsLb,IAAyDrW,GAArD8X,IACAzX,EAAkByX,GADmC9X,GAgCvDqW,IA3BEyB,GAA0BjzB,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GAC3D1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAI8uB,EAAqBtnB,EAAcc,SAAS8D,cAAgB,GAC5DoU,EAAmBhZ,EAAcc,SAASpG,YAAc,GAC5DirB,GAAgBE,4BAA4B7lB,EAAcoF,KAAM4T,EAAkBsO,GAClF,IAAIC,EAAKvnB,EAAcc,SACvB,GAAI1N,EAAUC,kBAAkBk0B,GAE5B,OADA1oB,EAAOrD,cAAc,qCACd,KAEX,IAAIwJ,EAAKuiB,EAAGviB,GACR6H,EAAc0a,EAAG9Y,OACjB+Y,EAAUD,EAAG3mB,KACbgT,EAAW2T,EAAG3T,SACdE,EAAUyT,EAAGzT,QACbE,EAAauT,EAAGE,aAChBxT,EAAasT,EAAGrT,KAChBtH,EAAS2a,EAAG7sB,YAAc6sB,EAAG7sB,WAAW+U,GAAc8X,EAAG7sB,WAAW+U,GAAc,MAClF3O,EAAW,IAAI+S,GAAqBhV,EAAQmG,EAAI6H,EAAa2a,EAAS5T,EAAUE,EAASE,EAAYpH,EAAQqH,EAAY+E,EAAkBsO,GAC3IliB,EAAO,IAAIsK,GAAKmE,GAAqBzZ,SAAU0G,GACnD,OAAO6kB,GAAgBG,eAAejnB,EAAQgV,GAAqBxD,aAAcrQ,EAAeoF,IAEpGgiB,GAA0BA,0BAA4B,IAAIA,GACnDA,IA7BP,SAASA,KACL,OAAkB,OAAX9X,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KA+BnE,IAAoDgb,GAAhDoY,IACA/X,EAAkB+X,GAD8BpY,GAiClDqW,IA5BE+B,GAAqBvzB,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GACtD1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAIwgB,EAAmB,GACnBsO,EAAqB,GACrBtnB,EAAca,WAAauP,EAAMhW,WACjC4e,EAAiC,eAAIhZ,EAAca,UAEnDb,EAAca,WAAauP,EAAMhW,UACjC4e,EAAmBhZ,EAAcc,SAASpG,YAAc,GACxD4sB,EAAqBtnB,EAAcc,SAAS8D,cAAgB,IAGxD5E,EAAcc,UACd6kB,GAAgBE,4BAA4B7lB,EAAcc,SAAUkY,EAAkBsO,GAI9F3B,GAAgBE,4BAA4B7lB,EAAcoF,KAAM4T,EAAkBsO,GAClF,IAAI9b,EAAYxL,EAAcc,SAASF,KACnCE,EAAW,IAAIsP,EAAMvR,EAAQ2M,EAAWwN,EAAkBsO,GAC1DliB,EAAO,IAAIsK,GAAKU,EAAMhW,SAAU0G,GACpC,OAAO6kB,GAAgBG,eAAejnB,EAAQuR,EAAMC,aAAcrQ,EAAeoF,IAErFsiB,GAAqBA,qBAAuB,IAAIA,GACzCA,IA9BP,SAASA,KACL,OAAkB,OAAXpY,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KAgCnE,IAAwDgb,GAApDqY,IACAhY,EAAkBgY,GADkCrY,GAiBtDqW,IAZEgC,GAAyBxzB,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GAC1D1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAI+uB,EAAKvnB,EAAcc,SACnBA,EAAW+P,GAAUC,oBAAoBjS,EAAQ0oB,GACjDniB,EAAO,IAAIsK,GAAKmB,GAAUzW,SAAU0G,GACxC,OAAO6kB,GAAgBG,eAAejnB,EAAQgS,GAAUR,aAAcrQ,EAAeoF,IAEzFuiB,GAAyBA,yBAA2B,IAAIA,GACjDA,IAdP,SAASA,KACL,OAAkB,OAAXrY,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KAgBnE,IAAqDgb,GAAjDsY,IACAjY,EAAkBiY,GAD+BtY,GAwBnDqW,IAnBEiC,GAAsBzzB,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GACvD1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAIqvB,EAAQ7nB,EAAcc,SAASpG,YAAc,GAC7Cse,EAAmB2M,GAAgBC,kBAAkB5lB,EAAcoF,MACvE4T,EAAmB/H,EAAiB,GAAI4W,EAAO7O,GAC/C,IAAIpY,EAAOZ,EAAcc,SAASF,KAC9BuiB,EAAUnjB,EAAcc,SAASqiB,QACjCC,EAAcpjB,EAAcc,SAASsiB,YACrCxY,EAAM5K,EAAcc,SAAS8J,IAC7ByI,EAAMrT,EAAcc,SAASuS,IAC7BvS,EAAW,IAAIyS,GAAO1U,EAAQ+B,EAAMuiB,EAASC,EAAaxY,EAAKyI,EAAK2F,GACpE5T,EAAO,IAAIsK,GAAK6D,GAAOnZ,SAAU0G,GACrC,OAAO6kB,GAAgBG,eAAejnB,EAAQ0U,GAAOlD,aAAcrQ,EAAeoF,IAEtFwiB,GAAsBA,sBAAwB,IAAIA,GAC3CA,IArBP,SAASA,KACL,OAAkB,OAAXtY,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KAuBnE,IAAuDgb,GAAnDwY,IACAnY,EAAkBmY,GADiCxY,GA6DrDqW,IAxDEmC,GAAwB3zB,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GACzD1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAGtG,IAAIob,OAAW/V,EACVzK,EAAUC,kBAAkB2M,EAAcc,WAC1C1N,EAAUC,kBAAkB2M,EAAcc,SAASpG,aACnDtH,EAAUC,kBAAkB2M,EAAcc,SAASpG,WAAWkZ,UAIzDxgB,EAAUC,kBAAkB2M,EAAcoF,OAC/ChS,EAAUC,kBAAkB2M,EAAcoF,KAAe,YAC1DwO,EAAW5T,EAAcoF,KAAe,gBACjCpF,EAAcoF,KAAe,WANpCwO,EAAW5T,EAAcc,SAASpG,WAAWkZ,gBACtC5T,EAAcc,SAASpG,WAAWkZ,UAO7C,IAEImU,EAFAR,EAAKvnB,EAAcc,SAGnBd,EAAcP,KAAOO,EAAcP,IAAImgB,OAAS5f,EAAcP,IAAImgB,MAAMmD,UACxEgF,EAAmB/nB,EAAcP,IAAImgB,MAAMmD,SAE/C,IAAI/d,EAAKuiB,EAAGviB,IAAM+iB,EACdnnB,EAAO2mB,EAAG3mB,KACVgD,EAAM2jB,EAAGrN,IACTxf,EAAa6sB,EAAG7sB,YAAc,GAC9BkK,EAAe2iB,EAAG3iB,cAAgB,GActC,GAZKxR,EAAUC,kBAAkBk0B,EAAGrH,UAChCxlB,EAAmB,OAAI6sB,EAAGrH,QAGzB9sB,EAAUC,kBAAkBk0B,EAAGS,YAChCttB,EAAqB,SAAI6sB,EAAGS,UAG3B50B,EAAUC,kBAAkBk0B,EAAGU,cAChCvtB,EAAuB,WAAI6sB,EAAGU,WAAWj0B,aAGxCZ,EAAUC,kBAAkBk0B,EAAG7sB,YAAa,CAC7C,IAAIwtB,EAAWX,EAAG7sB,WAClB,IAAK,IAAIiI,KAAOulB,EACRA,EAAS9mB,eAAeuB,KACxBjI,EAAWiI,GAAOulB,EAASvlB,IAIvC,IAAI7B,EAAW,IAAI4S,GAAS7U,EAAQ+B,EAAMgD,EAAKgQ,EAAUlZ,EAAYkK,EAAcI,GAC/EI,EAAO,IAAIsK,GAAKgE,GAAStZ,SAAU0G,GACvC,OAAO6kB,GAAgBG,eAAejnB,EAAQ6U,GAASrD,aAAcrQ,EAAeoF,IAExF0iB,GAAwBA,wBAA0B,IAAIA,GAC/CA,IA1DP,SAASA,KACL,OAAkB,OAAXxY,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KA4DnE,IAAkEgb,GAA9D6Y,IACAxY,EAAkBwY,GAD4C7Y,GAqBhEqW,IAhBEwC,GAAmCh0B,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GACpE1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAI+uB,EAAKvnB,EAAcc,SACnBF,EAAO2mB,EAAG3mB,KACVgD,EAAM2jB,EAAGrN,KAAOqN,EAAG3jB,IACnBlJ,EAAa6sB,EAAG7sB,WAChBkK,EAAe2iB,EAAG3iB,aAClB9D,EAAW,IAAI4T,GAAoB7V,EAAQ+B,EAAMgD,OAAK/F,EAAWnD,EAAYkK,EAAc2iB,GAC3FniB,EAAO,IAAIsK,GAAKgF,GAAoBta,SAAU0G,GAClD,OAAO6kB,GAAgBG,eAAejnB,EAAQ6V,GAAoBrE,aAAcrQ,EAAeoF,IAEnG+iB,GAAmCA,mCAAqC,IAAIA,GACrEA,IAlBP,SAASA,KACL,OAAkB,OAAX7Y,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KAoBnE,IAAoDgb,GAAhD8Y,IACAzY,EAAkByY,GAD8B9Y,GAoBlDqW,IAfEyC,GAAqBj0B,UAAUkzB,OAAS,SAAUxoB,EAAQmB,GACtD1L,KAAKomB,QAAU7b,EACXzL,EAAUC,kBAAkB2M,EAAcc,WAC1CxM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB+C,yBAA0B,0CAEtG,IAAIoC,EAAUoF,EAAcc,SAASlG,QACjCuW,EAAgBnR,EAAcc,SAASqQ,cACvC6H,EAAmB2M,GAAgBC,kBAAkB5lB,EAAcoF,MACnEyiB,EAAQ5W,EAAiB,GAAI+H,EAAkBhZ,EAAcc,SAASpG,YACtEoG,EAAW,IAAI0T,GAAM3V,EAAQjE,EAASuW,EAAe0W,GACrDziB,EAAO,IAAIsK,GAAK8E,GAAMpa,SAAU0G,GACpC,OAAO6kB,GAAgBG,eAAejnB,EAAQ2V,GAAMnE,aAAcrQ,EAAeoF,IAErFgjB,GAAqBA,qBAAuB,IAAIA,GACzCA,IAjBP,SAASA,KACL,OAAkB,OAAX9Y,IAAmBA,GAAOtQ,MAAM1K,KAAMyN,YAAczN,KCtYnE,IAAI+zB,IAOAA,GAAWl0B,UAAUm0B,UAAY,SAAUh1B,GACvC,IAAIi1B,EAASj0B,KAAKk0B,iBAAiBl1B,EAAO,QAC1C,OAAOwH,KAAKC,UAAUwtB,IAE1BF,GAAWl0B,UAAUq0B,iBAAmB,SAAUC,EAAQ7nB,GACtD,IAAI8nB,EAAyB,uBACzBH,EAAS,GACb,IAAKE,EAED,OADAn0B,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiD,sBAAuB,0DAA2D,CAAEkI,KAAMA,IAAQ,GACnK2nB,EAEX,GAAIE,EAAOC,GAEP,OADAp0B,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBmD,0BAA2B,uDAAwD,CAAEgI,KAAMA,IAAQ,GACnK2nB,EAEX,IAAKE,EAAO1Y,eAAgB,CAExB,GAAa,iBAATnP,EACA2nB,EAASj0B,KAAKq0B,oBAAoBF,EAAQ,SAAU7nB,QAEnD,GAAa,eAATA,EACL2nB,EAASj0B,KAAKq0B,oBAAoBF,EAAQ,SAAU7nB,QAEnD,GAAa,SAATA,EACL2nB,EAASj0B,KAAKq0B,oBAAoBF,EAAQ,SAAU7nB,QAEnD,GAAI4E,EAAKuD,QAAQ0f,GAClBF,EAASj0B,KAAKs0B,gBAAgBH,EAAQ7nB,OAErC,CACDtM,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBkD,qCAAsC,2EAA4E,CAAEiI,KAAMA,IAAQ,GACzM,IAEI9F,KAAKC,UAAU0tB,GACfF,EAASE,EAEb,MAAOhkB,GAEHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiD,sBAAwB+L,GAA2B,mBAAfA,EAAEzQ,SAA2ByQ,EAAEzQ,WAAa,2BAA4B,MAAM,IAGlM,OAAOu0B,EAGX,IAAK,IAAIzlB,KADT2lB,EAAOC,IAA0B,EACfD,EAAO1Y,eAAgB,CACrC,IAeIxM,EAfAslB,EAAWJ,EAAO1Y,eAAejN,GACjCgmB,EAAkC,mBAAbD,EAA4BA,IAAannB,EAAUsO,SAAa6Y,EAAWnnB,EAAUsO,SAC1G+Y,EAAgC,mBAAbF,EAA4BA,IAAannB,EAAUuO,OAAW4Y,EAAWnnB,EAAUuO,OACtGlH,EAAU8f,EAAWnnB,EAAUhE,MAC/BsrB,OAA8BnrB,IAAlB4qB,EAAO3lB,GACnBmmB,EAAoC,iBAAlBR,EAAO3lB,IAAyC,OAAlB2lB,EAAO3lB,IACvDgmB,GAAeE,GAAcjgB,EAK7BggB,QAoBUlrB,KAZN0F,EAHJ0lB,EACIlgB,EAEQzU,KAAKs0B,gBAAgBH,EAAO3lB,GAAQA,GAIpCxO,KAAKk0B,iBAAiBC,EAAO3lB,GAAQA,GAKzC2lB,EAAO3lB,MAIfylB,EAAOzlB,GAASS,GAzBhBjP,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmByB,kCAAmC,wFAAyF,CAAE4L,MAAOA,EAAOlC,KAAMA,IA6BlO,cADO6nB,EAAOC,GACPH,GAEXF,GAAWl0B,UAAUy0B,gBAAkB,SAAUM,EAAStoB,GACtD,IAAI2nB,OAAS1qB,EACb,GAAMqrB,EACF,GAAK1jB,EAAKuD,QAAQmgB,GAGb,CACDX,EAAS,GACT,IAAK,IAAItzB,EAAI,EAAGA,EAAIi0B,EAAQ9zB,OAAQH,IAAK,CACrC,IAAIwzB,EAASS,EAAQj0B,GACjB4H,EAAOvI,KAAKk0B,iBAAiBC,EAAQ7nB,EAAO,IAAM3L,EAAI,KAC1DszB,EAAO/zB,KAAKqI,SAPhBvI,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBuD,eAAgB,yFAA0F,CAAE4H,KAAMA,IAAQ,GAW1M,OAAO2nB,GAEXF,GAAWl0B,UAAUw0B,oBAAsB,SAAU/lB,EAAKumB,EAAcvoB,GACpE,IAAI2nB,OAAS1qB,EACb,GAAI+E,EAEA,IAAK,IAAIE,KADTylB,EAAS,GACS3lB,EAAK,CACnB,IAAIW,EAAQX,EAAIE,GAChB,GAAqB,WAAjBqmB,OACctrB,IAAV0F,EACAglB,EAAOzlB,GAAS,YAED,OAAVS,EACLglB,EAAOzlB,GAAS,OAEVS,EAAMvP,SAIZu0B,EAAOzlB,GAASS,EAAMvP,WAHtBu0B,EAAOzlB,GAAS,iDAMnB,GAAqB,WAAjBqmB,EACL,QAActrB,IAAV0F,EACAglB,EAAOzlB,GAAS,iBAEf,GAAc,OAAVS,EACLglB,EAAOzlB,GAAS,WAEf,CACD,IAAIuC,EAAM+jB,WAAW7lB,GACjBiH,MAAMnF,GACNkjB,EAAOzlB,GAAS,MAGhBylB,EAAOzlB,GAASuC,OAKxBkjB,EAAOzlB,GAAS,kBAAoBlC,EAAO,uBAC3CtM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAUgN,EAAOzlB,GAAQ,MAAM,GAItF,OAAOylB,GAEJF,IAvJP,SAASA,GAAWxpB,GAChBvK,KAAKomB,QAAU7b,ECGnB,SAASwqB,KACL/0B,KAAKg1B,eAAgB,EACrB,IAC0B,oBAAXljB,OACP9R,KAAKi1B,aAAc,EAEdnjB,QAAUA,OAAOuF,kBACtBvF,OAAOuF,iBAAiB,SAAUrX,KAAKk1B,WAAW9F,KAAKpvB,OAAO,GAC9D8R,OAAOuF,iBAAiB,UAAWrX,KAAKm1B,YAAY/F,KAAKpvB,OAAO,GAChEA,KAAKi1B,aAAc,GAEd3hB,UAAYA,SAAS8hB,MAC1B9hB,SAAS8hB,KAAKC,SAAWr1B,KAAKk1B,WAAW9F,KAAKpvB,MAC9CsT,SAAS8hB,KAAKE,UAAYt1B,KAAKm1B,YAAY/F,KAAKpvB,MAChDA,KAAKi1B,aAAc,GAEd3hB,UACLA,SAAS+hB,SAAWr1B,KAAKk1B,WAAW9F,KAAKpvB,MACzCsT,SAASgiB,UAAYt1B,KAAKm1B,YAAY/F,KAAKpvB,MAC3CA,KAAKi1B,aAAc,GAInBj1B,KAAKi1B,aAAc,EAG3B,MAAO9kB,GAEHnQ,KAAKi1B,aAAc,GA4BxB,IAAIM,IAzBPR,GAAgBl1B,UAAUq1B,WAAa,WACnCl1B,KAAKg1B,eAAgB,GAEzBD,GAAgBl1B,UAAUs1B,YAAc,WACpCn1B,KAAKg1B,eAAgB,GAEzBD,GAAgBl1B,UAAU21B,SAAW,WACjC,OAAIx1B,KAAKi1B,YACEj1B,KAAKg1B,gBAEPnf,YAAc/W,EAAUC,kBAAkB8W,UAAU4f,UAClD5f,UAAU4f,QAOzBV,GAAgBl1B,UAAU61B,UAAY,WAClC,OAAQ11B,KAAKw1B,YAEjBT,GAAgBQ,QAAU,IAAIR,GACvBA,IAG0BQ,QC7DjCI,IAGAA,GAAuB91B,UAAU+1B,iBAAmB,SAAUvnB,GAE1D,OADYrO,KAAK61B,YAAYxnB,GAAOsnB,GAAuBG,cAC5C,KAEnBH,GAAuB91B,UAAUg2B,YAAc,SAAU72B,GACrD,GAAa,IAATA,EACA,OAAO,EAEX,KAAOA,EAAM8B,OAAS60B,GAAuBI,kBACzC/2B,EAAQA,EAAM2L,OAAO3L,GAIzB,IADA,IAAIg3B,EAAO,KACFr1B,EAAI,EAAGA,EAAI3B,EAAM8B,SAAUH,EAChCq1B,GAASA,GAAQ,GAAKA,EAAQh3B,EAAMi3B,WAAWt1B,GAG/Cq1B,GAAcA,EAElB,OAAOx2B,KAAK02B,IAAIF,IAGpBL,GAAuBG,cAAgB,WAEvCH,GAAuBI,iBAAmB,EACnCJ,IA3BP,SAASA,MCCb,IAAIQ,IAKAA,GAAuBt2B,UAAUu2B,iBAAmB,SAAU7tB,GAkB1D,OAhBIA,EAAKiT,MAAQjT,EAAKiT,KAAKxb,KAAKiT,KAAKwQ,QACzBzjB,KAAKq2B,kBAAkBT,iBAAiBrtB,EAAKiT,KAAKxb,KAAKiT,KAAKwQ,SAE/Dlb,EAAK4C,KAAO5C,EAAK4C,IAAIwmB,MAAQppB,EAAK4C,IAAIwmB,KAAKjhB,GACxC1Q,KAAKq2B,kBAAkBT,iBAAiBrtB,EAAK4C,IAAIwmB,KAAKjhB,IAEzDnI,EAAKiT,MAAQjT,EAAKiT,KAAKxb,KAAKiT,KAAK6P,aAC9B9iB,KAAKq2B,kBAAkBT,iBAAiBrtB,EAAKiT,KAAKxb,KAAKiT,KAAK6P,cAE/Dva,EAAK4C,KAAO5C,EAAK4C,IAAIqjB,gBAAkBjmB,EAAK4C,IAAIqjB,eAAeC,QAC5DzuB,KAAKq2B,kBAAkBT,iBAAiBrtB,EAAK4C,IAAIqjB,eAAeC,SAI/C,IAAhBjvB,KAAKC,UAIf02B,IAxBP,SAASA,KACLn2B,KAAKq2B,kBAAoB,IAAIV,GAC7B31B,KAAKiT,KAAO,IAAIgO,GCFxB,IAAIqV,IAoBAA,GAAOz2B,UAAU02B,YAAc,SAAUtH,GACrC,IAAI/E,EAAqBlqB,KAAKub,WAE9B,OAAI2O,MAAAA,GAAyF,KAAtBA,GAG9D+E,EAAS1iB,WAAa0S,GAAOnZ,UAIxB9F,KAAKw2B,uBAAuBJ,iBAAiBnH,GAAY/E,GAGpEoM,IAhCP,SAASA,GAAO/a,EAAYhR,GAExBvK,KAAK81B,cAAgB,WACjBh3B,EAAUC,kBAAkBwL,GAC5BvK,KAAKomB,QAAU,IAAI1f,EAGnB1G,KAAKomB,QAAU7b,GAEF,IAAbgR,GAAoBA,EAAa,KACjCvb,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB2D,qBAAsB,8IAA+I,CAAE2xB,aAAclb,IAAc,GAC1Qvb,KAAKub,WAAa,KAEtBvb,KAAKub,WAAaA,EAClBvb,KAAKw2B,uBAAyB,IAAIL,OCZtCO,IASAA,GAAO72B,UAAU82B,MAAQ,WACrB,MAAM,IAAI7sB,MAAM,4BAEpB4sB,GAAO72B,UAAU+2B,OAAS,WACtB,MAAM,IAAI9sB,MAAM,4BAEpB4sB,GAAO72B,UAAUsmB,MAAQ,WACrB,IACInmB,KAAK62B,cAET,MAAO1mB,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBuB,YAAa,kDAAoDwO,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAGlMumB,GAAO72B,UAAUi3B,SAAW,WACxB,MAAM,IAAIhtB,MAAM,4BAEpB4sB,GAAO72B,UAAUmJ,WAAa,SAAUf,EAAQgB,EAAMC,GAClD,IAAIzI,EAAQT,KACZA,KAAKomB,QAAUnd,EAAKsB,OACpBvK,KAAK+2B,YAAc,IAAIhD,GAAW9qB,EAAKsB,QACvCvK,KAAKg3B,mBAAqB,EAC1Bh3B,KAAKi3B,SAAW,KAChBj3B,KAAKk3B,UAAY,EACjBl3B,KAAKm3B,QAAU,KACf,IAAIC,EAAgBV,GAAOW,sCAEb,SAAV32B,EAAoB8N,GACpB5N,EAAOkvB,QAAQthB,GAAS,WAAc,OAAOsS,GAAqBC,UAAU9Y,EAAQuG,EAAO/N,EAAMoJ,WAAYutB,EAAc5oB,OAF/HxO,KAAK8vB,QAAU4G,GAAOY,oCACtB,IAGI12B,EAASZ,KACb,IAAK,IAAIwO,KAAS4oB,EACd12B,EAAQ8N,GAEZxO,KAAK0vB,QAAW1vB,KAAK8vB,QAAQyH,4BAA8BrmB,EAAK4B,uBAC1D,IAAIqd,GAAyBnwB,KAAKomB,QAASpmB,KAAK8vB,SAAW,IAAIP,GAAgBvvB,KAAK8vB,SAC1F9vB,KAAKw3B,QAAU,IAAIlB,GAAOt2B,KAAK8vB,QAAQ5F,qBAAsBlqB,KAAKomB,UAC7DpmB,KAAK8vB,QAAQ2H,uBAAyBvmB,EAAKoG,uBAC5CtX,KAAKm3B,QAAUn3B,KAAK03B,cAGS,oBAAlBC,iBAEH,oBADU,IAAIA,gBAEd33B,KAAKm3B,QAAUn3B,KAAK43B,WACpB53B,KAAK63B,0BAA2B,GAED,oBAAnBC,iBACZ93B,KAAKm3B,QAAUn3B,KAAK+3B,cAKpCrB,GAAO72B,UAAUyI,iBAAmB,SAAUoD,GAC1C,IAAIjL,EAAQT,KACZ,IAEI,GAAIA,KAAK8vB,QAAQkI,mBAEb,OAGJ,IAAKtsB,EAED,YADA1L,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBQ,yBAA0B,+BAItG,GAAI+J,EAAcc,WAAad,EAAca,SAEzC,YADAvM,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBuE,aAAc,uDAQ1F,GALKgG,EAAca,WAEfb,EAAca,SAAW,cAGxBvM,KAAKm3B,QAEN,YADAn3B,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB6B,qBAAsB,8BAIlG,IAAKhD,KAAKi4B,aAAavsB,GAGnB,YADA1L,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBkC,2BAA4B,8CAA+C,CAAE60B,WAAYl4B,KAAKw3B,QAAQjc,aAI7K7P,EAAc8P,KAAO9P,EAAc8P,MAAQ,GAC3C9P,EAAc8P,KAAe,WAAIxb,KAAKw3B,QAAQjc,WAGlD,IAAI4c,EAAezB,GAAO0B,kBAAkB1sB,EAAe1L,KAAK8vB,QAAQ1lB,qBAAsBpK,KAAKomB,SACnG,IAAK+R,EAED,YADAn4B,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBgD,oBAAqB,4CAGjG,IAAIk0B,GAAkB,EAkBtB,GAhBI3sB,EAAc8P,MAAQ9P,EAAc8P,KAAKN,KACzCxP,EAAc8P,KAAKN,GAAezS,QAAQ,SAAU6vB,GAChD,IACQA,IAAuC,IAA3BA,EAASH,KACrBE,GAAkB,EAClB53B,EAAM2lB,QAAQlf,cAAc,4CAGpC,MAAOiJ,GAGH1P,EAAM2lB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiE,2BAA4B,0EAA4E8L,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAAM,aAGzOzE,EAAc8P,KAAKN,IAE1Bmd,EACA,OAGJ,IAAI5I,EAAUzvB,KAAK+2B,YAAY/C,UAAUmE,GAErCI,EAAgBv4B,KAAK0vB,QAAQE,WAC7B4I,EAAQx4B,KAAK0vB,QAAQG,cAAc0I,GACnCC,GAAUA,EAAM13B,OAAS2uB,EAAQ3uB,OAASd,KAAK8vB,QAAQ2I,uBACvDz4B,KAAK62B,cAGT72B,KAAK0vB,QAAQF,QAAQC,GAErBzvB,KAAK04B,cAET,MAAOvoB,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBa,8BAA+B,gFAAkFkP,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAGxOrR,EAAUC,kBAAkBiB,KAAK4qB,cAClC5qB,KAAK4qB,YAAYtiB,iBAAiBoD,IAG1CgrB,GAAO72B,UAAUkK,cAAgB,SAAU8gB,GACvC7qB,KAAK4qB,YAAcC,GAKvB6L,GAAO72B,UAAU84B,qBAAuB,SAAUC,EAAKnJ,EAASoJ,GAC5D,GAAuB,IAAnBD,EAAIE,WAAkB,CACtB,IAAI9P,EAAW,KACVhpB,KAAK+4B,SACN/P,EAAWhpB,KAAKg5B,eAAeJ,EAAIK,cAAgBL,EAAI5P,YACvCA,EAASoE,QACrBptB,KAAK+4B,OAAS/P,EAASoE,QAG1BwL,EAAIM,OAAS,KAAqB,KAAdN,EAAIM,SAAiC,IAAfN,EAAIM,QAC1Cl5B,KAAK8vB,QAAQqJ,mBAAqBn5B,KAAKo5B,aAAaR,EAAIM,SACzDl5B,KAAKq5B,eAAe5J,GACpBzvB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmByC,mBAAoB,mBACpEg1B,EAAIM,OAAS,wBAA0BzJ,EAAQ3uB,OAAS,YAG/Ed,KAAKs5B,SAAS7J,EAASzvB,KAAKu5B,uBAAuBX,IAGlDrD,GAAQG,YAER11B,KAAK8vB,QAAQqJ,oBAEdn5B,KAAKq5B,eAAe5J,EADW,IAE/BzvB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmByC,mBAAoB,8BAAgCg1B,EAAIM,OAAS,qBAAuB3D,GAAQG,YAAc,wBAA0BjG,EAAQ3uB,OAAS,YAIjN,MAAf83B,EAAIM,QACClQ,IACDA,EAAWhpB,KAAKg5B,eAAeJ,EAAIK,cAAgBL,EAAI5P,WAEvDA,IAAahpB,KAAK8vB,QAAQqJ,kBAC1Bn5B,KAAKw5B,kBAAkB/J,EAASzG,GAGhChpB,KAAKs5B,SAAS7J,EAASzvB,KAAKu5B,uBAAuBX,MAIvD54B,KAAKg3B,mBAAqB,EAC1Bh3B,KAAKy5B,WAAWhK,EAASoJ,MASzCnC,GAAO72B,UAAUg3B,YAAc,SAAU6C,QACvB,IAAVA,IAAoBA,GAAQ,GAChC,IAEI,GAAK15B,KAAK8vB,QAAQkI,mBAUdh4B,KAAK0vB,QAAQC,YAVqB,CAClC,GAA2B,EAAvB3vB,KAAK0vB,QAAQ5Q,QAAa,CAC1B,IAAI2Q,EAAUzvB,KAAK0vB,QAAQE,WAE3B5vB,KAAKm3B,QAAQ1H,EAASiK,GAG1B15B,KAAKk3B,WAAa,IAAIprB,KAK1B6tB,aAAa35B,KAAK45B,gBAClB55B,KAAK45B,eAAiB,KACtB55B,KAAKi3B,SAAW,KAEpB,MAAO9mB,KAEEe,EAAKwE,gBAAwC,EAAtBxE,EAAKwE,iBAC7B1V,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmByC,mBAAoB,+DAAiEsN,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,OAO1NumB,GAAO72B,UAAUy5B,SAAW,SAAU7J,EAASnpB,EAASykB,GACpD/qB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB2B,QAAS,4BAA6B,CAAEwD,QAASA,IACxHtG,KAAK0vB,QAAQQ,UAAUT,IAK3BiH,GAAO72B,UAAU25B,kBAAoB,SAAU/J,EAASoK,GAKpD,IAJA,IAAIC,EAAS,GACTC,EAAQ,GAGHzQ,EAAK,EAAG0Q,EADJH,EAAQI,OAAOC,UACQ5Q,EAAK0Q,EAASl5B,OAAQwoB,IAAM,CAC5D,IAAI1S,EAAQojB,EAAS1Q,GACjB6Q,EAAY1K,EAAQnvB,OAAOsW,EAAMxW,MAAO,GAAG,GAC3CJ,KAAKo5B,aAAaxiB,EAAMwjB,YACxBL,EAAM75B,KAAKi6B,GAIXL,EAAO55B,KAAKi6B,GAGC,EAAjB1K,EAAQ3uB,QACRd,KAAKy5B,WAAWhK,EAASoK,EAAQQ,eAEjB,EAAhBP,EAAOh5B,QACPd,KAAKs5B,SAASQ,EAAQ95B,KAAKu5B,uBAAuB,KAAM,CAAC,kBAAmBM,EAAQQ,cAAe,KAAMR,EAAQS,eAAetK,KAAK,OAEtH,EAAf+J,EAAMj5B,SACNd,KAAKq5B,eAAeU,GACpB/5B,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmByC,mBAAoB,+BACvE6rB,EAAQ3uB,OAAS,aAAeg5B,EAAOh5B,OACvD,wBAA0Bi5B,EAAMj5B,OAAS,WAAa+4B,EAAQS,cAAgB,YAM1F5D,GAAO72B,UAAU45B,WAAa,SAAUhK,EAASoJ,GAC7C74B,KAAK0vB,QAAQQ,UAAUT,IAK3BiH,GAAO72B,UAAU06B,WAAa,SAAUC,EAAK/K,GACzC,IAAI+K,GAAQA,EAAIvB,aAAe,IAAO,OAA8B,KAArBuB,EAAIvB,aAI9C,CACD,IAAIY,EAAU75B,KAAKg5B,eAAewB,EAAIvB,cAClCY,GAAWA,EAAQS,eAAiBT,EAAQS,cAAgBT,EAAQQ,gBAChEr6B,KAAK8vB,QAAQqJ,kBACjBn5B,KAAKw5B,kBAAkB/J,EAASoK,GAGhC75B,KAAKs5B,SAAS7J,EAASzvB,KAAKy6B,uBAAuBD,SAVvDx6B,KAAKg3B,mBAAqB,EAC1Bh3B,KAAKy5B,WAAWhK,EAAS,IAajCiH,GAAO0B,kBAAoB,SAAUsC,EAAM9uB,EAAMrB,GAC7C,IAAI0kB,EAOJ,QAFIA,EAJArjB,IAAS8uB,EAAK9uB,MAAS9M,EAAUC,kBAAkB6M,GAIxC8uB,EAHA/d,EAAiB,GAAI+d,EAAM,CAAE9uB,KAAMA,KAKjCW,UACb,KAAKuP,EAAMhW,SACP,OAAOstB,GAAqBA,qBAAqBL,OAAOxoB,EAAQ0kB,GACpE,KAAK/O,GAAMpa,SACP,OAAOguB,GAAqBA,qBAAqBf,OAAOxoB,EAAQ0kB,GACpE,KAAK7P,GAAStZ,SACV,OAAO0tB,GAAwBA,wBAAwBT,OAAOxoB,EAAQ0kB,GAC1E,KAAK7O,GAAoBta,SACrB,OAAO+tB,GAAmCA,mCAAmCd,OAAOxoB,EAAQ0kB,GAChG,KAAK1S,GAAUzW,SACX,OAAOutB,GAAyBA,yBAAyBN,OAAOxoB,EAAQ0kB,GAC5E,KAAKhQ,GAAOnZ,SACR,OAAOwtB,GAAsBA,sBAAsBP,OAAOxoB,EAAQ0kB,GACtE,KAAK1P,GAAqBzZ,SACtB,OAAOgtB,GAA0BA,0BAA0BC,OAAOxoB,EAAQ0kB,GAC9E,QACI,OAAOmE,GAAqBA,qBAAqBL,OAAOxoB,EAAQ0kB,KAG5EyH,GAAOW,oCAAsC,WAEzC,MAAO,CACHhlB,YAAa,WAAc,MAAO,iDAClC0d,sBAAuB,WAAc,OAAO,GAC5C4K,iBAAkB,WAAc,OAAO,MACvClC,oBAAqB,WAAc,OAAO,QAC1CT,iBAAkB,WAAc,OAAO,GACvCT,2BAA4B,WAAc,OAAO,GACjD4B,gBAAiB,WAAc,OAAO,GACtC1B,oBAAqB,WAAc,OAAO,GAC1CrtB,mBAAoB,aACpBkgB,WAAY,aACZJ,mBAAoB,WAAc,OAAO,OAGjDwM,GAAOY,kCAAoC,WACvC,MAAO,CACHjlB,iBAAa9I,EACbwmB,2BAAuBxmB,EACvBoxB,sBAAkBpxB,EAClBkvB,yBAAqBlvB,EACrByuB,sBAAkBzuB,EAClBguB,gCAA4BhuB,EAC5B4vB,qBAAiB5vB,EACjBkuB,yBAAqBluB,EACrBa,wBAAoBb,EACpB+gB,gBAAY/gB,EACZ2gB,wBAAoB3gB,IAG5BmtB,GAAO72B,UAAUo4B,aAAe,SAAUhJ,GACtC,OAAOjvB,KAAKw3B,QAAQjB,YAAYtH,IASpCyH,GAAO72B,UAAU63B,cAAgB,SAAUjI,EAASmL,GAChD,IAAItrB,EAAMtP,KAAK8vB,QAAQzd,cACnBmmB,EAAQx4B,KAAK0vB,QAAQG,cAAcJ,GAGnCoL,EAAiB,IAAIC,KAAK,CAACtC,GAAQ,CAAE5Y,KAAM,6BAElC/J,UAAU0B,WAAWjI,EAAKurB,IAEnC76B,KAAK0vB,QAAQO,WAAWR,GAExBzvB,KAAKy5B,WAAWhK,EAASA,EAAQ3uB,UAGjCd,KAAK43B,WAAWnI,GAAS,GACzBzvB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmByC,mBAAoB,yEAQnG8yB,GAAO72B,UAAU+3B,WAAa,SAAUnI,EAASmL,GAC7C,IAAIn6B,EAAQT,KACR44B,EAAM,IAAIjB,eACdiB,EAAI3d,IAAwB,EAC5B2d,EAAImC,KAAK,OAAQ/6B,KAAK8vB,QAAQzd,cAAeuoB,GAC7ChC,EAAIoC,iBAAiB,eAAgB,oBAEjC9pB,EAAKkB,sCAAsCpS,KAAK8vB,QAAQzd,gBACxDumB,EAAIoC,iBAAiBrtB,EAAeK,iBAAkBL,EAAeM,8BAEzE2qB,EAAIqC,mBAAqB,WAAc,OAAOx6B,EAAMk4B,qBAAqBC,EAAKnJ,EAASA,EAAQ3uB,SAC/F83B,EAAI9K,QAAU,SAAU/C,GAAS,OAAOtqB,EAAM64B,SAAS7J,EAAShvB,EAAM84B,uBAAuBX,GAAM7N,IAEnG,IAAIyN,EAAQx4B,KAAK0vB,QAAQG,cAAcJ,GACvCmJ,EAAIsC,KAAK1C,GACTx4B,KAAK0vB,QAAQO,WAAWR,IAM5BiH,GAAO72B,UAAUm5B,eAAiB,SAAUhQ,GACxC,IACI,GAAIA,GAAyB,KAAbA,EAAiB,CAC7B,IAAI1U,EAAS9N,KAAK8hB,MAAMU,GACxB,GAAI1U,GAAUA,EAAOgmB,eAAiBhmB,EAAOgmB,eAAiBhmB,EAAO+lB,eACjE/lB,EAAOgmB,cAAgBhmB,EAAO+lB,eAAiB/lB,EAAO2lB,OAAOn5B,OAC7D,OAAOwT,GAInB,MAAOnE,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmB4C,uBAAwB,8BAAgCmN,EAAKuB,iBAAiBtC,GAAI,CACtJ6Y,SAAUA,IAGlB,OAAO,MAMX0N,GAAO72B,UAAUw5B,eAAiB,SAAU5J,EAAS0L,GAEjD,QADqB,IAAjBA,IAA2BA,EAAe,GACzC1L,GAA8B,IAAnBA,EAAQ3uB,OAAxB,CAGAd,KAAK0vB,QAAQQ,UAAUT,GACvBzvB,KAAKg3B,qBACL,IAAK,IAAI1N,EAAK,EAAG8R,EAAY3L,EAASnG,EAAK8R,EAAUt6B,OAAQwoB,IAAM,CAC/D,IAAI/gB,EAAO6yB,EAAU9R,GACrBtpB,KAAK0vB,QAAQF,QAAQjnB,GAGzBvI,KAAKq7B,cAAcF,GACnBn7B,KAAK04B,gBAKThC,GAAO72B,UAAUw7B,cAAgB,SAAUF,GACvC,IACIG,EACJ,GAAIt7B,KAAKg3B,oBAAsB,EAC3BsE,EAHqB,OAKpB,CACD,IAAIC,GAAe/7B,KAAKg8B,IAAI,EAAGx7B,KAAKg3B,oBAAsB,GAAK,EAE3DyE,EAAej8B,KAAKgV,MAAMhV,KAAKC,SAAW87B,EARzB,IAQ6D,EAClFE,GAAeN,EACfG,EAAiB97B,KAAKuf,IAAIvf,KAAK8W,IAAImlB,EAAc,MAV5B,IAazB,IAAIC,EAAqB5vB,KAAK4O,MAA0B,IAAjB4gB,EAEvCt7B,KAAKi3B,SAAWyE,GAKpBhF,GAAO72B,UAAU64B,YAAc,WAC3B,IAAIj4B,EAAQT,KACZ,IAAKA,KAAK45B,eAAgB,CACtB,IAAI+B,EAAgB37B,KAAKi3B,SAAWz3B,KAAKuf,IAAI,EAAG/e,KAAKi3B,SAAWnrB,KAAK4O,OAAS,EAC1EkhB,EAAap8B,KAAKuf,IAAI/e,KAAK8vB,QAAQ6K,mBAAoBgB,GAC3D37B,KAAK45B,eAAiB/4B,WAAW,WAC7BJ,EAAMo2B,eACP+E,KAOXlF,GAAO72B,UAAUu5B,aAAe,SAAUgB,GACtC,OAAqB,KAAdA,GACc,KAAdA,GACc,KAAdA,GACc,KAAdA,GAEX1D,GAAO72B,UAAU05B,uBAAyB,SAAUX,EAAKtyB,GACrD,OAAIsyB,EACO,yBAA2BA,EAAIM,OAAS,aAAeN,EAAIK,cAAgBL,EAAI5P,UAAY,GAE/F1iB,GAYXowB,GAAO72B,UAAUk4B,WAAa,SAAUtI,EAASmL,GAC7C,IAAIn6B,EAAQT,KACRw6B,EAAM,IAAI1C,eACd0C,EAAIqB,OAAS,WAAc,OAAOp7B,EAAM85B,WAAWC,EAAK/K,IACxD+K,EAAI1M,QAAU,SAAU/C,GAAS,OAAOtqB,EAAM64B,SAAS7J,EAAShvB,EAAMg6B,uBAAuBD,GAAMzP,IAGnG,IAAI+Q,EAAkBhqB,OAAO8B,UAAY9B,OAAO8B,SAASC,SACzD,GAAmE,IAA/D7T,KAAK8vB,QAAQzd,cAAc0pB,YAAYD,EAAiB,GAIxD,OAHA97B,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmByC,mBAAoB,0GAE3F5D,KAAK0vB,QAAQC,QAGjB,IAAItd,EAAcrS,KAAK8vB,QAAQzd,cAAcjT,QAAQ,aAAc,IACnEo7B,EAAIO,KAAK,OAAQ1oB,GAEjB,IAAImmB,EAAQx4B,KAAK0vB,QAAQG,cAAcJ,GACvC+K,EAAIU,KAAK1C,GACTx4B,KAAK0vB,QAAQO,WAAWR,IAE5BiH,GAAO72B,UAAU46B,uBAAyB,SAAUD,EAAKl0B,GACrD,OAAIk0B,EACO,2BAA6BA,EAAIvB,cAAgB,GAErD3yB,GAEJowB,IAhhBP,SAASA,KACL12B,KAAK2J,SAAW,KAChB3J,KAAK6J,WAAa0b,GAIlBvlB,KAAK63B,0BAA2B,ECXxC,IAAImE,GACA,aAKAC,IAsBAA,GAAgBp8B,UAAUq8B,OAAS,WAC1Bl8B,KAAKm8B,iBAAiBzrB,IACvB1Q,KAAKo8B,6BAET,IAAI1hB,EAAMJ,EAAcC,MACpB8hB,EAAqB3hB,EAAM1a,KAAKm8B,iBAAiBG,gBAAkBt8B,KAAKiI,OAAO8hB,sBAC/EwS,EAAiB7hB,EAAM1a,KAAKm8B,iBAAiBK,YAAcx8B,KAAKiI,OAAO6hB,mBAEvEuS,GAAsBE,EAEtBv8B,KAAKy8B,UAIAz8B,KAAK08B,wBAA0BhiB,EAAM1a,KAAK08B,uBAAyBT,GAAgBU,wBACpF38B,KAAKm8B,iBAAiBK,YAAc9hB,EACpC1a,KAAKwT,UAAUxT,KAAKm8B,iBAAiBzrB,GAAI1Q,KAAKm8B,iBAAiBG,gBAAiBt8B,KAAKm8B,iBAAiBK,eASlHP,GAAgBp8B,UAAU+8B,OAAS,WAC/B58B,KAAK2S,WAAW3S,KAAKm8B,iBAAiBzrB,GAAI1Q,KAAKm8B,iBAAiBG,gBAAiBt8B,KAAKm8B,iBAAiBK,cAM3GP,GAAgBp8B,UAAUu8B,2BAA6B,WACnD,IAAI7oB,EAASrC,EAAK8C,UAAUhU,KAAKomB,QAASpmB,KAAK68B,sBAC/C,GAAItpB,GAAkC,mBAAjBA,EAAOY,MACxBnU,KAAK88B,mCAAmCvpB,OAEvC,CAKD,IAAI1B,EAAUX,EAAKsB,WAAWxS,KAAKomB,QAASpmB,KAAK68B,sBAC7ChrB,GACA7R,KAAK88B,mCAAmCjrB,GAG3C7R,KAAKm8B,iBAAiBzrB,IACvB1Q,KAAKy8B,SASbR,GAAgBp8B,UAAUi9B,mCAAqC,SAAUC,GACrE,IAAIC,EAASD,EAAY5oB,MAAM,KACX,EAAhB6oB,EAAOl8B,SACPd,KAAKm8B,iBAAiBzrB,GAAKssB,EAAO,IAEtC,IACI,GAAoB,EAAhBA,EAAOl8B,OAAY,CACnB,IAAIm8B,GAAOD,EAAO,GAClBh9B,KAAKm8B,iBAAiBG,iBAAmB,IAAIxwB,KAAKmxB,GAClDj9B,KAAKm8B,iBAAiBG,gBAA0D,EAAxCt8B,KAAKm8B,iBAAiBG,gBAAsBt8B,KAAKm8B,iBAAiBG,gBAAkB,EAEhI,GAAoB,EAAhBU,EAAOl8B,OAAY,CACnB,IAAIo8B,GAAWF,EAAO,GACtBh9B,KAAKm8B,iBAAiBK,aAAe,IAAI1wB,KAAKoxB,GAC9Cl9B,KAAKm8B,iBAAiBK,YAAkD,EAApCx8B,KAAKm8B,iBAAiBK,YAAkBx8B,KAAKm8B,iBAAiBK,YAAc,GAGxH,MAAOrsB,GACHnQ,KAAKomB,QAAQzf,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBU,4BAA6B,2DAA6DqP,EAAKuB,iBAAiBtC,GAAI,CAAEN,UAAWqB,EAAKwB,KAAKvC,KAE9K,GAArCnQ,KAAKm8B,iBAAiBK,aACtBx8B,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB4B,yBAA0B,yDAGzGk5B,GAAgBp8B,UAAU48B,MAAQ,WAC9B,IAAI/hB,EAAMJ,EAAcC,MACxBva,KAAKm8B,iBAAiBzrB,GAAKQ,EAAKmD,QAChCrU,KAAKm8B,iBAAiBG,gBAAkB5hB,EACxC1a,KAAKm8B,iBAAiBK,YAAc9hB,EACpC1a,KAAKwT,UAAUxT,KAAKm8B,iBAAiBzrB,GAAI1Q,KAAKm8B,iBAAiBG,gBAAiBt8B,KAAKm8B,iBAAiBK,aAEjGtrB,EAAKK,sBACNvR,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmBC,kCAAmC,kFAGlH66B,GAAgBp8B,UAAU2T,UAAY,SAAU2pB,EAAMF,EAAKC,GAGvD,IAAIE,EAAoBH,EAAMj9B,KAAKiI,OAAO8hB,sBACtCsT,EAAgBH,EAAUl9B,KAAKiI,OAAO6hB,mBACtCwT,EAAe,IAAIxxB,KACnByH,EAAS,CAAC4pB,EAAMF,EAAKC,GACrBE,EAAoBC,EACpBC,EAAaC,QAAQH,GAGrBE,EAAaC,QAAQF,GAEzB,IAAIG,EAAgBx9B,KAAKiI,OAAOilB,aAAeltB,KAAKiI,OAAOilB,eAAiB,KAC5Ehc,EAAKsC,UAAUxT,KAAKomB,QAASpmB,KAAK68B,qBAAsBtpB,EAAOyc,KAAK,KAAO,YAAcsN,EAAaG,cAAeD,GACrHx9B,KAAK08B,uBAAyBpiB,EAAcC,OAEhD0hB,GAAgBp8B,UAAU8S,WAAa,SAAUwqB,EAAMF,EAAKC,GAIxDhsB,EAAKyB,WAAW3S,KAAKomB,QAASpmB,KAAK68B,qBAAsB,CAACM,EAAMF,EAAKC,GAASlN,KAAK,OAEvFiM,GAAgByB,gBAAkB,MAClCzB,GAAgB0B,YAAc,KAC9B1B,GAAgBU,qBAAuB,IACvCV,GAAgB2B,gBAAkB,aAC3B3B,IA5IP,SAASA,GAAgBh0B,EAAQsC,GAC7B,IAAI9J,EAAQT,KACRlB,EAAUC,kBAAkBwL,GAC5BvK,KAAKomB,QAAU,IAAI1f,EAGnB1G,KAAKomB,QAAU7b,EAEdtC,IACDA,EAAS,IAE+B,mBAA/BA,EAAO8hB,sBAChB9hB,EAAO8hB,oBAAsB,WAAc,OAAOkS,GAAgByB,kBAE7B,mBAA5Bz1B,EAAO6hB,mBAChB7hB,EAAO6hB,iBAAmB,WAAc,OAAOmS,GAAgB0B,cAEnE39B,KAAKiI,OAASA,EACdjI,KAAK68B,mBAAqB,WAAc,OAAOp8B,EAAMwH,OAAOqiB,YAAc7pB,EAAMwH,OAAOqiB,aAAe2R,GAAgB2B,gBAAkBn9B,EAAMwH,OAAOqiB,aAAe2R,GAAgB2B,iBACpL59B,KAAKm8B,iBAAmB,IAAIH,GC5BpC,IAAI6B,GACA,aCDAC,GAIA,WAEI99B,KAAK0Q,GAAK,UAGV1Q,KAAKiyB,YAAc,WCRvB8L,GAIA,SAAkB91B,GACdjI,KAAKg+B,YAAc/1B,EAAOklB,cAAgBllB,EAAOklB,eAAiBllB,EAAOklB,eAAiB,IAAM,IAAM,oBCJ1G8Q,IAoDAA,GAAKp+B,UAAUq+B,4BAA8B,SAAUC,EAAqBlR,EAAWmR,GAInF,QAHsB,IAAlBA,IAA4BA,GAAgB,IAE1Bp+B,KAAKq+B,kBAAkBF,IAAyBlR,IAAcjtB,KAAKq+B,kBAAkBpR,GAEvGjtB,KAAKomB,QAAQzf,cAAchH,kBAAgBsH,QAAS9F,EAAmB6D,gCAAiC,gKAC0B,OAFtI,CAMAhF,KAAKs+B,gBAAkBH,EACvB,IAAII,EAAav+B,KAAKs+B,gBAClBrR,IACAjtB,KAAKitB,UAAYA,EACjBsR,EAAa,CAACv+B,KAAKs+B,gBAAiBt+B,KAAKitB,WAAW+C,KAAKiO,GAAKO,kBAE9DJ,GAGAltB,EAAKsC,UAAUxT,KAAKomB,QAAS6X,GAAKQ,mBAAoBC,UAAUH,GAAav+B,KAAKiI,OAAOilB,kBAOjG+Q,GAAKp+B,UAAU8+B,8BAAgC,WAC3C3+B,KAAKs+B,gBAAkB,KACvBt+B,KAAKitB,UAAY,KACjB/b,EAAKkD,aAAapU,KAAKomB,QAAS6X,GAAKQ,qBAEzCR,GAAKp+B,UAAUw+B,kBAAoB,SAAU3tB,GAIzC,QAAkB,iBAAPA,IACNA,GACDA,EAAG+H,MAAM,gBAKjBwlB,GAAKO,gBAAkB,IACvBP,GAAKW,eAAiB,UACtBX,GAAKQ,mBAAqB,cACnBR,IAhGP,SAASA,GAAKh2B,EAAQsC,GAClBvK,KAAKomB,QAAU7b,EAEf,IAAIgJ,EAASrC,EAAK8C,UAAUhU,KAAKomB,QAAS6X,GAAKW,gBAC/C,GAAIrrB,EAAQ,CACR,IAAIypB,EAASzpB,EAAOY,MAAM8pB,GAAKO,iBACX,EAAhBxB,EAAOl8B,SACPd,KAAK0Q,GAAKssB,EAAO,IAIzB,GADAh9B,KAAKiI,OAASA,GACTjI,KAAK0Q,GAAI,CACV1Q,KAAK0Q,GAAKQ,EAAKmD,QACf,IAAIS,EAAO,IAAIhJ,KACX+yB,EAAS3tB,EAAK2D,kBAAkBC,GACpC9U,KAAK8+B,uBAAyBD,EAI9B/pB,EAAKyoB,QAAQzoB,EAAK0F,UAAY,SAC9B,IAAIukB,EAAY,CAAC/+B,KAAK0Q,GAAImuB,GACtB3R,EAAeltB,KAAKiI,OAAOilB,aAAeltB,KAAKiI,OAAOilB,oBAAiB3jB,EAC3E2H,EAAKsC,UAAUxT,KAAKomB,QAAS6X,GAAKW,eAAgBG,EAAU/O,KAAKiO,GAAKO,iBAAmB,YAAc1pB,EAAK2oB,cAAevQ,GAG3H,IAAI8R,EAAS/2B,EAAOqiB,YAAcriB,EAAOqiB,aAAeriB,EAAOqiB,aAAe,aAAe,aAC7FpZ,EAAK0B,cAAc5S,KAAKomB,QAAS4Y,GAIrCh/B,KAAKitB,UAAYhlB,EAAOglB,UAAYhlB,EAAOglB,iBAAc1jB,EAGzD,IAAIg1B,EAAartB,EAAK8C,UAAUhU,KAAKomB,QAAS6X,GAAKQ,oBACnD,GAAIF,EAAY,CAEZ,IAAIU,GADJV,EAAaW,UAAUX,IACWpqB,MAAM8pB,GAAKO,iBACzCS,EAAiB,KACjBj/B,KAAKs+B,gBAAkBW,EAAiB,IAEd,EAA1BA,EAAiBn+B,QAAcm+B,EAAiB,KAChDj/B,KAAKitB,UAAYgS,EAAiB,KC5ClD,IAAIE,GACA,aCAAC,GACA,SAAwB1uB,EAAI2uB,EAAU/yB,GAClCtM,KAAKyuB,QAAU/d,GAAMQ,EAAKmD,QAC1BrU,KAAK2yB,SAAW0M,EAChBr/B,KAAKsM,KAAOA,EACRwF,QAAUA,OAAO8B,UAAY9B,OAAO8B,SAASwE,WAC7CpY,KAAKsM,KAAOwF,OAAO8B,SAASwE,WCGpCknB,IAcAA,GAAiBz/B,UAAU0/B,oBAAsB,SAAUxU,GACvD,IAAIyU,EAAiBx/B,KAAKy/B,SAAWz/B,KAAK0/B,eAAevD,iBACrDqD,GACiC,iBAAtBA,EAAe9uB,KACtBqa,EAAM5f,IAAI2mB,IAAIC,MAAQyN,EAAe9uB,IAGzC1Q,KAAKy/B,UAE0B,iBAApBz/B,KAAKy/B,QAAQ/uB,GACpBqa,EAAM5f,IAAI2mB,IAAIC,MAAQ/xB,KAAKy/B,QAAQ/uB,GAGnCqa,EAAM5f,IAAI2mB,IAAIC,MAAQ/xB,KAAK0/B,eAAevD,iBAAiBzrB,KAIvE4uB,GAAiBz/B,UAAU8/B,2BAA6B,SAAU5U,GAC1D/qB,KAAK0yB,IAAM1yB,KAAK0yB,GAAGpmB,OACnBye,EAAM5f,IAAIunB,GAAK1yB,KAAK0yB,KAG5B4M,GAAiBz/B,UAAU+/B,wBAA0B,SAAU7U,GACvD/qB,KAAK6/B,cAC+B,iBAAzB7/B,KAAK6/B,YAAY7zB,MACxB+e,EAAMvP,KAAK6J,GAAWnE,oBAAsBlhB,KAAK6/B,YAAY7zB,KAE3B,iBAA3BhM,KAAK6/B,YAAYC,QACxB/U,EAAMvP,KAAK6J,GAAWlE,kBAAoBnhB,KAAK6/B,YAAYC,SAIvER,GAAiBz/B,UAAUkgC,mBAAqB,SAAUhV,GAClD/qB,KAAKgyB,SACyB,iBAAnBhyB,KAAKgyB,OAAOthB,KACnBqa,EAAM5f,IAAI6mB,OAAOH,QAAU7xB,KAAKgyB,OAAOthB,IAEb,iBAAnB1Q,KAAKgyB,OAAOE,KACnBnH,EAAM5f,IAAI6mB,OAAOE,GAAKlyB,KAAKgyB,OAAOE,IAEL,iBAAtBlyB,KAAKgyB,OAAOS,QACnB1H,EAAM5f,IAAI6mB,OAAOS,MAAQzyB,KAAKgyB,OAAOS,OAEF,iBAA5BzyB,KAAKgyB,OAAOC,cACnBlH,EAAM5f,IAAI6mB,OAAOC,YAAcjyB,KAAKgyB,OAAOC,eAIvDqN,GAAiBz/B,UAAUmgC,qBAAuB,SAAUjV,GACpD/qB,KAAKigC,WACqC,iBAA/BjgC,KAAKigC,SAASC,eACrBnV,EAAMvP,KAAK6J,GAAWd,sBAAwBvkB,KAAKigC,SAASC,cAExB,iBAA7BlgC,KAAKigC,SAASjC,aACrBjT,EAAMvP,KAAK6J,GAAWf,oBAAsBtkB,KAAKigC,SAASjC,cAItEsB,GAAiBz/B,UAAUsgC,qBAAuB,SAAUpV,GACpD/qB,KAAK4T,UAC2B,iBAArB5T,KAAK4T,SAASse,KACrBnH,EAAMvP,KAAK6J,GAAW3C,YAAc1iB,KAAK4T,SAASse,KAI9DoN,GAAiBz/B,UAAUugC,sBAAwB,SAAUrV,GACzD,GAAI/qB,KAAKwuB,eAAgB,CACrB,IAAIlD,EAAQP,EAAM5f,IAAImgB,OAAS,CAAEmD,aAASllB,EAAWopB,cAAUppB,GACpB,iBAAhCvJ,KAAKwuB,eAAeC,UAC3BnD,EAAMmD,QAAUzuB,KAAKwuB,eAAeC,SAEA,iBAA7BzuB,KAAKwuB,eAAeliB,OAC3Bgf,EAAMhf,KAAOtM,KAAKwuB,eAAeliB,MAEO,iBAAjCtM,KAAKwuB,eAAemE,WAC3BrH,EAAMqH,SAAW3yB,KAAKwuB,eAAemE,UAEzC5H,EAAM5f,IAAImgB,MAAQA,IAG1BgU,GAAiBz/B,UAAUwgC,gBAAkB,SAAUtV,GAC/C/qB,KAAKmyB,MACLpH,EAAM5f,IAAIgnB,IAAMpH,EAAM5f,IAAIgnB,KAAO,GACjCpH,EAAM5f,IAAIgnB,IAAMnyB,KAAKmyB,MAG7BmN,GAAiBz/B,UAAUygC,iBAAmB,SAAUvV,GAChD/qB,KAAK2xB,OACA5G,EAAMvP,OACPuP,EAAMvP,KAAO,IAGkB,iBAAxBxb,KAAK2xB,KAAK1E,YAEjBlC,EAAMvP,KAAK6J,GAAW7B,eAAiBxjB,KAAK2xB,KAAK1E,WAGzB,iBAAjBjtB,KAAK2xB,KAAKjhB,KACjBqa,EAAM5f,IAAIwmB,KAAKjhB,GAAK1Q,KAAK2xB,KAAKjhB,IAEO,iBAA9B1Q,KAAK2xB,KAAK2M,kBACjBvT,EAAM5f,IAAIwmB,KAAKC,OAAS5xB,KAAK2xB,KAAK2M,mBAI9CgB,GAAiBz/B,UAAU0gC,QAAU,SAAUxV,GACvCA,EAAM5f,IAAIyZ,GAAWE,YAAsE,IAAxDnc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWE,YAAYhkB,eACzEiqB,EAAM5f,IAAIyZ,GAAWE,WAE5BiG,EAAM5f,IAAIyZ,GAAWC,UAAkE,IAAtDlc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWC,UAAU/jB,eACrEiqB,EAAM5f,IAAIyZ,GAAWC,SAE5BkG,EAAM5f,IAAIyZ,GAAWI,SAAgE,IAArDrc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWI,SAASlkB,eACnEiqB,EAAM5f,IAAIyZ,GAAWI,QAE5B+F,EAAM5f,IAAIyZ,GAAWM,QAA8D,IAApDvc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWM,QAAQpkB,eACjEiqB,EAAM5f,IAAIyZ,GAAWM,OAE5B6F,EAAM5f,IAAIyZ,GAAWK,SAAgE,IAArDtc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWK,SAASnkB,eACnEiqB,EAAM5f,IAAIyZ,GAAWK,QAE5B8F,EAAM5f,IAAIyZ,GAAWG,WAAoE,IAAvDpc,OAAOsK,KAAK8X,EAAM5f,IAAIyZ,GAAWG,WAAWjkB,eACvEiqB,EAAM5f,IAAIyZ,GAAWG,WAG7Bua,IA1IP,SAASA,GAAiB/0B,EAAQ6sB,GACR,oBAAXtlB,SACP9R,KAAK0/B,eAAiB,IAAIzD,GAAgB7E,EAAe7sB,GACzDvK,KAAK6/B,YAAc,IAAIhC,GACvB79B,KAAKgyB,OAAS,IAAI8L,GAClB99B,KAAKigC,SAAW,IAAIlC,GAAS3G,GAC7Bp3B,KAAK4T,SAAW,IAAIurB,GACpBn/B,KAAK2xB,KAAO,IAAIsM,GAAK7G,EAAe7sB,GACpCvK,KAAKwuB,eAAiB,IAAI4Q,GAC1Bp/B,KAAKy/B,QAAU,IAAIzD,IAEvBh8B,KAAKotB,MAAQ,WAAc,OAAO,MCjB1C,IAAIoT,IAKAA,GAAiB3W,iBAAmB,WAahC,MAZoB,CAChBzf,mBAAoB,aACpB6iB,UAAW,WAAc,OAAO,MAChCnD,iBAAkB,WAAc,OAAO,MACvCI,mBAAoB,WAAc,OAAO,KACzCH,oBAAqB,WAAc,OAAO,OAC1CmD,aAAc,WAAc,OAAO,MACnCC,aAAc,WAAc,OAAO,MACnC/C,6BAA8B,WAAc,OAAO,GACnDgD,MAAO,WAAc,OAAO,MAC5B9C,WAAY,eAIpBkW,GAAiB3gC,UAAUmJ,WAAa,SAAUf,EAAQgB,EAAMC,GAC5D,IAAIzI,EAAQT,KACRo3B,EAAgBoJ,GAAiB3W,mBAEvB,SAAVnpB,EAAoB8N,GACpB5N,EAAO6/B,iBAAiBjyB,GAAS,WAAc,OAAOsS,GAAqBC,UAAU9Y,EAAQuG,EAAO/N,EAAMoJ,WAAYutB,EAAc5oB,OAFxIxO,KAAKygC,iBAAmBzgC,KAAKygC,kBAAoBD,GAAiB3W,mBAClE,IAGIjpB,EAASZ,KACb,IAAK,IAAIwO,KAAS4oB,EACd12B,EAAQ8N,GAEZxO,KAAKomB,QAAUnd,EAAKsB,OACpBvK,KAAKuuB,QAAU,IAAI+Q,GAAiBr2B,EAAKsB,OAAQvK,KAAKygC,kBACtDzgC,KAAK0gC,eAAiBxvB,EAAKsG,aAAatO,EAAYqc,IACpDvlB,KAAKuuB,QAAQnB,MAAQ,WAAc,OAAO3sB,EAAMigC,eAAiBjgC,EAAMigC,eAAuB,OAAI,OAMtGF,GAAiB3gC,UAAUyI,iBAAmB,SAAUyiB,GAChDjsB,EAAUC,kBAAkBgsB,KAKxBA,EAAMze,OAAS8S,GAASrD,cACxB/b,KAAKomB,QAAQ7e,4BAEbvH,KAAKuuB,QAAQkR,SAE0B,iBAA5Bz/B,KAAKuuB,QAAQkR,QAAQ/uB,IAC5B1Q,KAAKuuB,QAAQmR,eAAexD,SAGpCl8B,KAAK2gC,0BAA0B5V,GAC1BjsB,EAAUC,kBAAkBiB,KAAK4qB,cAClC5qB,KAAK4qB,YAAYtiB,iBAAiByiB,KAQ9CyV,GAAiB3gC,UAAUkK,cAAgB,SAAU62B,GACjD5gC,KAAK4qB,YAAcgW,GAEvBJ,GAAiB3gC,UAAU8gC,0BAA4B,SAAU5V,GAExDA,EAAMvP,OACPuP,EAAMvP,KAAO,IAEZuP,EAAM5f,MACP4f,EAAM5f,IAAM,IAEhB4f,EAAM5f,IAAIyZ,GAAWE,WAAaiG,EAAM5f,IAAIyZ,GAAWE,YAAc,GACrEiG,EAAM5f,IAAIyZ,GAAWI,QAAU+F,EAAM5f,IAAIyZ,GAAWI,SAAW,GAC/D+F,EAAM5f,IAAIyZ,GAAWC,SAAWkG,EAAM5f,IAAIyZ,GAAWC,UAAY,GACjEkG,EAAM5f,IAAIyZ,GAAWM,OAAS6F,EAAM5f,IAAIyZ,GAAWM,QAAU,GAC7D6F,EAAM5f,IAAIyZ,GAAWK,QAAU8F,EAAM5f,IAAIyZ,GAAWK,SAAW,GAC/D8F,EAAM5f,IAAIyZ,GAAWG,UAAYgG,EAAM5f,IAAIyZ,GAAWG,WAAa,GACnE/kB,KAAKuuB,QAAQgR,oBAAoBxU,GACjC/qB,KAAKuuB,QAAQqR,wBAAwB7U,GACrC/qB,KAAKuuB,QAAQwR,mBAAmBhV,GAChC/qB,KAAKuuB,QAAQ6R,sBAAsBrV,GACnC/qB,KAAKuuB,QAAQ+R,iBAAiBvV,GAC9B/qB,KAAKuuB,QAAQoR,2BAA2B5U,GACxC/qB,KAAKuuB,QAAQ8R,gBAAgBtV,GAC7B/qB,KAAKuuB,QAAQ4R,qBAAqBpV,GAClC/qB,KAAKuuB,QAAQyR,qBAAqBjV,GAClC/qB,KAAKuuB,QAAQgS,QAAQxV,IAElByV,IA5FP,SAASA,KACLxgC,KAAK2J,SAAW,IAChB3J,KAAK6J,WAAayb,GCP1B,IAAIub,GACA,WACI7gC,KAAK8gC,UAAW,EAChB9gC,KAAK+gC,sBAAuB,EAC5B/gC,KAAKghC,UAAW,EAChBhhC,KAAKihC,WAAY,EAEjBjhC,KAAKkhC,oCAAqC,GAK9CC,IAsCAA,GAAWthC,UAAUqY,eAAiB,WAClC,OAAOlY,KAAK4Y,WAAajB,EAAUO,eAAelY,KAAK4Y,YAAc,MAEzEuoB,GAAWthC,UAAUsY,YAAc,WAC/B,OAAOnY,KAAK4Y,WAAazK,EAAckB,YAAYrP,KAAKomB,QAASzO,EAAUU,eAAerY,KAAKsY,OAAQtY,KAAK4Y,aAAe,MAExHuoB,IA3CP,SAASA,GAAWzwB,EAAInG,GACpBvK,KAAKohC,WAAY,EACjBphC,KAAKqhC,mBAAqB,KAC1BrhC,KAAKshC,KAAO,KACZthC,KAAKuhC,0BAA4B,KACjCvhC,KAAKwhC,iBAAmB,KACxBxhC,KAAKyhC,kBAAoB,KACzBzhC,KAAK0hC,QAAU,KACf1hC,KAAK2nB,QAAU,KACf3nB,KAAK4Y,WAAa,KAClB5Y,KAAK2hC,YAAc,EACnB3hC,KAAKsY,OAAS,KAEdtY,KAAKk5B,OAAS,KAEdl5B,KAAK4hC,gBAAkB,KAEvB5hC,KAAK6hC,oBAAsB,KAE3B7hC,KAAK8hC,qBAAuB,KAE5B9hC,KAAK+hC,qBAAuB,KAE5B/hC,KAAKgiC,QAAU,KAEfhiC,KAAKiiC,0BAA4B,KACjCjiC,KAAKkiC,mBAAqB,IAAIrB,GAE9B7gC,KAAKmiC,cAAgB,EACrBniC,KAAKoiC,iBAAmB,WACTpiC,KAENyhC,kBAAoBjiC,KAAK4W,MAAmF,IAA7EkE,EAAcO,YAFvC7a,KAEwD4hC,gBAFxD5hC,KAE8E8hC,uBAAgC,KAE7H9hC,KAAK0Q,GAAKA,EACV1Q,KAAKomB,QAAU7b,EC3BvB,IAAI83B,IAQAA,GAAYC,YAAc,SAAU5tB,EAAK6tB,EAAoBC,GACzD,IAAIluB,GAAS,EAeb,OAdKxV,EAAUC,kBAAkB2V,KACxB5V,EAAUC,kBAAkB2V,EAAI+tB,aAM5B3jC,EAAUC,kBAAkB2V,EAAI2C,oBAEjC3C,EAAI2C,iBAAiBkrB,EAAoBC,GAAY,GACrDluB,GAAS,IAPbI,EAAI+tB,YAAY,KAAOF,EAAoBC,GAC3CluB,GAAS,IAUVA,GAEX+tB,GAAYK,YAAc,SAAUhuB,EAAK6tB,EAAoBC,GACpD1jC,EAAUC,kBAAkB2V,KACxB5V,EAAUC,kBAAkB2V,EAAIiuB,aAI5B7jC,EAAUC,kBAAkB2V,EAAIkuB,sBACjCluB,EAAIkuB,oBAAoBL,EAAoBC,GAAY,GAJ5D9tB,EAAIiuB,YAAY,KAAOJ,EAAoBC,KAShDH,IArCP,SAASA,UCnBTQ,IAYAA,GAAYhjC,UAAUijC,oBAAsB,SAAUlK,EAAKmK,EAA2Bla,EAASma,GAC3F,IAAIC,GAAmB,EACnBC,GAAiB,EACjBC,GAAc,EAalB,YAZuB,IAAZta,GACPsa,EAAcnjC,KAAKojC,kBAEnBH,EAAuC,iBAAZpa,IAAyD,IAAlCA,EAAQ5N,MACrD+nB,IAAsC,IAA/BA,EAAK/nB,SAEG,IAAR2d,IACZuK,EAAcnjC,KAAKmjC,YACnBF,GAAiD,IAA9BrK,EAAI3d,GACvBioB,GAA+C,IAA9BH,IAAuCjkC,EAAUC,kBAAkB65B,EAAIyK,WAGrFF,GAEAD,IAECD,GAIZJ,GAAYhjC,UAAUyjC,uBAAyB,WAC3C,IAAIhvB,GAAS,EAeb,OAdIxV,EAAUC,kBAAkB44B,iBAC5B74B,EAAUC,kBAAkB44B,eAAe93B,YAC3Cf,EAAUC,kBAAkB44B,eAAe93B,UAAUk7B,OACrDj8B,EAAUC,kBAAkB44B,eAAe93B,UAAUq7B,OACrDp8B,EAAUC,kBAAkB44B,eAAe93B,UAAU0jC,UACrDjvB,GAAS,GASNA,GAEXuuB,GAAYhjC,UAAU2jC,eAAiB,WACnC,IAAIC,EAAe9L,eAAe93B,UAAUk7B,KACxC2I,EAAsB1jC,KAC1B23B,eAAe93B,UAAUk7B,KAAO,SAAUziB,EAAQhJ,EAAKoqB,GACnD,KACQgK,EAAoBZ,oBAAoB9iC,MAAM,IAC5CA,KAAKqjC,UACFrjC,KAAKqjC,SAASnB,mBAAmBpB,UACtC4C,EAAoBC,YAAY3jC,KAAMsY,EAAQhJ,EAAKoqB,GAG3D,MAAOvpB,GACHuzB,EAAoBE,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBgB,sBAAuB,8FAA+F,CAC9M0hC,uBAAwBhB,GAAYiB,gCAAgC9jC,MACpE6P,UAAWqB,EAAKwB,KAAKvC,KAG7B,OAAOszB,EAAa/4B,MAAM1K,KAAMyN,aAGxCo1B,GAAYhjC,UAAU8jC,YAAc,SAAU/K,EAAKtgB,EAAQhJ,EAAKoqB,GAC5D,IAAIhpB,EAGAA,EAFA1Q,KAAK+jC,UAAY/jC,KAAK+jC,SAASvV,gBAAkBxuB,KAAK+jC,SAASvV,eAAeC,QAEzE,IAAMzuB,KAAK+jC,SAASvV,eAAeC,QAAU,IAAMvd,EAAKmD,QAGxDnD,EAAKmD,QAEd,IAAIgvB,EAAW,IAAIlC,GAAWzwB,EAAI1Q,KAAK4jC,MAAMr5B,QAC7C84B,EAAS/qB,OAASA,EAClB+qB,EAASzqB,WAAatJ,EACtB+zB,EAASnB,mBAAmBpB,UAAW,EACvClI,EAAIyK,SAAWA,EACfrjC,KAAKgkC,2BAA2BpL,IAEpCiK,GAAYiB,gCAAkC,SAAUlL,GACpD,IAAItkB,EAAS,GACb,IACSxV,EAAUC,kBAAkB65B,IAC5B95B,EAAUC,kBAAkB65B,EAAIyK,WAChCvkC,EAAUC,kBAAkB65B,EAAIyK,SAASzqB,cAC1CtE,GAAU,UAAYskB,EAAIyK,SAASzqB,WAAa,MAGxD,MAAOzI,IACP,OAAOmE,GAEXuuB,GAAYhjC,UAAUokC,eAAiB,WACnC,IAAIC,EAAevM,eAAe93B,UAAUq7B,KACxCwI,EAAsB1jC,KAC1B23B,eAAe93B,UAAUq7B,KAAO,SAAUiJ,GACtC,IACQT,EAAoBZ,oBAAoB9iC,QAAUA,KAAKqjC,SAASnB,mBAAmBlB,UACnF0C,EAAoBU,YAAYpkC,KAAMmkC,GAG9C,MAAOh0B,GACHuzB,EAAoBE,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBkB,sBAAuB,yFAA0F,CACzMwhC,uBAAwBhB,GAAYiB,gCAAgC9jC,MACpE6P,UAAWqB,EAAKwB,KAAKvC,KAG7B,OAAO+zB,EAAax5B,MAAM1K,KAAMyN,aAGxCo1B,GAAYhjC,UAAUukC,YAAc,SAAUxL,EAAKuL,GAC/CvL,EAAIyK,SAASzB,gBAAkBtnB,EAAcC,OAC7Cqe,EAAM54B,KAAKqkC,0BAA0BzL,EAAIyK,cAAU95B,OAAWA,EAAWqvB,IACrEyK,SAASnB,mBAAmBlB,UAAW,GAE/C6B,GAAYhjC,UAAUykC,gBAAkB,WACpC,IAAIC,EAAgB5M,eAAe93B,UAAU0jC,MACzCG,EAAsB1jC,KAC1B23B,eAAe93B,UAAU0jC,MAAQ,WAC7B,IACQG,EAAoBZ,oBAAoB9iC,QAAUA,KAAKqjC,SAASnB,mBAAmBjB,YACnFjhC,KAAKqjC,SAAS3B,QAAU,EACxB1hC,KAAKqjC,SAASnB,mBAAmBjB,WAAY,GAGrD,MAAO9wB,GACHuzB,EAAoBE,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBc,uBAAwB,+FAAgG,CAChN4hC,uBAAwBhB,GAAYiB,gCAAgC9jC,MACpE6P,UAAWqB,EAAKwB,KAAKvC,KAG7B,OAAOo0B,EAAc75B,MAAM1K,KAAMyN,aAGzCo1B,GAAYhjC,UAAUmkC,2BAA6B,SAAUpL,GACzD,IAAI8K,EAAsB1jC,KAC1B44B,EAAIyK,SAASnB,mBAAmBhB,mCAAqCmB,GAAYC,YAAY1J,EAAK,mBAAoB,WAClH,IACQ8K,EAAoBZ,oBAAoBlK,IACjB,IAAnBA,EAAIE,YACJ4K,EAAoBc,eAAe5L,GAI/C,MAAOzoB,GACH,IAAIs0B,EAAgBvzB,EAAKwB,KAAKvC,GAEzBs0B,IAAqE,GAApDA,EAAclyB,cAAclS,QAAQ,aACtDqjC,EAAoBE,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBiB,qBAAsB,0HAA2H,CACzOyhC,uBAAwBhB,GAAYiB,gCAAgClL,GACpE/oB,UAAWqB,EAAKwB,KAAKvC,SAMzC0yB,GAAYhjC,UAAU2kC,eAAiB,SAAU5L,GAI7C,GAHAA,EAAIyK,SAASvB,qBAAuBxnB,EAAcC,MAClDqe,EAAIyK,SAASnK,OAASN,EAAIM,OAC1BN,EAAIyK,SAASjB,mBACTxJ,EAAIyK,SAAS5B,kBAAoB,EACjCzhC,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBe,qBAAsB,uGAAwG,CACtM2hC,uBAAwBhB,GAAYiB,gCAAgClL,GACpEgJ,gBAAiBhJ,EAAIyK,SAASzB,gBAC9BE,qBAAsBlJ,EAAIyK,SAASvB,2BAGtC,CACD,IAAI4C,EAAa,CACbh0B,GAAIkoB,EAAIyK,SAAS3yB,GACjByJ,OAAQye,EAAIyK,SAASnrB,iBACrB5L,KAAMssB,EAAIyK,SAASlrB,cACnByH,KAAM,OACNN,SAAUsZ,EAAIyK,SAAS5B,kBACvBjiB,QAAqC,MAAzBoZ,EAAIyK,SAAe,SAAgBzK,EAAIyK,SAAe,OAAK,IACvElQ,cAAeyF,EAAIyK,SAASnK,OAC5B5gB,OAAQsgB,EAAIyK,SAAS/qB,QAGrBqsB,EAAqB3kC,KAAK4kC,0BAA0BhM,GACpD+L,IACAD,EAAWC,mBAAuDA,GAEtE3kC,KAAK6kC,4BAA4BH,GACjC9L,EAAIyK,SAAW,OAGvBR,GAAYhjC,UAAU+kC,0BAA4B,SAAUhM,GACxD,IACI,IAAIkM,EAAwBlM,EAAImM,wBAChC,GAA8B,OAA1BD,IAEe,IADHA,EAAsBvyB,cAAclS,QAAQsN,EAAeO,+BACrD,CACd,IAAIwL,EAAiBkf,EAAIoM,kBAAkBr3B,EAAeC,sBAC1D,OAAO8K,EAAoBe,sBAAsBC,IAI7D,MAAOvJ,GACHnQ,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBmB,sCAAuC,gHAAiH,CAChOuhC,uBAAwBhB,GAAYiB,gCAAgClL,GACpE/oB,UAAWqB,EAAKwB,KAAKvC,OAQjC0yB,GAAYhjC,UAAUglC,4BAA8B,SAAUH,EAAYt+B,EAAYue,GAClF,IAA0C,IAAtC3kB,KAAK8vB,QAAQmV,qBAA8BjlC,KAAK8rB,mBAAqB9rB,KAAK8vB,QAAQmV,oBAAqB,CACvG,IAAI18B,EAAOic,GAAqBtX,OAAOw3B,EAAYnlB,GAAqBzZ,SAAUyZ,GAAqBxD,aAAc/b,KAAK4jC,MAAMr5B,OAAQnE,EAAYue,GACpJ3kB,KAAK4jC,MAAMn4B,MAAMlD,QAEZvI,KAAK8rB,qBAAuB9rB,KAAK8vB,QAAQmV,qBAC9CjlC,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBwD,qBAAsB,2LAA2L,KAEhS3E,KAAK8rB,oBAEX+W,GAAYhjC,UAAUqlC,oBAAsB,SAAUR,EAAYt+B,GAC9DpG,KAAK6kC,4BAA4BH,EAAYt+B,IAEjDy8B,GAAYhjC,UAAUyI,iBAAmB,SAAUC,GAC3CvI,KAAK4qB,aAAe5qB,KAAK4qB,YAAYtiB,kBACrCtI,KAAK4qB,YAAYtiB,iBAAiBC,IAG1Cs6B,GAAYhjC,UAAUkK,cAAgB,SAAU8gB,GACxCA,IACA7qB,KAAK4qB,YAAcC,IAI3BgY,GAAYhjC,UAAUslC,gBAAkB,WACpC,GAAKnlC,KAAKolC,kBAAmBplC,KAAKojC,kBAAlC,CAGA,IAAIiC,EAAgBvzB,OAAOwzB,MACvBC,EAAuBvlC,KAC3B8R,OAAOwzB,MAAQ,v//DAAetmC,EAAOgkC,GACjC,IAAIwC,EACJ,GAAID,EAAqBE,oBAAoBzmC,IAAUumC,EAAqBzC,yBAAoBv5B,OAAWA,EAAWvK,EAAOgkC,GACzH,IACIwC,EAAYD,EAAqBG,kBAAkB1mC,EAAOgkC,GAC1DA,EAAOuC,EAAqBlB,0BAA0BmB,EAAWxmC,EAAOgkC,GAE5E,MAAO7yB,GACHo1B,EAAqB3B,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBgB,sBAAuB,wFAAyF,CACzM0hC,uBAAwB7jC,KAAK2lC,iCAAiC3mC,GAC9D6Q,UAAWqB,EAAKwB,KAAKvC,KAIjC,OAAOk1B,EAAcrmC,EAAOgkC,GACvB4C,KAAK,SAAU5c,GAEhB,OADAuc,EAAqBM,gBAAgB7c,EAAUwc,GACxCxc,IAEN8c,MAAM,SAAU9kC,GAEjB,MADAukC,EAAqBQ,cAAc/mC,EAAOwmC,EAAWxkC,GAC/CA,KAGdhB,KAAKojC,mBAAoB,IAE7BP,GAAYhjC,UAAU4lC,oBAAsB,SAAUzmC,GAClD,OAAOgB,KAAKojC,oBAAqD,IAAhCpkC,EAAMic,IAE3C4nB,GAAYhjC,UAAUulC,cAAgB,WAClC,IAAI9wB,GAAS,EAMb,QALKxC,QAAUhT,EAAUC,kBAAkB+S,OAAOk0B,UAC9ClnC,EAAUC,kBAAkB+S,OAAOk0B,QAAQnmC,YAC3Cf,EAAUC,kBAAkB+S,OAAOwzB,UACnChxB,GAAS,GAENA,GAEXuuB,GAAYhjC,UAAU6lC,kBAAoB,SAAU1mC,EAAOgkC,GACvD,IAAItyB,EAGAA,EAFA1Q,KAAK+jC,UAAY/jC,KAAK+jC,SAASvV,gBAAkBxuB,KAAK+jC,SAASvV,eAAeC,QAEzE,IAAMzuB,KAAK+jC,SAASvV,eAAeC,QAAU,IAAMvd,EAAKmD,QAGxDnD,EAAKmD,QAEd,IAAIgvB,EAAW,IAAIlC,GAAWzwB,EAAI1Q,KAAK4jC,MAAMr5B,QAiB7C,OAhBA84B,EAASzB,gBAAkBtnB,EAAcC,MACrCvb,aAAiBgnC,QACjB3C,EAASzqB,WAAa5Z,EAAQA,EAAMsQ,IAAM,GAG1C+zB,EAASzqB,WAAa5Z,EAEtBgkC,GAAQA,EAAK1qB,OACb+qB,EAAS/qB,OAAS0qB,EAAK1qB,OAElBtZ,GAASA,aAAiBgnC,QAC/B3C,EAAS/qB,OAAStZ,EAAMsZ,OAGxB+qB,EAAS/qB,OAAS,MAEf+qB,GAEXR,GAAYhjC,UAAUwkC,0BAA4B,SAAUhB,EAAUrkC,EAAOgkC,EAAMpK,GAC/E,GAAI55B,EAAO,CACP,GAAI0Z,EAAoBC,4BAA4B3Y,KAAK8vB,QAASuT,EAASnrB,iBAAkBlY,KAAKimC,mBAAoB,CAC7GjD,IACDA,EAAO,IAKXA,EAAKkD,QAAU,IAAIC,QAAQnD,EAAKkD,SAAYlnC,aAAiBgnC,SAAWhnC,EAAMknC,SAAiB,IAC/FlD,EAAKkD,QAAQE,IAAIz4B,EAAeI,gBAAiBs1B,EAAS3yB,IAC1D,IAAI21B,EAAUrmC,KAAK8vB,QAAQ1C,OAASptB,KAAK+jC,SAAS3W,QAIlD,OAHIiZ,GACArD,EAAKkD,QAAQE,IAAIz4B,EAAeC,qBAAsBD,EAAeG,0BAA4Bu4B,GAE9FrD,EAEX,OAAOA,EAEN,GAAIpK,EAAK,CACV,GAAI54B,KAAKimC,mBAAqBvtB,EAAoBC,4BAA4B3Y,KAAK8vB,QAAS8I,EAAIyK,SAASnrB,iBAAkBlY,KAAKimC,mBAAoB,CAChJrN,EAAIoC,iBAAiBrtB,EAAeI,gBAAiB6qB,EAAIyK,SAAS3yB,IAClE,IAAI0c,EAAQptB,KAAK8vB,QAAQ1C,OAASptB,KAAK+jC,SAAS3W,QAC5CA,GACAwL,EAAIoC,iBAAiBrtB,EAAeC,qBAAsBD,EAAeG,0BAA4Bsf,GAG7G,OAAOwL,IAIfiK,GAAYhjC,UAAU8lC,iCAAmC,SAAU3mC,GAC/D,IAAIsV,EAAS,GACb,IACSxV,EAAUC,kBAAkBC,KAEzBsV,GADmB,mBACT,UAAYtV,EAAQ,KAGpB,UAAYA,EAAMsQ,IAAM,MAI9C,MAAOa,GACHnQ,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBgB,sBAAuB,kDAAmD,CAAE0N,UAAWqB,EAAKwB,KAAKvC,KAElL,OAAOmE,GAEXuuB,GAAYhjC,UAAUgmC,gBAAkB,SAAU7c,EAAUqa,GACxD,GAAKA,EAGL,IAGI,GAFAA,EAASvB,qBAAuBxnB,EAAcC,MAC9C8oB,EAASjB,mBACLiB,EAAS5B,kBAAoB,EAC7BzhC,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBe,qBAAsB,yGAA0G,CACxMokC,wBAAyBtmC,KAAK2lC,iCAAiC3c,GAC/D4Y,gBAAiByB,EAASzB,gBAC1BE,qBAAsBuB,EAASvB,2BAGlC,CACD,IAAI4C,EAAa,CACbh0B,GAAI2yB,EAAS3yB,GACbyJ,OAAQkpB,EAASnrB,iBACjB5L,KAAM+2B,EAASlrB,cACfyH,KAAM,QACNN,SAAU+jB,EAAS5B,kBACnBjiB,QAA4B,KAAnBwJ,EAASkQ,QAAiBlQ,EAASkQ,OAAS,IACrD/F,aAAcnK,EAASkQ,OACvB9yB,WAAY,CAAE+U,WAAYkoB,EAAS/qB,SAGnCqsB,EAAqB3kC,KAAKumC,2BAA2Bvd,GACrD2b,IACAD,EAAWC,mBAAqBA,GAEpC3kC,KAAK6kC,4BAA4BH,IAGzC,MAAOv0B,GACHnQ,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBmB,sCAAuC,yGAA0G,CACzNgkC,wBAAyBtmC,KAAK2lC,iCAAiC3c,GAC/DnZ,UAAWqB,EAAKwB,KAAKvC,OAIjC0yB,GAAYhjC,UAAUkmC,cAAgB,SAAU/mC,EAAOqkC,EAAUriC,GAC7D,GAAKqiC,EAGL,IAGI,GAFAA,EAASvB,qBAAuBxnB,EAAcC,MAC9C8oB,EAASjB,mBACLiB,EAAS5B,kBAAoB,EAC7BzhC,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBe,qBAAsB,gHAAiH,CAC/MokC,wBAAyBtmC,KAAK2lC,iCAAiC3mC,GAC/D4iC,gBAAiByB,EAASzB,gBAC1BE,qBAAsBuB,EAASvB,2BAGlC,CACD,IAAI4C,EAAa,CACbh0B,GAAI2yB,EAAS3yB,GACbyJ,OAAQkpB,EAASnrB,iBACjB5L,KAAM+2B,EAASlrB,cACfyH,KAAM,QACNN,SAAU+jB,EAAS5B,kBACnBjiB,SAAS,EACT2T,aAAc,EACd/sB,WAAY,CAAE+U,WAAYkoB,EAAS/qB,SAEvCtY,KAAK6kC,4BAA4BH,EAAY,CAAE9tB,MAAO5V,EAAOsF,WAGrE,MAAO6J,GACHnQ,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBmB,sCAAuC,gHAAiH,CAChOgkC,wBAAyBtmC,KAAK2lC,iCAAiC3mC,GAC/D6Q,UAAWqB,EAAKwB,KAAKvC,OAIjC0yB,GAAYhjC,UAAU0mC,2BAA6B,SAAUvd,GACzD,IACI,IAAItP,EAAiBsP,EAASkd,QAAQr9B,IAAI8E,EAAeC,sBACzD,OAAO8K,EAAoBe,sBAAsBC,GAErD,MAAOvJ,GACHnQ,KAAK4jC,MAAMr5B,OAAO5D,cAAchH,kBAAgBsH,QAAS9F,EAAmBmB,sCAAuC,gHAAiH,CAChOgkC,wBAAyBtmC,KAAK2lC,iCAAiC3c,GAC/DnZ,UAAWqB,EAAKwB,KAAKvC,OAIjC0yB,GAAYhjC,UAAU2mC,cAAgB,WAC9BxmC,KAAKsjC,2BAA6BtjC,KAAKmjC,cACvCnjC,KAAKwjC,iBACLxjC,KAAKikC,iBACLjkC,KAAKskC,kBACLtkC,KAAKmjC,aAAc,IAG3BN,GAAYhZ,iBAAmB,WAgB3B,MAfa,CACTob,oBAAqB,IACrBwB,qBAAqB,EACrBC,sBAAsB,EACtB5tB,2BAA2B,EAC3BU,iCAAkC,CAC9B,0BACA,+BACA,0BACA,iCAEJL,8BAA0B5P,EAC1B6jB,WAAO7jB,EACPyP,uBAAuB,IAI/B6pB,GAAY8D,eAAiB,WACzB,MAAO,CACH1B,yBAAqB17B,EACrBk9B,yBAAqBl9B,EACrBm9B,0BAAsBn9B,EACtBuP,+BAA2BvP,EAC3BiQ,sCAAkCjQ,EAClC6jB,WAAO7jB,EACPyP,2BAAuBzP,EACvB4P,8BAA0B5P,IAGlCs5B,GAAYhjC,UAAUmJ,WAAa,SAAUf,EAAQgB,EAAMC,GACvD,IAAKlJ,KAAKmjC,cAAgBnjC,KAAKojC,kBAAmB,CAC9CpjC,KAAK4jC,MAAQ36B,EACb,IAAImuB,EAAgByL,GAAYhZ,mBAEhC,IAAK,IAAIrb,KADTxO,KAAK8vB,QAAU+S,GAAY8D,iBACTvP,EACdp3B,KAAK8vB,QAAQthB,GAASsS,GAAqBC,UAAU9Y,EAAQuG,EAAOq0B,GAAYh5B,WAAYutB,EAAc5oB,IAQ9G,IANyC,IAArCxO,KAAK8vB,QAAQ2W,qBACbzmC,KAAKwmC,iBAEiC,IAAtCxmC,KAAK8vB,QAAQ4W,sBACb1mC,KAAKmlC,kBAEe,EAApBj8B,EAAWpI,QAAcoI,EAAY,CAErC,IADA,IAAI09B,OAAU,EAAQnvB,EAAQ,GACtBmvB,GAAWnvB,EAAQvO,EAAWpI,QAC9BoI,EAAWuO,IAAUvO,EAAWuO,GAAO5N,aAAeyb,KACtDshB,EAAU19B,EAAWuO,IAEzBA,IAEAmvB,IACA5mC,KAAK+jC,SAAW6C,EAAQrY,YAKxCsU,GAAYh5B,WAAa,uBAClBg5B,IApgBP,SAASA,KACL7iC,KAAK8rB,mBAAqB,EAC1B9rB,KAAK6J,WAAag5B,GAAYh5B,WAC9B7J,KAAK2J,SAAW,IAChB3J,KAAKimC,kBAAoBn0B,QAAUA,OAAO8B,UAAY9B,OAAO8B,SAASmE,MAAQjG,OAAO8B,SAASmE,KAAKxF,cACnGvS,KAAKmjC,aAAc,EACnBnjC,KAAKojC,mBAAoB,MCE7ByD,IA0BAA,GAAehnC,UAAUirB,WAAa,SAAUC,EAAOrG,GACnD1kB,KAAK+lB,YAAY+E,WAAWC,EAAOrG,IAOvCmiB,GAAehnC,UAAU4lB,cAAgB,SAAUC,GAC/C,IAAI+F,EAAO/F,GAAY,GACvB1lB,KAAK+lB,YAAYN,cAAcgG,IAOnCob,GAAehnC,UAAUksB,yBAA2B,SAAUlF,GAC1D,IAAIigB,EAAQjgB,GAAuB,GACnC7mB,KAAK+lB,YAAYgG,yBAAyB+a,IAO9CD,GAAehnC,UAAUysB,eAAiB,SAAUzc,IAC3CA,EAAUA,WAAaA,EAAU+G,QAClC/G,EAAUA,UAAYA,EAAU+G,OAEpC5W,KAAK+lB,YAAYuG,eAAezc,IAQpCg3B,GAAehnC,UAAU0sB,SAAW,SAAU1c,GAC1C7P,KAAK+lB,YAAYwG,SAAS1c,IAQ9Bg3B,GAAehnC,UAAUwrB,WAAa,SAAUC,EAAO5G,GACnD1kB,KAAK+lB,YAAYsF,WAAWC,EAAO5G,IAgBvCmiB,GAAehnC,UAAU0rB,YAAc,SAAUC,EAAQ9G,GACrD1kB,KAAK+lB,YAAYwF,YAAYC,EAAQ9G,IAQzCmiB,GAAehnC,UAAUmsB,eAAiB,SAAU1f,GAChDtM,KAAK+lB,YAAYiG,eAAe1f,IAUpCu6B,GAAehnC,UAAUqsB,cAAgB,SAAU5f,EAAMgD,EAAKoV,EAAkBpU,GAC5EtQ,KAAK+lB,YAAYmG,cAAc5f,EAAMgD,EAAKoV,EAAkBpU,IAEhEu2B,GAAehnC,UAAUorB,gBAAkB,SAAU3e,GACjDtM,KAAK+lB,YAAYkF,gBAAgB3e,IAQrCu6B,GAAehnC,UAAUsrB,eAAiB,SAAU7e,EAAMlG,EAAYkK,GAClEtQ,KAAK+lB,YAAYoF,eAAe7e,EAAMlG,EAAYkK,IAEtDu2B,GAAehnC,UAAU+sB,wBAA0B,SAAUjC,GACzD,OAAO3qB,KAAK+lB,YAAY6G,wBAAwBjC,IAYpDkc,GAAehnC,UAAUq+B,4BAA8B,SAAUC,EAAqBlR,EAAWmR,QACvE,IAAlBA,IAA4BA,GAAgB,GAChDp+B,KAAKoG,WAAWmoB,QAAQoD,KAAKuM,4BAA4BC,EAAqBlR,EAAWmR,IAM7FyI,GAAehnC,UAAU8+B,8BAAgC,WACrD3+B,KAAKoG,WAAWmoB,QAAQoD,KAAKgN,iCAQjCkI,GAAehnC,UAAUqlC,oBAAsB,SAAUR,GACrD1kC,KAAK+mC,aAAa7B,oBAAoBR,IAQ1CmC,GAAehnC,UAAUsmB,MAAQ,SAAUuT,QACzB,IAAVA,IAAoBA,GAAQ,GAChC15B,KAAKiJ,KAAKsC,0BAA0B9C,QAAQ,SAAUY,GAClDA,EAASZ,QAAQ,SAAUu+B,GACvBA,EAAQ7gB,MAAMuT,QAS1BmN,GAAehnC,UAAUonC,gBAAkB,SAAUC,GAGjD,QAFmB,IAAfA,IAAyBA,GAAa,GAEtCA,GAAclnC,KAAKiI,OAAOiB,YAA8C,EAAhClJ,KAAKiI,OAAOiB,WAAWpI,OAC/D,MAAM,IAAIgJ,MAAM,yCAEpB,IAAIZ,EAAa,GACbi+B,EAAqB,IAAIzQ,GAY7B,OAXAxtB,EAAWhJ,KAAKinC,GAChBj+B,EAAWhJ,KAAKF,KAAKoG,YACrB8C,EAAWhJ,KAAKF,KAAK+mC,cACrB79B,EAAWhJ,KAAKF,KAAK+lB,aAErB/lB,KAAKiJ,KAAKD,WAAWhJ,KAAKiI,OAAQiB,GAElClJ,KAAKonC,aACLpnC,KAAKkM,mBACLlM,KAAKqnC,4BAA4BrnC,MACjCA,KAAKuuB,QAAUvuB,KAAKoG,WAAWmoB,QACxBvuB,MAQX6mC,GAAehnC,UAAUynC,yBAA2B,SAAUC,GAG1D,IAAK,IAAI/4B,KAASxO,KACO,iBAAVwO,IACP+4B,EAAQ/4B,GAASxO,KAAKwO,KAQlCq4B,GAAehnC,UAAUunC,WAAa,WAElC,IACI,GAAIl2B,EAAKuD,QAAQzU,KAAKunC,QAAQ1/B,OAAQ,CAGlC,IADA,IAAI/G,EAASd,KAAKunC,QAAQ1/B,MAAM/G,OACvBH,EAAI,EAAGA,EAAIG,EAAQH,KAExB+M,EADW1N,KAAKunC,QAAQ1/B,MAAMlH,MAGlCX,KAAKunC,QAAQ1/B,WAAQ0B,SACdvJ,KAAKunC,QAAQ1/B,OAG5B,MAAOgI,GACH,IAAIzJ,EAAa,GACbyJ,GAA2C,mBAAvBA,EAAUnQ,WAC9B0G,EAAWyJ,UAAYA,EAAUnQ,cAU7CmnC,GAAehnC,UAAUqM,iBAAmB,WACxClM,KAAKiJ,KAAKiD,oBAEd26B,GAAehnC,UAAUwnC,4BAA8B,SAAUG,IAExDA,EAAoBzhB,YAAY9d,OAAOw/B,4BAA+B,mBAAoB31B,SAiBtFZ,EAAK+F,gBAAgB,eAhBA,WAQtBuwB,EAAoBrhB,OAAM,GAG1B,IAAIhb,EAAMq8B,EAAoBzhB,YAAY9c,KAAkB,YAAEqc,IAC1Dna,GAAOA,EAAIojB,SAAWpjB,EAAIojB,QAAQmZ,iBAClCv8B,EAAIojB,QAAQmZ,gBAAgB9K,YAIhC4K,EAAoBzhB,YAAY9c,KAAKsB,OAAO5D,cAAchH,kBAAgBsnB,SAAU9lB,EAAmBoB,oCAAqC,4CAIxJskC,GAAehnC,UAAU8nC,eAAiB,WACtC3nC,KAAKiI,OAAOmE,sBACRpM,KAAKiI,OAAOmE,uBAA6D,EAApCpM,KAAKiI,OAAOmE,sBAA4BpM,KAAKiI,OAAOmE,sBAAwB,KAElHy6B,IAlRP,SAASA,GAAeU,GAEpBA,EAAQ1/B,MAAQ0/B,EAAQ1/B,OAAS,GACjC0/B,EAAQK,QAAUL,EAAQK,SAAW,EACrC,IAAI3/B,EAASs/B,EAAQt/B,QAAU,GAE3BA,IAAWA,EAAOmC,qBAClBnC,EAASs/B,EACT3d,GAAoBuF,QAAU,SAElCnvB,KAAK+lB,YAAc,IAAI6D,GACvB5pB,KAAKoG,WAAa,IAAIo6B,GACtBxgC,KAAK+mC,aAAe,IAAIc,GACxB7nC,KAAKiJ,KAAO,IAAIiB,EAChBlK,KAAKunC,QAAUA,EACfvnC,KAAKiI,OAASA,EACdjI,KAAK2nC,iBC9Bb,IAAIG,IAWAA,GAAsBjoC,UAAUkoC,yBAA2B,SAAUzP,GACjE,IAAI73B,EAAQT,KAEPA,KAAKgoC,yBACNhoC,KAAKioC,eAAerb,wBAAwB,SAAUrkB,GAClD9H,EAAMynC,2BAA2B3/B,KAErCvI,KAAKgoC,wBAAyB,GAElChoC,KAAKmoC,OAAOjoC,KAAKo4B,IAErBwP,GAAsBjoC,UAAUqoC,2BAA6B,SAAU3/B,GAGnE,OADAA,EAAKiT,KAAKN,GAAiBlb,KAAKmoC,OACzB5/B,GAEXu/B,GAAsBjoC,UAAUmsB,eAAiB,SAAU1f,GACvDtM,KAAKioC,eAAejc,eAAe1f,IAEvCw7B,GAAsBjoC,UAAUqsB,cAAgB,SAAU5f,EAAMgD,EAAKlJ,EAAYkK,GAC7EtQ,KAAKioC,eAAe/b,cAAc5f,EAAMgD,EAAKlJ,IAEjD0hC,GAAsBjoC,UAAU4lB,cAAgB,SAAUnZ,EAAMgD,EAAKlJ,EAAYkK,EAAcgP,GAC3F,IAAI8oB,EAAY,CACZ97B,KAAMA,EACNsZ,IAAKtW,EACLlJ,WAAYA,EACZkK,aAAcA,GAGlBtQ,KAAKioC,eAAexiB,cAAc2iB,IAEtCN,GAAsBjoC,UAAUirB,WAAa,SAAUxe,EAAMlG,EAAYkK,GACrEtQ,KAAKioC,eAAend,WAAW,CAAExe,KAAMA,KAE3Cw7B,GAAsBjoC,UAAUwoC,gBAAkB,SAAU33B,EAAI4H,EAAQC,EAAa8B,EAAUiuB,EAAW9oB,EAASE,GAC/G1f,KAAKioC,eAAe/C,oBAAoB,CACpCx0B,GAAIA,EACJyJ,OAAQ5B,EACRqH,KAAMvF,EACNiF,SAAUgpB,EACVliC,WAAY,CAAE+U,WAAY7C,GAC1BkH,QAASA,EACT2T,aAAczT,KAGtBooB,GAAsBjoC,UAAUysB,eAAiB,SAAUzc,EAAW04B,EAAWniC,EAAYkK,EAAcuM,GACvG7c,KAAKioC,eAAe3b,eAAe,CAC/Bzc,UAAWA,KAGnBi4B,GAAsBjoC,UAAU0rB,YAAc,SAAUjf,EAAMuiB,EAASC,EAAaxY,EAAKyI,EAAK3Y,GAC1FpG,KAAKioC,eAAe1c,YAAY,CAAEjf,KAAMA,EAAMuiB,QAASA,EAASC,YAAaA,EAAaxY,IAAKA,EAAKyI,IAAKA,KAE7G+oB,GAAsBjoC,UAAUwrB,WAAa,SAAU/kB,EAASF,EAAYyW,GACxE7c,KAAKioC,eAAe5c,WAAW,CAAE/kB,QAASA,EAASuW,cAAeA,KAEtEirB,GAAsBjoC,UAAUsmB,MAAQ,SAAUuT,GAC9C15B,KAAKioC,eAAe9hB,MAAMuT,IAE9BoO,GAAsBjoC,UAAUq+B,4BAA8B,SAAUC,EAAqBlR,EAAWmR,GACpGp+B,KAAKioC,eAAe1Z,QAAQoD,KAAKuM,4BAA4BC,EAAqBlR,EAAWmR,IAEjG0J,GAAsBjoC,UAAU8+B,8BAAgC,WAC5D3+B,KAAKioC,eAAe1Z,QAAQoD,KAAKgN,iCAErCmJ,GAAsBjoC,UAAU0sB,SAAW,SAAUjmB,EAASgJ,EAAKoH,EAAYC,EAAcC,GACzF5W,KAAKioC,eAAe1b,SAAS,CAAEjmB,QAASA,EAASgJ,IAAKA,EAAKoH,WAAYA,EAAYC,aAAcA,EAAcC,MAAOA,KAE1HkxB,GAAsBjoC,UAAUorB,gBAAkB,SAAU3e,GACxDtM,KAAKioC,eAAehd,gBAAgB3e,IAExCw7B,GAAsBjoC,UAAUsrB,eAAiB,SAAU7e,EAAMlG,EAAYkK,GACzEtQ,KAAKioC,eAAe9c,eAAe7e,EAAMlG,EAAYkK,IAEzDw3B,GAAsBjoC,UAAU2oC,iBAAmB,SAAUvgC,GACzD,MAAM,IAAI6B,MAAM,gDAEpBg+B,GAAsBjoC,UAAUynC,yBAA2B,SAAUC,GAGjE,IAAK,IAAI/4B,KAASxO,KACO,iBAAVwO,IACP+4B,EAAQ/4B,GAASxO,KAAKwO,KAKlCs5B,GAAsBjoC,UAAUonC,gBAAkB,WAG9C,IAAIxmC,EAAQT,KAEZ,GAAIA,KAAKiI,OAAa,KAAG,CACrB,IAAIwgC,EAAwBzoC,KAAKylB,cACjCzlB,KAAKylB,cAAgB,SAAUijB,EAAUtiC,EAAYkK,GACjDm4B,EAAsB/9B,MAAMjK,EAAO,CAAC,KAAMioC,EAAUtiC,EAAYkK,KAIxE,IAAIq4B,EAAiB,cACuB,mBAAjC3oC,KAAKunC,QAAQoB,KACpB3oC,KAAK2oC,GAAkB,SAAUD,EAAUtiC,EAAYkK,GACnD7P,EAAMglB,cAAc,KAAMijB,EAAUtiC,EAAYkK,KAIxD,IAAIs4B,EAAc,WAMlB,MALyC,mBAA9B5oC,KAAKunC,QAAQqB,KACpB5oC,KAAK4oC,GAAe,SAAUt8B,EAAMinB,EAAOjjB,GACvC7P,EAAMqqB,WAAWxe,EAAMinB,EAAOjjB,KAG/BtQ,MAEX8nC,GAAsBje,iBAAmB,SAAU5hB,GAqC/C,OApCKA,IACDA,EAAS,IAGbA,EAAOoK,YAAcpK,EAAOoK,aAAe,gDAC3CpK,EAAO6hB,iBAAmB,KAC1B7hB,EAAO8hB,oBAAsB,MAC7B9hB,EAAOwwB,oBAAmD,EAA7BxwB,EAAOwwB,oBAA0BxwB,EAAOwwB,oBAAsB,OAC3FxwB,EAAO0yB,iBAAoBzkB,MAAMjO,EAAO0yB,kBAA8C,KAA1B1yB,EAAO0yB,iBACnE1yB,EAAO4gC,YAAc33B,EAAK4C,sBAAsB7L,EAAO4gC,aACvD5gC,EAAO+hB,yBAA2B9Y,EAAK4C,sBAAsB7L,EAAO+hB,0BACpE/hB,EAAO+vB,iBAAmB9mB,EAAK4C,sBAAsB7L,EAAO+vB,kBAC5D/vB,EAAO6gC,eAAiB53B,EAAK4C,sBAAsB7L,EAAO6gC,gBAC1D7gC,EAAO8nB,sBAAwB7e,EAAK4C,sBAAsB7L,EAAO8nB,uBACjE9nB,EAAOmE,sBAAwBnE,EAAOmE,uBAAyB,IAC/DnE,EAAOgiB,uBAAyB/Y,EAAK4C,sBAAsB7L,EAAOgiB,yBAC9D/T,MAAMjO,EAAOiiB,qBAAuBjiB,EAAOiiB,oBAAsB,GAAkC,KAA7BjiB,EAAOiiB,sBAC7EjiB,EAAOiiB,mBAAqB,KAEhCjiB,EAAOw+B,oBAAsBv1B,EAAK4C,sBAAsB7L,EAAOw+B,qBAC/Dx+B,EAAOg9B,oBAAuB/uB,MAAMjO,EAAOg9B,qBAAoD,IAA7Bh9B,EAAOg9B,oBACzEh9B,EAAOwvB,oBAAsBvmB,EAAK4C,sBAAsB7L,EAAOwvB,qBAAqB,GACpFxvB,EAAO6Q,0BAA4B5H,EAAK4C,sBAAsB7L,EAAO6Q,2BACrE7Q,EAAOuR,iCAAmCvR,EAAOuR,kCAAoC,CACjF,0BACA,+BACA,0BACA,iCAEJvR,EAAOw/B,2BAA6Bv2B,EAAK4C,sBAAsB7L,EAAOw/B,4BACtEx/B,EAAOsvB,2BAA6BrmB,EAAK4C,sBAAsB7L,EAAOsvB,4BAA4B,GAClGtvB,EAAOkxB,gBAAkBjoB,EAAK4C,sBAAsB7L,EAAOkxB,iBAC3DlxB,EAAOkB,oBAAsB+H,EAAK4C,sBAAsB7L,EAAOkB,qBAC/DlB,EAAOkiB,qBAAuBjZ,EAAK4C,sBAAsB7L,EAAOkiB,sBAChEliB,EAAOmiB,6BAA+BlZ,EAAK4C,sBAAsB7L,EAAOmiB,8BACxEniB,EAAO+Q,sBAAwB9H,EAAK4C,sBAAsB7L,EAAO+Q,uBAC1D/Q,GAEJ6/B,IApKP,SAASA,GAAsBP,EAASU,GACpCjoC,KAAKgoC,wBAAyB,EAC9BhoC,KAAKmoC,OAAS,GACdnoC,KAAKiI,OAAS6/B,GAAsBje,iBAAiB0d,EAAQt/B,QAC7DjI,KAAKioC,eAAiBA,EACtBjoC,KAAKuuB,QAAU,CAAE3B,wBAAyB5sB,KAAK+nC,yBAAyB3Y,KAAKpvB,WCNjF+oC,IAGAA,GAA6BC,eAAiB,SAAUzB,EAASK,GAC7D,IAAIqB,EAAiB,IAAIrf,GAAoB2d,GACzCL,EAAyB,IAAZU,EAKjB,GAAgB,IAAZA,EAGA,OAFAqB,EAAe3B,yBAAyBC,GACxC0B,EAAehC,gBAAgBC,GACxB+B,EAGP,IAAIC,EAAS,IAAIpB,GAAsBP,EAAS0B,GAGhD,OAFAC,EAAO5B,yBAAyBC,GAChC0B,EAAehC,gBAAgBC,GACxBgC,GAGRH,IArBP,SAASA"}