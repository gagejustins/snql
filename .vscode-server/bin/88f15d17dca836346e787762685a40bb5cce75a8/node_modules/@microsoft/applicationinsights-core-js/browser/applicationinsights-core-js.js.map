{"version":3,"file":"applicationinsights-core-js.js","sources":["../dist-esm/JavaScriptSDK.Interfaces/IChannelControls.js","../dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../dist-esm/JavaScriptSDK/CoreUtils.js","../dist-esm/JavaScriptSDK/NotificationManager.js","../dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../dist-esm/JavaScriptSDK/DiagnosticLogger.js","../dist-esm/JavaScriptSDK/ChannelController.js","../dist-esm/JavaScriptSDK/AppInsightsCore.js"],"sourcesContent":["\"use strict\";\r\nexport var MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n\"use strict\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { ChannelController } from './ChannelController';\r\n\"use strict\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Concat all available extensions \r\n        (_a = this._extensions).push.apply(_a, extensions.concat(this.config.extensions));\r\n        // Initial validation \r\n        this._extensions.forEach(function (extension) {\r\n            var isValid = true;\r\n            if (CoreUtils.isNullOrUndefined(extension) || CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                isValid = false;\r\n            }\r\n            if (!isValid) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        // Initial validation complete\r\n        this._extensions.push(this._channelController);\r\n        // Sort by priority\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === this._channelController.priority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < _this._channelController.priority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (this._extensions.length == 0) {\r\n            this._channelController.processTelemetry(telemetryItem); // Pass to Channel controller so data is sent to correct channel queues\r\n        }\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map"],"names":["LoggingSeverity"],"mappings":"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"}