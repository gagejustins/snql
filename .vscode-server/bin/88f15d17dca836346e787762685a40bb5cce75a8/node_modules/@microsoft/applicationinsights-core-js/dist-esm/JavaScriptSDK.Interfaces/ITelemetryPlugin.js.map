{"version":3,"file":"ITelemetryPlugin.js","sourceRoot":"","sources":["../../src/JavaScriptSDK.Interfaces/ITelemetryPlugin.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAClC,YAAY,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\n\r\nimport { ITelemetryItem } from \"./ITelemetryItem\";\r\nimport { IConfiguration } from \"./IConfiguration\";\r\nimport { IAppInsightsCore } from \"./IAppInsightsCore\";\r\n\r\n/**\r\n * Configuration provided to SDK core\r\n */\r\nexport interface ITelemetryPlugin extends IPlugin {\r\n    /**\r\n    * Call back for telemetry processing before it it is sent\r\n    */\r\n    processTelemetry: (env: ITelemetryItem) => void;\r\n\r\n    \r\n    /**\r\n     * Set next extension for telemetry processing\r\n     */\r\n    setNextPlugin: (next: ITelemetryPlugin) => void;\r\n    \r\n    /**\r\n     * Priority of the extension\r\n     */\r\n    priority: number;\r\n}\r\n\r\nexport interface IPlugin {\r\n    /**\r\n     * Initialize plugin loaded by SDK\r\n     */\r\n    initialize: (config: IConfiguration, core: IAppInsightsCore, extensions: IPlugin[]) => void;\r\n    \r\n    /**\r\n    * Extension name\r\n    */\r\n    identifier: string;\r\n\r\n    /**\r\n    * Plugin version (available in data.properties.version in common schema)\r\n    */\r\n    version?: string;\r\n}"]}