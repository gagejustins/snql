export declare enum LoggingSeverity {
    /**
     * Error will be sent as internal telemetry
     */
    CRITICAL = 1,
    /**
     * Error will NOT be sent as internal telemetry, and will only be shown in browser console
     */
    WARNING = 2,
}
/**
 * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered
 */
export declare const _InternalMessageId: {
    BrowserDoesNotSupportLocalStorage: number;
    BrowserCannotReadLocalStorage: number;
    BrowserCannotReadSessionStorage: number;
    BrowserCannotWriteLocalStorage: number;
    BrowserCannotWriteSessionStorage: number;
    BrowserFailedRemovalFromLocalStorage: number;
    BrowserFailedRemovalFromSessionStorage: number;
    CannotSendEmptyTelemetry: number;
    ClientPerformanceMathError: number;
    ErrorParsingAISessionCookie: number;
    ErrorPVCalc: number;
    ExceptionWhileLoggingError: number;
    FailedAddingTelemetryToBuffer: number;
    FailedMonitorAjaxAbort: number;
    FailedMonitorAjaxDur: number;
    FailedMonitorAjaxOpen: number;
    FailedMonitorAjaxRSC: number;
    FailedMonitorAjaxSend: number;
    FailedMonitorAjaxGetCorrelationHeader: number;
    FailedToAddHandlerForOnBeforeUnload: number;
    FailedToSendQueuedTelemetry: number;
    FailedToReportDataLoss: number;
    FlushFailed: number;
    MessageLimitPerPVExceeded: number;
    MissingRequiredFieldSpecification: number;
    NavigationTimingNotSupported: number;
    OnError: number;
    SessionRenewalDateIsZero: number;
    SenderNotInitialized: number;
    StartTrackEventFailed: number;
    StopTrackEventFailed: number;
    StartTrackFailed: number;
    StopTrackFailed: number;
    TelemetrySampledAndNotSent: number;
    TrackEventFailed: number;
    TrackExceptionFailed: number;
    TrackMetricFailed: number;
    TrackPVFailed: number;
    TrackPVFailedCalc: number;
    TrackTraceFailed: number;
    TransmissionFailed: number;
    FailedToSetStorageBuffer: number;
    FailedToRestoreStorageBuffer: number;
    InvalidBackendResponse: number;
    FailedToFixDepricatedValues: number;
    InvalidDurationValue: number;
    TelemetryEnvelopeInvalid: number;
    CreateEnvelopeError: number;
    CannotSerializeObject: number;
    CannotSerializeObjectNonSerializable: number;
    CircularReferenceDetected: number;
    ClearAuthContextFailed: number;
    ExceptionTruncated: number;
    IllegalCharsInName: number;
    ItemNotInArray: number;
    MaxAjaxPerPVExceeded: number;
    MessageTruncated: number;
    NameTooLong: number;
    SampleRateOutOfRange: number;
    SetAuthContextFailed: number;
    SetAuthContextFailedAccountName: number;
    StringValueTooLong: number;
    StartCalledMoreThanOnce: number;
    StopCalledWithoutStart: number;
    TelemetryInitializerFailed: number;
    TrackArgumentsNotSpecified: number;
    UrlTooLong: number;
    SessionStorageBufferFull: number;
    CannotAccessCookie: number;
    IdTooLong: number;
    InvalidEvent: number;
};
export declare type _InternalMessageId = number | typeof _InternalMessageId;
